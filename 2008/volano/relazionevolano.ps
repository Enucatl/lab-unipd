%!PS-Adobe-2.0
%%Creator: dvips(k) p1.7a Copyright 2005 ASCII Corp.(www-ptex@ascii.co.jp)
%%+ based on dvips(k) 5.95a Copyright 2005 Radical Eye Software (www.radicaleye.com)
%%Title: relazionevolano.dvi
%%CreationDate: Mon Mar  3 21:57:51 2008
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMR17 CMR10 CMTT10 CMR12 CMBX12 CMMI10 EURM10 CMMI7
%%+ CMSY10 CMR7 CMSY7 EURM7 CMR5 CMMI5 CMEX10 CMBX8 CMR8 CMTI9 CMMI9
%%+ CMR6 CMR9 CMMI6 CMSY6 CMSY5
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o relazionevolano.ps relazionevolano.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2008.03.03:2157
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 10 2008-01-18 13:31:24Z herbert $
%
% PostScript prologue for pstricks.tex.
% Version 1.03, 2008/01/01
% For distribution and copyright, see pstricks.tex.
%
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin 
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ] cvx def } def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
%-----------------------------------------------------------------------------%

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 7 2007-12-29 22:21:13Z herbert $
%
% PostScript prologue for PSTricks algorithm parser
% Version 0.01, 2008/01/01
% For distribution and copyright, see pstricks.tex.   hv@pstricks.de
%
%-----------------------------------------------------------------------------%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 7 2007-12-29 22:21:13Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.00,  2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSY5
%!PS-AdobeFont-1.1: CMSY5 1.0
%%CreationDate: 1991 Aug 15 07:21:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
readonly def
/FontBBox{21 -944 1448 791}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBAF552B11EFFB6A16C
F03FB920C15AE724EFDF0CCBF00A838D34440FF9FED532F44036AD22561184C5
283722DDFA7285E62754372D716D704AC0E00B2F6AB67154241C7449AA047833
94CEDB08E8C92907FE72A0B05AE36A7B9226ACD6E7890A0B528FDDE84A950FC6
801DE75CF2E739E9121149CCB8B1C87A106822648D84A3D3FBF295EE6C4BF403
BBE9A1C1F6DAEDD1E642ACC486E609703D7612BFFD10C324F5DC710811F7F614
3691B400E3773987424C0D2B0D8A736873C6371DDB2442F05E018A2B5CA9A4AA
17AABB95D09E5890CFFFED5AC01495D89A53D3C89F3D8DBAC85E06561646557A
B16BAE67D1CF1A78683C9A17517679ECC6751DA807B3A04E3B0606848791EAAB
80EE1D62AF09DAC9C60B6D3F85F8F69A2B280076F1EC90179AE289E9F64F7B1D
9B4F39ABBD78356C70516E31E6509F222CDCFA884885FA893F6B29F7D08288C1
86D8D33F8765B96D2B01340BB4047DFC58839446E188E3C89733AD923CE3EA08
1F688968186CEC06FCFCFD77ADD4508C3382029587DD16A448F509615C5299C0
B36E9C9015BFFCD2D5708B7744977B9643FDC4EB53381E403F3969475B9EF982
1E779D3EE2CA5AC0A00D0BB1890FAAF9F24D661661072DC57FAD26277BBF4158
7F943AA92AE296BD423F5F46EA2AF80696B830F8A1AF6E9822701FB138C035B8
4D89EFB2ACE20D6EA0F91DF52C2CC73B0B1D7ACAA0413EAA9584F81FEDACA921
588060CF925FF12AD383ADE080C042D9C2A800FB888EE85DF63718C89784342F
06AE26D4D96AA1DF28B14EB95E7DEDE47779DB00351A8B5994210A5B92493B5A
5F14163075F2FB0C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.1: CMSY6 1.0
%%CreationDate: 1991 Aug 15 07:21:34
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
readonly def
/FontBBox{-4 -948 1329 786}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFB7605D7BA557CC35D6
49F6EB651B83771034BA0C39DB8D426A24543EF4529E2D939125B5157482688E
9045C2242F4AFA4C489D975C029177CD6497EACD181FF151A45F521A4C4043C2
1F3E76EF5B3291A941583E27DFC68B9211105827590393ABFB8AA4D1623D1761
6AC0DF1D3154B0277BE821712BE7B33385E7A4105E8F3370F981B8FE9E3CF3E0
007B8C9F2D934F24D591C330487DDF179CECEC5258C47E4B32538F948AB00673
F9D549C971B0822056B339600FC1E3A5E51844CC8A75B857F15E7276260ED115
C5FD550F53CE5583743B50B0F9B7C4F836DEF7499F439A6EBE9BF559D2EE0571
CE54AEC463244B0F8EAB9E96CB18BD39259CC1FEC10F47FB56A38588CE634209
8F77258607212EE1DCA4F0667B152875B2CF5AC44B930B888ACD9D4B55662542
71239286D82E14CAABE7276AB199E2429C4C3BC32713106A10F5F16C8045A580
86EE21E7783B70FAE03D8D47B5AA13A881D478232DD65DBCD1EB9811C440E362
527EF73FC86FE664ACED80DCD6806CFD932BDEE102B89C22F423992249FC2273
F39C59AEF75B2088527AA973C71A6B134D26EF1ABAB75721971A0E4E52639DA9
2E1C3B2A6FB552CA834F6443E0628DD9CE69E92DA0B9B8ACAF3641FA0A7F1126
8DF8803E683ACCCCDE88C9F6C1838BCE7E8B56A0BC8C5F0300D81479A5087FFD
B8B66527B87F7977C31A54E0506C6D33EBC902841AB7B8D75BC8ADE5397905EF
BCB96AE4B57D308DCF0F74A93177F2DDF3486642A43834DB5B123CFA402E4BA1
6EB4C27AF21C96932E05B79CF951354FF66668C6503CA6FD2089A91A8D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /omega put
dup 105 /i put
dup 116 /t put
readonly def
/FontBBox{11 -250 1241 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF0342CA1080743A076089583
6AD6FB2DC4C13F077F17789476E48402796E685107AF60A63FB0DE0266D55CF1
8D0AD65B9342CB686E564758C96164FFA711B11C1CE8C726F3C7BB1044BBD283
9AA4675747DF61E130A55E297CA5F0182A3F12F9085AF2F503481071724077A9
387E27879A9649AD5F186F33500FAC8F7FA26634BDCE1221EC0ED0E359E5EA5E
6166526FEB90C30D30099FBDC1BC2F9B62EFEEC48345160804AA98F8D0AA54B7
A480E715426651865C8E444EDB798C7E11040AF6E5A7ED1888653C6DBF5E6169
70BCD9C063B63B561EF165BF3AF11F8E519F37C6FDA2827685739DE2C48B5ADE
EE84F067D704D4511DBFA49E166D543CFD9ECD7417055D8A827F51E087CD2927
BAFC7E6CFBD70B0FE969F890A11149D3D44D422C3370495DA9951AEE7253A49F
3A9444C8CD9158D84117299F7F2332FEB0F94E6ED8BC7AA789A3219BC2F227D3
3B5BC75FB53B55D72AF4A6A7BB613FA235B11BB37D059FD87127CEF73D5B3FBF
9F91ABAD78BD9240BD9525EBA78095EA0BDB25D1A19E876F292882EAD5619D46
D20317A345D931F4FF4EAE6216C27044CBA525E3B917CEA25A04C120466C4B93
FC720E6BA832A06CCA0A3916CEF0968D49085AEBD243C41A448289A6F05CE3F5
79148DC112A3CC7E8FF810B8C1A09E05F496C0F1EBA334E42E05C376C98F5F69
C06C71BFC0A2F3AC9951CFBB143C66FB84F9C4ED27DF70869352D61BD5E11508
0797B87C774354F518712BED10630585E99E1C29B15CE3CA1FDDD1A318B0676C
7BDFE25048C43600F4D6031B4B438489B87DD3F04B90A37966C4D6CB86B5E41E
234CB2104A2720F7C0B1E219FDAD168FB94E53C281BD6939C653A96EB32A0CB1
27F10748E8D50D8B7CAE09FFBBB05215C4133CFDAF957E25E474170B3A14B9E1
560C143968211A4B52C5D3FF2B34FE036D05A9F6B61BE31E4111C76503C7407D
D4F68D5AA8EE22A75CA2440311DBB220A0A512B86AF066E7F7304788E6005AD0
85385288133EDB01A3E3F821E8993BF5AFAF0BA2284CD5DD3F5DFCC6518671B8
B396CBB323D147E446A960D6992C7D218271E7484F5EBB5AC171E336F7E7FB80
72C04852E96D4FCEAAE0D79BB8E6F4B28F97C9CBB83FD676F3F9C442582D61A7
A8B44DF5DCF945DCE60B97EE79C16F8CC9B92485372E3019F9990CA5CEE64134
E668393872FCAA9CFE3C18DB0F8E306E00D15C1E69CB7D60C2C6382059636A3D
63B60FF2666CC44E6CA7359B5D1D59EB860B50E967DCA3D50E71EBC12B328308
C16B6211F480EB6FA250065D47D2E0109416F91231CDE76F3D4B29F00D5C9048
449228418F3975893E2291BFD7BE249CBB6F86179605931F9265490D7A2D8D28
B8E6EE25DE20354D5DF4840F5233DA3D9FCCF9E607404CEE05838AD50EA3F179
02AA308B51F6C638E46B50D56DD69945EF6046523BAF100994A6F9B894CFCEDB
12DE53A92778E92F74495F4C476E17CCD75AB53ABAE1CF457FAC1E70DE48C758
8FAEB3972D8805E9D776249F6904D5EAAD1281639E1F51D204DCFF4149F73081
588637CCA258F8699CE97CB3F288CB136BCDA61AFDCEC49AD730D6E3E5D6AA1C
0A8ED518FFEC0CA957AD2E5FAFD38AB9D3B55FD571882B2CC3305CE2C01C9554
B78DD5196875C1450190C9EAAE58A7C150FA51A5339399B768A188B09D177D8C
17D9D56745574CB09069A050BA01A0C1C3D276ED681549949F936C292CDC58A6
8DEBAB29E779BAC9BC1EC8A43E307DAC4FE3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
dup 22 /macron put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FADB679CF58BAFDD3E51DFDD314B91A605515D729EE20C42505FD4E0835
3C9D365B14C003BC6DD352F0228A8C161F172D2551CD1C67CD0B1B21DED53203
046FAFF9B1129167921DD82C5964F9DDDFE0D2686875BD075FC81831A941F20E
C5CD90040A092E559F6D1D3B0E9BB71733595AE0EA6093F986377A96060BF12A
A1B525CD9FA741FE051DD54A32BECD55A868DD63119A4370F8322CCBEC889BC2
A723CB4015FC4AA90AE873EA14DE13382CA9CF0D8DFB65F0ABEDFD9A64BB3F4D
731E2E1C9A1789228FF44116230A70C339C9819676022AB31B5C9C589AE9094B
09882051AD4637C1710D93E8DD117B4E7B478493B91EA6306FDB3FA6D738AAB1
49FBB21A00AC2A999C21445DE3177F21D8B6AAB33869C882613EA6B5EC56476B
5634181ECBF03BFEDB57F079EACE3B334F6F384BDF9D70AEBD592C8ECF21378B
54A8B5DBF7CB9282E16AA517E14843909339B5E7C55B038BF3BB493F3B884A1C
C25F9E8FB912CBE23199AD9D2C3E573727701BA301526C66C3617B9514D6F11F
11930B1D97C17816C85B1BFD9B973A191B33CC3B391815AD14F1CBE935942AEC
D4004E6BEF379066FD72209DC88D2E634E79BCC2B98C766CBD92C561F2703F8A
109E6C6CEC7B866F2FC7ADF646BF492E520319F3B949AB5D84AE990B33344A40
3971F58DFDF8D8D67FA0B8F2A0D884F8C09A5A721319B911DBA0A35903877343
C37BC36C5EB32353272D1E6ED5FCA611BE319A7E1E842CB7576E7F52FB81F784
9CD7930B941246DE6F66F250E0AB154AE3A83850219A685A4C742440D6A5720C
4F6E04FA63CCF9BBF8D0D34CD3B8AA8365AC12EB25C5ED5960DB8C72B587799F
AF584D96924191E59C9FDC3E71F717C28D29D704EA214B27B11F6F7BD29799BD
874C2CADEFF6276677B30DCE9CEB5B89A72CB14FEAA3E6AC15A9BB6048756F9D
14A27758DE5E5CF6B439EC0996BBBCFD5F374B36AE4C2ECB1D3CDB067A90E38D
80ADD3B2D0711083FC85E9A3FA3666EAE5D3E5FE26DF2E7451EB5946F77068E2
A704CF6BA998F4A222D270C41CD87FA83DC25C89E40701528F3AF85F62A08E1B
1E5C4807B526F896918CE974D94643512294B19D85EA5E9BD227352DC97968C9
09F0FA67A62B31D6D69B9C1A552051287AB9D9BE49FD6F2CC441564FC547881D
7C2A6FC0035761DBFD888131D7ECFD04C89EB648EEBCF26A558A2EEA2D224193
A27C50506E04F712C72750BE366D8E22514A800AA06A998DA1F6BA16387C3E4D
0ED47016613492E8572DFDFEBD2EC5EDA98C6B1614EC79AAADC016D28EBF78F6
9230D72C96A9CBAD0DEB6BACCA82F5818FAD510C854F6DD8B118099B46DE293E
F3A8A9BB8B0DF4515798B264A50F34FE8156A8EF66CE684B8ABB2408A2A3E18F
C8BC180E96C846CC0BB305D29DB2FD0F651DEC3F5F21476EB1F3A50841D0404A
8F1D8616F031379F20B856889A714FE91F988736ECBF0F2F09E552AE2B3A1373
D86A40CFF86F2529994EFE8520FABC325810B713DF2DC11FB8B85098A34FB6C7
A7D6D309AAB4C51D64060854342F10EAAE4FB4C73A7AA59D7C32A72BFA41896F
1A7B83251890214034C3A9EC0EB89851972FC83BDDDBA530867EBC0A444573EB
5B53A21531B4B40AC8BC03D3BD23248966DF53B86118F9A6C249E0E39A537718
F7004B211D59D261314873CBF063101680AA29ABC743DC5FE6363598E790C861
4CD44C8219A8143F3F8EF1994988851F77BB8D464E90E564198A6DCC3CC69BFC
48D712492DDA48FA7D70A17E41C319E603B9EF692671CDA3DA3DE2B1A44E5FA2
881E9A2CE04CCA972AC162DE78B27F34E6DB5FCBF3D60D1FA2DF68362BB2C607
B75E2BCF1AC5B72D6855A25A8275A8AA6958ED015AF95236FF008776BD1F7DA8
D1BE6E95103268C063D96377E4940AF260401A233C8785C8100A195FF04ADB14
F172F672B83BE396122BB66DFDFAB3BDD50B739F218FE6FFF6C239354183F272
0C404E58AB50348F19418ADEE0370EFCD3FF2FD1012E893F210DFD9AEA54654A
B7B27E2B02D1BF8910DC3A00F57B9B292621A4B00029CEEB1E059A2FE19D3BC7
49E7176014C56C63B933BD88BCF71CA7D5445807E44E46261B941F4697D9BE8B
2333111178571809BA10C5A799DAF21776661015DFF653248021788E40896B37
7A30705C7B909DA1990F4E06A817C3E9988FF39084962CA8D4A5439A26EAE8FD
5EA3292A71E541E9D91C63C9F692622F6C5E7C86BAB00D449B517879B987CED8
8221B779BF4DF33A74F47B19306A5521FEDCAE1A773EE47A8BE71EC0463FAA24
15375BC37926833147BEC1FBE1E3FFE6A3E15330F3BE3C5713096B07AC2264EF
61666EBA6113452F1BB4C08A1E4BA42CC4EB72E7BB661687F4443E50E66427B9
A20564E98A0EE0B29B68F6B1A78C9FD23AA5A5B5BFD2626130AA76BAEDFCAD59
40161F1BC4F5245D406B45D20A2BD323CB5F5782E40ED9F776A1715BA4ABFD0D
2EC5C6B7961FC49DD92AF5911FA24E186F9CC5A9FB07DB6C14FD5581AFAE5875
68271B0BF4444777C3E5D4BE4A4D6689B05BB6C2C41BEFE1E863699D0946A683
21AD477F6A3B602F318B73A0AE90AC8EB66681DDD881ADA7621E177E6391707A
89C7E763D3CA8206AFC650A7AC84C523BC46F6FB1BB9A9EBEC8E72CC96EA9F5D
04D0822CB3CB4BB71DE5B7F76BA2023AE4815C94EBA5EAC651CBADC587977AE6
6D640C0AB5DA7E56B82E2B465354C65874E178BAE38A4AF80FB8585BF02A72AB
09EB996C7B0E575DCDF56F6B0B6F3444F4CE503AEF2E451A7D79B4830FB3B42F
CCC81ECAC2E13B1EE3A4721984914210E3299CE3032C6D11015EA9D73C45C8DE
9344853E05321153BA9F703232EDF73E61E032EFD6DE008E9A5F7BBAF9FF1CA6
9F513206FF8622C47BB2D05DCA220A94A70599423F9BE64E4511E61D4635CA4D
3854F230D022C22A6613AF7E3BA41ED8816AE0AEC18995D089B784BAF77A28B6
9578138489392FB5B36A201B5080686365E4646D15ADE85AA903E80F2FF1FE4F
691CD958D7466E7354894CBB7057DE0BAC43928BAABEE72F27C67B9F3DC2414F
DE7445F530A3DC589D0CD9D211DD00F237FB3C448C13F7F7AA47056CA9558306
BDA1DED2069E9F8D57E883C24B3BB66D1D4920278D3781844990A54D10F652FB
8505BF65FF0A5101C474C008C3B401A42226A308CDC4771CDE11582F79FA5253
16E7C308703DEBD38685BEF8CB79A24E65C6A3889E6C2EFF3BD901BFC164D72A
C5E6192BA7F1E9F41151300D4B5D9CBA131F2B6758383249DB99A60DBE7E00BE
C4A6CD30E528ED4DB4CE188E7446913A7A4147E875CF4EA131882728CD83D856
C9A7C3862F6CEEB8019E1ACAE7A948A0617FE058775BFD128BA6ED0050F73628
BDC91C8ED22F597C77DB7136C06CA34AA4DDDBDE73F49F1554DA72877127F415
455188537FD2132901AFF4F2B0634BEC54C7338B754C76AC1A6F1D816ED040C9
39FE2F6AA51DF4D092FF4FCB54918F35808BEAAA57421D1FE825B540B3CA722F
D9E8B1940F389D3819EDA86D5BA80400D37E2575A4DF2EC6B2A25DF303DC7DED
0B9065E1FC88F4427546809002E688209B78412BD72CF26C665C4838DCCD202E
C7FCA50B1DDD39D4236611DCFB6B9E7E13D3CF76EE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
dup 22 /macron put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 97 /a put
dup 100 /d put
dup 114 /r put
dup 115 /s put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA17D1AFFF95F4224CF7ECEE45C
BFB7C8C77C22A01C345078D28D3ECBF804CDC2FE5025FA0D05CCC5EFC0C4F87E
CBED13DDDF8F34E404F471C6DD2E43331D73E89BBC71E7BF889F6293793FEF5A
C9DD3792F032E37A364C70914843F7AA314413D022AE3238730B420A7E9D0CF5
D0E24F501451F9CDECE10AF7E14FF15C4F12F3FCA47DD9CD3C7AEA8D1551017D
23131C09ED104C052054520268A4FA3C6338BA6CF14C3DE3BAF2EA35296EE3D8
D6496277E11DFF6076FE64C8A8C3419FA774473D63223FFA41CBAE609C3D976B
93DFB4079ADC7C4EF07303F93808DDA9F651F61BCCF79555059A44CBAF84A711
6D98083CEF58230D54AD486C74C4A257FC703ACF918219D0A597A5F680B606E4
EF94ADF8BF91A5096A806DB64EC96636A98397D22A74932EB7346A9C4B5EE953
CB3C80AA634BFC28AA938C704BDA8DC4D13551CCFE2B2784BE8BF54502EBA9AF
D49B79237B9C56310550BC30E9108BB06EAC755D6AA4E688EFE2A0AAB17F20FE
00CD0BFF1B9CB6BDA0FA3A29A3117388B6686657A150CE6421FD5D420F4F7FB5
B0DAA1BA19D638676E9CF159AC7325EF17B9F74E082BEF75E10A31C7011C0FFA
99B797CE549B5C45238DD0FADD6B99D233AC69282DF0D91EA2DBD08CE0083904
A6D968D5AE3BD159D01BDFF42D16111BC0A517C66B43972080D9DD4F3B9AE7FB
11B035CE715C1218B2D779761D8D7E9DEBE277531BD58F313EBD27E33BEF9DC5
50C7821A8BBC3B9FDF899D7EAA0B94493B97AFEAC503EB5ED7A7AB6570650BE4
A6EFA892E36DC414732AA6A35860F5332E49BAEB49C995F86EB0D9BAA67E10CF
8EA1B6AC67C57F052DF0D21D7B4ABFEB3DAEA22D1E6BDD2177D3A1655A8E425E
3849AF2A6280B9AEC6A5EA267EA6B4DF59CE055764FB23C090451AC0D33EEAAE
B8E8C5482F2730C03DA5CB3FF79A31895A75B30CE0344729840CD0FDFA7410F1
652AF7EB29632A7445C96C4F03B5EE90EEB73EDFE8BE305E623C1F5E453FE014
18B91F6795F428963C5B4408A1EB4CE71525358CA16E15A741131D46CD9DAACF
2FB089A461BAE88AE1C1A9DC68F3010FCF6413C1B68EC233D16F11F7052F8036
58ED25A14BB27AF98901D939AC3E1403CC35F040F98DB1E7874C99F39EB20A65
1ED6D0D4E81E181044A39F215D92A851D0900CD83F5B5B0CBEF349DA348D633F
CFB68D8D77BA95C593EA168802C2E6E8AE74F3740D2D0E25E043F9DF3BF8959A
425BA5478D4AD71A4417CB4DB2243E29C7C5D4127AA4B704C28056C9FC0ED20E
414E2701C760928FD38F4F84E4C10904E8FC38B71E605103BFAFBA98E166256B
186CED12E1783ACFA7DAFB15BB1FAA118C691FD8C856D36EE24F810E0E3B10B9
103D74A4B5671EA3FE1B6C18E30CE7F9B1E4013DD2BDD0A114F1D9BE782D7696
C6DF3732AF225EC59B9390BADE52D8036F4A1CA4C9C072C6F82E961314E0BE65
4DB4CA84DAC87E0372F75F611B79370EBE212CA6B64E2DF40215664E723ED6D0
F99743AD7601BAF9840A133D0B05CF9B1634592C80363B9482552211CC438849
A62D742444232DB9519B4A702904EF5A874692B56003DEB26C2AE6D517C1F101
CDB0BD9DB0ED77308F8018517C9EB6837BA3D5F05B883A8CA4FF85A4559B6CEA
CBBD5E2C0B8D16EDB08BFE778AB817EF267DB03572F3DAEDE53320237973172F
0A6DCD21D46B445099C99943E88401721108B2676A7EF935EF658403621A022C
2B310B72C28A0CA098BC6FA221B6C0439F614F7D3233FD0108D55E5592731666
C01C8732C472AA2F67B37991FDC9618F74071C25E8F9176FD7D83370F82A5750
68C154820D6F75CFE55E03A00F5B2B8559E3B9165A1B0013607481DA8AF7BD93
203194AD1A765F745B4831A502FAEE66531725E44CEF18A0A3086C1D4A5634D7
C50ED215202732525CDF86E7864F86AFEA832596C1D64A59218DE16E9C7A3CC3
42E4AEF3B8F5EA911F42BB32DD9116EC46BE8C36BCC9F447C14F54316B4E3C0E
2F80E239A1F6D74E0FF7683C9C5391397611186F17582AC5697E140211D82BBB
1459A3F5F2827728827030228C2202C49F345098C1FAAAC99743E80F62279E27
B8D8050C090E88523DE39A82D9E832AAB5984175A667AE156B438C6EA2CC0BBF
F14CDCC17E7B8B57B53D9CA1ACC10A06CC3D0ADB6FD32140771E57C32DFD634E
F036F1D56FD9AE9602F111C6BD802EFA2FC2BBFEFDC8D2A848668E30381C02A0
0CFDBDF6A1206581EB11FC0020FCF204FBA53D5236CE8D90EB0F69110C82D324
4FD3CA620D48F8D6CFB4666B23ECBB418C301C2119A7E6D2C273F7664D89479A
0914A8379BBF1A10A646200C36C52383958CCE34AA0FBD5A797686116B6AD26F
0EB4802870D89CE68F83EFDBCEB1BA84C579262C81829B1BB139EC301463A15C
462CCBB3349475CD5123F4EE5A501B9CED50B290AD9045D1342D7E4F9181DD97
6739A8BC26392ECDD3640D2436A28669AC23D67739B82B179E834102E7B0D1B7
E59C6356D9D04D5D638554BAFA08DA35955BEC2153B1C243602AB8C97B5A8025
9938CC2D9406747B191689E738AA144508EC0D4B570FCF704ABBE5D9BD7F2D8B
74EFC8748F3857A1A469B18A2176B4E6B86C7776DFB9180D41971DA05C06F2F1
50996E353CEB0C0973A1095CB73BDA7C92D142FFDAF1F142C74504DBA654A87B
E0DDD23F35073A9966F6C7372C3C8EBA47B77495845F71E8E03CD78063F535CF
A6395DA2E1EE2FD00363307984E2EB4BD4BE7CE35015896AF63F5BF51B22B53C
6BAE1921ABDDB4385CC3E24187399E12A79341A349DBE8771E9885451C31D32C
A121A51BB5373E22CEF769F5BD8D28A541D0513260A96FBB2E5192DDA2C4A474
D25090C0B92F8E34B9A7E452F20D4FF41E5676E6E265FC7666A51045B1D52C12
AC158E1941C7C4D53F861B6D15267EE6F3D59C30352BCFDFE6735044151D5241
117DB515EF5348017273673EA2FEB421D12F5F63A6EE65676051D7A9798FAE5A
38676C525762AB69F1B615A32AA496DFDCCB74A8D7C58B5709B6B708918DD7BF
D1BDA873C8CD45623B7A153EECA04B79406E92DEDF3B1F8B28762E4C4764BC17
D3A294ED71676EB27B79606AFE7B27C9419439E54E180B4AAF4AF1B1C75A0327
B52AF8D9A4B288A390D9DF5BC8D7F34928B6BEEA699F43BBC955A8490DA17862
DF99379CC241ED03D160228B541A3960D5FADDF1429292969534ADF520AA2817
469A8EF562E4C30C11118EAF5CF6C7DB3FD7D0A8A666042E11226C334D9C5974
72D455F09DE668BBA21F74DF4DA8F4AC63D8E4494C17FF8993722C0C1B66DFFC
596973A55E84B4C318850686BBA4DD18B437A753C08186784BBF0F3B1EC35AD7
A6309506109B9C358324DB67136E098F851307B4BC074D6F71F528306226022C
378760E3307F523B4FECD74421459408C1D2789FE98CB5303B1C808104A188E2
166F9A33C32A6419679C75E5717075016CBF29CBD2A6FA712D4082434CAB95D2
FE5D168EE4A6495C231B3586C3AC61167E40C5633A2C6BB8C80AC4F9DEC2F609
FD59B91A3D20B1D6EDAD1656980302E7888D81747FDB9780EE116CC3CAD21DF6
57B99D385A28472538EC0FDC2BEB934A63FB5217A7DED2759ACFF83ECB0B90A6
49DEDD739563B8B9D08C7BC1BF3D5AEA5A7E8A49621CE532831B3A16CA80E91B
EDBB180AE9288906C1A2637DED3F84AAC87F1851AF98B772E3ED90E23CF064F1
9B86A764DACDF5EE3BD4D4A5C0A4929666C4494E9530F03F8CAB5C50650EC7AC
B25C9716E01322D13191310120237C306F064E5D1CF1E0154118E4E3C33D9FDC
ABBC769A116F30CC019239F843046A9DC95DDB4C352ADB102553FDB46DA8D7AB
44811246440105B051B6CD99180926A4F91284748A790D0635AC26101BDC3CD8
F01B372FE5D38A482BCD627A4840C114BAA45F05B4ECF0315EC77B553596B3FB
367D6C2D00BC292F68C50EC01887CB790A3D38DA15E1E0E23A816A3EC1E4CF93
D5A458BADC47A1D98A06B9D53BAB00374D4D7A8696A1DC315348897D13F98AC0
3BECC111C92C79BDF5C56C7B05319CF9827099A5A4A45C26BAFC698F3FBBDC0A
EB90771B61808E9531737F7A006192C18DB4E2D105D35F4C320157183616DF2E
9C2BFFB0ABEE103F877435D9881B3B26244C2793EBE1F5EB6248C729A5ECA278
5A3BF4F966F20850F8CF1B29715D3BEA6303DF11E212FCCA67DE5A1764E20222
6857DCF9CE5075EC2BE441AED3259281374FC2D18FC542522EB6FE437101AA65
6B45549A64819E2DB3187320CB5BDFE6BAFA0C9A6D664C62A93A726B96F1C5EA
3C7E5D168A8738A51FF71D78D84A8719BA0209841806FD5928470BFB71B6C3C2
9252FD50782E44E9A58D7964C309D319E26E8DFF84AD9AF81E0212AE230FDBDD
FD3C61E399E7402D216561C535789880AE4665F9F873F96632130416B4B91F7D
B640C108949A2C17AEAE267CD42175DBD66E70ADA04B55617FDBDA8465CFB37F
71C9E0D07959559C19
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.1: CMMI9 1.100
%%CreationDate: 1996 Jul 23 07:53:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 27 /sigma put
dup 33 /omega put
dup 116 /t put
readonly def
/FontBBox{-29 -250 1075 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D6F5CA5FED4F9AC9ADE41E04F9FC52E758C9F45A92BED935
86F9CFDB57732045913A6422AD4206418610C81D882EE493DE9523CC1BFE1505
DD1390B19BC1947A01B93BC668BE9B2A0E69A968554239B88C00AF9FBDF09CCD
67D3B2094C11A04762FE8CC1E91D020A28B3C122D24BEAACF82313F4604F2FEF
6E176D730A879BE45DD0D4996EF0247AEB1CA0AB08FF374D99F06D47B36F9554
FAD9A2D3CE451B7791C3709D8A1DDDEFBD840C1B42AB824D5A0DFF0E0F15B0B7
22AEEB877FF489581DA6FA8DA64944555101EB16F7AB0B717E148B7B98D8DBFD
730C52937E226545CF8DC3E07C5BA30739BAFCD0F2B44275A6D503F582C0FB4F
449963D0AD2FAFDE33BA3D77BCA9D1DF878DDAFCA2E22CC4BACD542B282164C7
97C2BDE318AF9D501CA21F6E662E7AAB75A5F24D2C182E598D175D44E88AB19A
E7CD59584F95B389183EE21B525BF52A3F23C0FE5383A5565A19361D716F508C
AAB78411CA5A4D27552CC1C435760D5A89D535B71C593E755C616661363308DA
A683F54ED0C23FB2C225A008392B0B719F66F11A946A090B7C00B662A3C69599
B4ECB0CC70C85C4BBBF207E0026F6C7A19F2ACFB7A60804FC98A4BFFD7BFFF2B
9529E6D9D4238002BBC255BC62959D6F3381FE06E0621B879D5FE5B541D45A1E
759A6E7DC32B1D1632368D09A97039DF255B6492B1B2B7E2C1434E8306ECA7D3
5A79B6D614B4979F10988BC76ED53A5F45315CD7DA216221F842FD0F3E050DD2
BAC23C984D506D8F7D614BCB6B244F5F41321549BB0BD041FBF3053307168680
3435E9C942FD1C1C0D9A6B89E1493F97E7AA44F25589105817439757F2C361FF
A8DD0BCDAF62C69F4061B0C080B02E077D0698CB6CEBCB7D1079ABBC85BA83AA
6347C572967519B287C66D37C193AB6F994A14CF773C22BCC4D1B9D37842AE0F
8F93D9CB4A47D2A8E4D89DDCDC030B51847A0A2215EFBA8EF73B0F1B9321263C
16034C224CBF2D15AEAA6587D6C4B446B4FF7D5817A9CCCF3DE67700D74B526C
CB465A46661900418C46B9F52E7CDF3175D936D03EA51636CAE41CE74BF78C1E
B289CAFF4E314936EC695D8EA5B7634C4AC4DB0858D78D9FD9DFECF823914393
4FB8C7517BBBF5F3609265D1BF29624506B10929C61C4DF650C304F2A767817B
3405FB6CDBBC29D5366B8B63B4D304220DB36735A9C3C565BF24A4FA067D1BF8
2F5F7310A0F0BA664C6ED079ECB60E682F127D6EB56E51E3A2E44109624DA9F0
B34F3025B62B46DDA2608D5A7C929D4D980EC0EB160E60BE490A6BC8902938BD
A48D432CBD8532354CB6CA72A3444E54DC9B55E70D84FD3F1315CCD947E3FC38
22141020F8537907B4EE95ADE4780C4CDFEF7D91A62486E48E6EE3AC798E5E64
61121F385A7E52CCF6A4E17871FC5EBCD184CEEAA4A1947D9147DB412EB064D5
004C7B1627D5B88A10567699D4A42B40DD7F0E421C74B7F25DD071914C036971
B48205D54031C2B317814AAABBB41E3AF82D287008F18C2E0E7F9EB96D528C2C
91652A02C585645F23AD3B9B77E57EFDCE465194F61D90EFC111AE5AC330EB7B
23891FC8127F4FF7EB16043904018E6112437F2317701E74B1B742E2E3C0F4AD
F743925CA828C1F0052F3E65DFAB7ADA13E17A9BB11A72DF1A92E2C2B5EA3798
29948212EC4DC74BEB1B18D1EA4AD98C1D942EB098D80F56479F65D5829FD199
9A7C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI9
%!PS-AdobeFont-1.1: CMTI9 1.0
%%CreationDate: 1991 Aug 18 21:08:07
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 103 /g put
dup 105 /i put
dup 114 /r put
readonly def
/FontBBox{-35 -250 1148 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB3DF7BFF10C9BDA4EFE5F68A8CB1526990D1357AE6D2F7C2D2EF8496
4E47B39E6712EB8908A3265E5FAB40567E866C244814449F1E993AAB422C3F1D
DFA8C7118584F2E5197FD4BFA3A8AE9E953C6CD4672C0FF51E41C3A919749C1A
F06650DF4C5E17492164BDBCDF22609A74BFA7F69960A64B9F949FFC2A807458
8579366C4F41BDE1FDFBCC4845FA19BBB6963D65EE8532549274BAEBDFF24FA6
03235D1BE37C06B1938AF369DA75BF38DDBC87A1FF445EAA16E1895ABE9506B9
211955753E447865D33CEF007391D2666A046277A30A49804FFCED3FEA5EB2C3
E52EE14A9F75241EA10C91974CDA6236EB840FD44D6DDE4D9B3266C3B99BD38B
D835BCA8CB819C073480FB972CC028D218F6A1D344CE1B63F4FBF2C826F412E1
6E0B05A26125865A14FD7B7030B478BB8BC6BC395335C3BA940E1C348267F4F9
0AF97BBEE253511940F1048E175D3569F7D05A28851B6F50765FEB6C9654FEDC
1BF52F535DB5BB90C1BD5D2EBF75E0AEBE82B20507F3C28A03746781018D4EB2
298E4F2C27ACF73FA73EBE43F014BB575AAD516C0407B29E1653375135ECB74D
C91372F06FA8EF37C31AF3FA48AE65318EAA6C34830A5377ABB2DFA5DA53A574
433484BA1466709A4B186761655C8E482833B697673E847C691079E7F1DCB8D6
1AD91101D757B83E2090337D525AEECB028FB3C9F6A6E6AD2F322CFDC5A833E6
1CE4EDBF41FD34FD61630581D222F854A76C2EA9FD72796A7C9CC1F6C2FCCD16
E95CA05826A4ECFADA6A5FB83C41A7131E52BA6585DD6DD78515D8F7327DFC6F
9404F89470CA1C4DC270617ACEDDB6DFA7C4A1EDDEE71592632C504830F01A56
1755D606B5C54FB692CFC4B92D489BBF972E37376940DF3558A54C6795D8B6E2
801904A99F9A202ACE050F655A5009FB4252EF03EB15B4AEF52AD6CCF2EB3E21
381284BD87C8B7CDDAC2B45C01B2B7CB83B240A18581B7301003A0B715276B4C
125B518EF7EA56214AFA2F512C7D6BA8E376E7FCC6B0E511E9E809F5776A2EEC
13B7465730402C9F7F99112E0E51D71D42B3FD82F27DF32D78AB677B417C6E01
42EAD9390209532F8C344F2C0AB7BE1ACB59F0D490A392593808E0153044D23E
336CDF59E180AC15D00A9AC0794F539BFFFFC5DD1F6A214F5471AA4B9577F1D8
6EA985D2111F5C90E19A0D32DBD6972502B47EF91160A544FDC874FA0DF9DE30
48E05FDD15E686D777D0755ABC1716AF9F4D2936B754B2B2270C4448C37F558F
04065272BC154055E0CCC09A480F3205DD0CB878B12E4C63FC060CC67BFE10EC
45548224D57398F6CBAD002160A7D3D47F69ECDA288DC0C801B6D8D8BC200DD4
4B4FA56FF4E2EC3515BF260F35ADE5744C83B9146ED68641D438B9747941F02E
CB23EC776943AFEB5353BCA7BB8DC1DC41A5B747CF02B7774EB66CFA8A4B7C76
0A92C54F59FBE44BD18046C7267E9D0495B281E5EA39E662DBE6A9D956659D0C
4E011E4F870FA2DB8CB58982C605DC914DFE5C7FAB1E9245C3A2166817CEFD5C
EBA8DE0DD90835F2F84F72C5CA9CA215C5145889EEAE800F8BFF7B522C911758
313715ADDED75AECFB47395F8A9C1BCDF7D68F41CB0BB4F46622DF809B5B2158
68FA2533B7377BF8782523EAEE658C93FA13432AD10493C570A7F311373F3E62
663AB0126FAB51C816A6580603B723A47F2FD3791C5C218C53F9D41830C10D16
A3C0CA7BA72B3EE08F2EDC08552CA92945AA139895108BAFAD6BEF829D1C9188
116FDA21C4CA9E7E8578A5F95FC81B1945D67D0BE48F3C532A023D71924D9DB7
64E86F41FFB40D45C30F73
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 18 /grave put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 46 /period put
dup 47 /slash put
dup 58 /colon put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 122 /z put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA1772CE422BB1D7283AD675B65
48A7EA0069A883EC1DAA3E1F9ECE7586D6CF0A128CD557C7E5D7AA3EA97EBAD3
9619D1BFCF4A6D64768741EDEA0A5B0EFBBF347CDCBE2E03D756967A16B613DB
0FC45FA2A3312E0C46A5FD0466AB097C58FFEEC40601B8395E52775D0AFCD7DB
8AB317333110531E5C44A4CB4B5ACD571A1A60960B15E450948A5EEA14DD330F
EA209265DB8E1A1FC80DCD3860323FD26C113B041A88C88A21655878680A4466
FA10403D24BB97152A49B842C180E4D258C9D48F21D057782D90623116830BA3
9902B3C5F2F2DD01433B0D7099C07DBDE268D0FFED5169BCD03D48B2F058AD62
D8678C626DC7A3F352152C99BA963EF95F8AD11DB8B0D351210A17E4C2C55AD8
9EB64172935D3C20A398F3EEEEC31551966A7438EF3FEE422C6D4E05337620D5
ACC7B52BED984BFAAD36EF9D20748B05D07BE4414A63975125D272FAD83F76E6
10FFF8363014BE526D580873C5A42B70FA911EC7B86905F13AFE55EB0273F582
83158793B8CC296B8DE1DCCF1250FD57CB0E035C7EDA3B0092ED940D37A05493
2EC54E09B984FCA4AB7D2EA182BCF1263AA244B07EC0EA901C077A059F709F30
4384CB5FA748F2054FAD9A7A43D4EA427918BD414F766531136B60C3477C6632
BEFE3897B58C19276A301926C2AEF2756B367319772C9B201C49B4D935A8267B
041D6F1783B6AEA4DAC4F5B3507D7032AA640AAB12E343A4E9BDCF419C04A721
3888B25AF4E293AACED9A6BDC78E61DA1C424C6503CC1885F762B879B8A901F9
AD07C98340DBAF05A8AA36A81DF117BBE75A6BCA26247A4A5DC992894E7EF9DD
7ACAA3444D837FF6B42F115584B3B0D57959F86208C2B4E9F41CF91D1E5358CE
F5BF1D77AE349C8C81B323FAFB01AB1790EDAF94F81BE63F87B78F27C41FEF39
362B4EBBF5F1FDDD408EF51482E6E96C965601D91E63C4C2B4BFE7BD59D28875
99ED3A19393D1973A0756AA33EF40C4F1A7CF4C4AC5238C009B53EAB80E752F0
7E6526918BC9186DC1AF61DA45F86EB512379824519372C89A65687121C41345
5E46406AAF5CDA147853940E7ED05751AD7CC73865856251C6870115A4CA48E7
306D098E90C6D94D400FC44CE842826F59CFBA598A0C54F4192FB47C2EBC2A86
4049EEEB187F1CDD8ADE0405B9B8E5D682C7F7C6D91A57B7E8A09A8647160608
BA1A349DB72098D1294DE37F684DD6E139F213EC796F20B99B79291A0B2C549B
EBB519B1354A8E71C9C14AD2C27333987AD68B6FE9CC09E450375262848D0D0D
35913C4418EA5D98201D290DBA4E0003DEF4C3FF997152EF8E0921B99D388227
B1C006C183A7CEF41335DC6A997103B8F977DFE8249B9ADC2F44313702CC3DB3
0AE2AC03E92DA8AEC0426E38572EF105E14213FE6D119FA82392017E6F1D9ED2
458A096D245A6F16CD2C0AA5CF6F83C2A71B970FF7EC8198B7310A490C836767
21FBA479AF97570E5CF0C506CF3155AA16A3C67689ACE5A5E2F440E6C736C78D
C28BA0AA8F52A01B0C3E63ADCBC32FABBF3A81441DBBFE12B3F6BD82EC045913
0A5F6D30ECFCA877F0EA6ED4FB2DD19D4B5D71A96F44F802625CEFEE73BFA5EB
C896D25491B013C9C932DEAB706197F3F633A908C14C7DEEAD674260A9506164
3781C409DE442480FDABC6C26A0C2DDF6F40308EB888F81F1E9B5A93C34B586E
5505BE4722FA01CF2C46FB50A7D638C7E933DEA401DDFE3845AF648589A29095
C8255246A5E1B5AA1210486F579BDB0C6826BB88337261B12EEFEF6ACE7607A5
094EC56F0F4DD49202552860A84B87409AD5D790D2DD1BE65016CFC02E1C386E
02EE4E68184FBD90232D9BBC56B594ADC0A93098643F5FBCAA6BB1864F6FDA4B
43F3207437D152DEEF873A71607DED36BF55E7468FF2C74C2AC34905A00C6DD1
ABD5F8B2AF2E248D9661824E96C6310209B1C7D4235799E34F8ABB8A0789B081
CFBF6CF1F84128BA24920E544D7A4E5A1A1F2F2FA7BD45E041CB84D9E574694A
DFA0D7ADD419C73BF98F8EE7479D37BA429880292A6D4EC384282F3A9182C054
910FF77C36D003CDA5FE6FFD342EC73B911B5115A1DD878D462A526B92E43879
1D48DF5ACA0C30712395436806DDC18327D78CCE374B15EA521AD8759056EB5F
EC44B25B25B96519216E380D7008B2C1F100AD03E997827121222A44A59193D3
034BF4D6BABC2A1B9E2FD2939F9DE388F7A6124117F08790CBAB2A12F3D4C41F
C61D5ABC1CA3A8B66977EC01DEC3CFDEED42F4BF68560AF9FE558FDD6D0EAECB
705778006B95448522AF58E4CB5211649F9D4C0F5DFF754128220C9F47F02792
AE60F3E2FD9FB6ED6985F1DE3B7F055027E2BC00EB7D7C63F9DBEB21D48470B4
23DC9A7A815DB9B3428CF323D2B1F1DB61DD44CFB778A4F0161ED4F1FC2BF22F
BF637FCBF404A802E7DECE92B4F1C9CBB85E476DD35086D27439C13828626E83
BE79C1BCD4B0E79AF8B6AEFF675383BD2DA238CCF72A234D8733D7E32870358A
CAFB63055A0151A9B38A331E362E235459C74BED55343F3806772093C622FD08
5C337F6CC8F003326027B0200223D8BE1BCDACDC96BE34C5F8E5561994BF0314
AF733E09D6EA888D42709553204942AAF614D51E25817FB14B43AB2FDC0FFD47
9C83E1430C5101811505B2B8DBDBF482F3799AA99C1B1D8FF9BD8FB7F80002BA
E77DEE9E0FA43092A12CA26719A3AE6710E29F46AC297D22C4D52040496DBBE3
F2A24FDF8D95A432B7829AC306B1ECC05F4110AB2DBCD015E67AC55DBC5C01BA
974C6DBAF22160477835CDBCF729F097141449457F61BF481E9038F973F7F518
50AB96E638AA1B45E9AC225B692EAC75F268124D28CC5E9D10E8D8924440FA30
E7D1251C154702B0FB7F84DF53E85FDD6424E3179905252B98F2803F7230CE7E
C3AEBE74D324EFAA13A1728396405DCED0CB218435595377357AF86DD0FD0311
0125C9A4135581D6F57E984ADFB6D3E443D9633DB0F4AD848D548551979B2741
8A1D3ABBB0946585B87D8EA25871DB1B591711D01BF6F9A404A7F0D86A76E01C
7FF7B8F93CE86E8A8CE43224B925F262A88262B87130B58A6654C80319CD2762
3306FD87E832475C0698EB04BB454FAED5B7CC326D78EB9D3CBE7C99F54202A0
EA0FF5411735C24469B6B3D64E6C0B2A8588AEF8E85C77BD73C716B43BF87DE5
C27F9BFD4244FB928B4CDF31CF822385312DFD13CE0AC0D86284EE661EDB013C
C8AE5E4C4BA786DD021A5111D6D484B06B897727ECE73DB7B62F4047943A3387
A23E8ED0EF387095571A84BEE2448CE7ABE3EB06EF11CD8C415C671123E60CB6
3169378F1A177553E3CE559E0A52ED565B5ED76C6DFF7F0F327F804993914EDC
21C64B87AA053F81284A8C79143165C2474B67B4D6B70DEF5623197033C7166B
B6B52488CD587BA90E15154B30BA6E58D5B7167287BFB3893FF7EF21FBDDEE03
9D20B58EDC0C27B59F49D9E2B8F729A79D3445564FD0AE715EF2EB4BFC85320A
64BB971CC87C6B1ECEDC395615AF0403023C9D2934AEB97258BB0FBC11F4454D
923529BA5457CF46212751D065A253C0CDD30AB40D4DA378926E9F7E2989D489
1F0D51E95BCED05C126551D091344DC014A47A8CD6983AE253A34E8E10827347
1BDFE4A869F78E1CB7C234F4EA7ED9072342D4F5F468E108CCFD296D4BC9C7AE
2A7C9F26EEDBE09FE37387298AC24FDBB3440E0661CA35261E15C277DCA5CBE9
D25FE66EEF0E67EBA4D1BAC84E8F53CB5E666C6A53D0FA43D4F22338032FE217
4D2464B923148F8E83507497B582F3B03534448CA5164859E28F216FEC2C2C5E
5B2504BE69F3F2C4E5A5302B610600156569E0B1368EFB022EBD83F46B4E8436
AD8BED08515F9CAF5D0022914146D65435C7B5703EBD596B3CD953CDC7FE3E81
47FD3D99BF76E90132CEEAAA23B7521D3FA3CBAF934773D5557CDA066CF2A479
ABA94AEA02985DE05DEBA22EFD8E6E750025B455784336217A0D8EA4C82F6CF5
E18E5EC6FFFDFAA1D30E6B3F846FD637C6AE784B3632D1CDC77D4BF641A8A498
D65DA0E21E4570BD70934F2560ABCE2A6D9864F00A25FF71D26BC86FA5F0CA68
D746B204F74FAAF8FAF14BEC2AF0BFE047DD690298E458ED35EC783B55B26A3E
0382E28AC2A61CF0C0E47541CB68AD4770E2557610EEA2F1908893EF3DFFA88F
605929A8895FF0C79616E3446B03A6EA11397EE2660FD68A499E4316BD48DCE2
F3AC1F412A44187C5600FDCA8401AADD71C44EAF03953639191E10FAE4EEC2B2
940E6F05BE8C16E5283914CAD00A072F16FA0CB49DD1FA45FF2A9CD867773647
AA52C80850B6E108F89CE87B8BAF9929C73851E67B7EEB840456548399E9A22A
1C834C03AFC94AB783EADF6BE16F535C0BBE6A49BEB4B034527659BC00B4E05B
56A882D3D8CD108422BB5B84FA836D5A722A4856CE2B9B9FC5884592364308C5
C14CA52B75AE58B595B269E4BC437577E15525404B218620D82FA4B5A1A5DCD3
E8F4402D836066053FDF74FF504C57815CDB71F1EA60AF825939B142F1313504
A8D93BB024B248729FE9EA9E5DD923F87E17EBB3B4F6F96AA5CA9B41F234AFA8
FC98B96AB38631A88107AAD0AF63B3F3C19442D60E65138013F2977A3357FC3C
3755198CDA73BCD39C3A52BD4CE43D33A2D86C69EF90B9716062D3658DFF8B46
56A9D9DAE3CFDEE4E16B353D8D9C2CE4237157F32D7931746E4A1962F4005F40
632C48BFEA20F6F7038829F2B14F9D9C5F4DE261B328F1CD5E6732C0B77274A8
34EC771B5F56BD3D79575BDB70232F916837B02B8C08671A23B6FD707EB5B19C
67E1AF043F135734DC41C0B3342438A71BE4BFA7DDC17D0C863A224510813670
6D8E4F0BAEA9FF11AD07660361CFC298B6658B9568C2B34DF7E9A52DC687FA1A
AE9074CD6862A0B4B2A49DE8D50E8050FB16ED7B689A3B3D09B9857C4A3F0A6C
542A9A7F0432878397F54058F1A83636724FEB6D09915F61EFC4BD4A0EF2FE7C
2E5D485726CEED81D0C07E41ECA24B7EBCD5180E5BA1EC0D994F280EE13D420A
5BC3624012BFD47AF100B1FD05EE6E253AC23FEB3F601E6AB9A918D78CD27FA0
83490944F12AAB97F71948D3FE729D96AEA601203801676732207100D7F95240
EE232F1CACE953F1D8D2A1F1F4E4518660BEEE0D4E21317186F7E0238032FAD2
D05124607033E9CF733C111CA3E5EA08489851D8C745E26C7C5600F4BC8C2E08
F654F47356F3013200208C3D5E2910F680E5888AC615A6679474FC3571AA057E
255C33C4182AB640061F7761BA219583642245B4D76D54F2AED2CF4840C3A190
2C8CAE4E5F12B8D97E66260171848C42D425A91369FA9E2A72263F62D38389DA
688A328DF405AEAFF2ED44F8E5A1F1B5070792CA6A13D58221BCF73E04ACDE45
71D0A75A6F87F4B74A36AA4B914324C0A2E8F7043D275A1B7821D64655B53EEF
F9862E08E5B0E13F7A00622120E8B4D98F313EBD701AAB8BBDB8586D8DEFF5E2
878F48DAA5B5BFA952D3546DC816CB2F3228F3A57DA958A0CAFB20BC53DB8895
04331FB09DFA9C0C37E16AB54BB574F003C8F84DFB316AE00D14D1B262C1D8F6
905544BA38CFD8A864F1D4457FFB4570D2EDD35CF7FFBE15A06F01CA4C6E9351
B8A40168BE9297A287F3B3435B95D55DA2CDDD8AF4D25EB8893818B656A01E37
AD58DDA89673F08F8DF76C1731D26E66EC24C4B97BA89414DD4942C08CF2A419
261396A16A53CC52D4D3EEA0C83DB463F3BC0ECE7A3079F418EF3106E5E71BC6
EAE22BEB85FAC65EB881DBCAE91C079B9F932E30EA3372D242A0233A48769E72
640945FE5CF0788BED950C24C32C36016A375B61E2FB1CF6FD60B4E8472EF534
96949E4B95F29136771B78A284B6C1A7DAC5D39A054E0E40E2CD74DB7FDCC59F
E993D87D3030C34BAA67112400CEB69F33A0E12497062087F17E3A4162AE1E72
7EF8AE8FDABDBEE7363F8479E0D5E504B1638F94120079459C2811C18995C246
4578887E893BAF3FC1F4104B890798F832CF66809043C0BA54FA946439BBEECF
676837BD36B6121BB5A0FAB5EB977D24C2AE6252D10E3E0F840E7145BBF1B8B8
4C17EC278EC54F78BA267676522900771D1598505F21AD7E2D9B99DE5D48665A
51AC4F27C6E050936FB665B80D63E45863F3730DBF5FF6193B61693A0FEB9621
05FEE7F0608E97F78F46A864D8A8922F38D2FD0C2F8F9EC892CA74BD34C174FE
20E51471212147D69B4E0741778D5CC0D87E22877FBE62698914BAD47ACC0C5A
F71F65E9F0D058A9F0AA0FFA8E0014A63FBB1DDDAC2C88113800950DF1EF29A9
FA35965BCE97455D4D82BAC70024DDCCE10F20A888E19F16130E3D1046544215
811C79ACD6501500B86ADA0C09E72615A531C5B8E1EA8D6494263785AE67FF20
45BC2A147C09A1315CC2A56F736D826FAB1DDE7A074073E0BA373FD073084FE3
2F937CC44519999A383A79E8D892FCE2DF3F253EDE6EB9650F153DCCEE248B2D
94A36438FB9FF8994DFFEC7B2360E85C57C6A9DC4C6533CD282F5CD3B58FD59D
00C524629615D5840A4DE9B73DED3A90F11A479B47C251F18C461F90390068D3
B0599E0B98899600EFFC229DF5D43469526143894F19992795A9C5B484910495
7FA654B31B338A9FC67C5D8A8D8261D1AB73EEF5DD6B04B76C1E387CA4F69887
871494CA19D64C22F64C6897E50C1A1E9EF907D89E174755ECE3D2A33C06249B
C5FDA5E9000C686AB9A680F087D99791C04BE1682694A81D827C1918062332EE
2A91EBDEF0C71E0416AA6474C806E068B1832371A8389996DEEAB6F74AD44257
31CC9B24FC0AE10F483E4AD90365A44DE01517E873763A5D17909F52E3D25883
D47B40D7C79B894C424AA23C1AEF0090983F384AACEEA298AA6B3DB826B1912F
0A70953AF6C5861B7D5B71B2FD693D6E8D2ACB53DE2EA132641076593F299D74
203C09C96C9B7059617F9079F4EC631D23344605EBD5A87D4B24CB6A4F1278B3
6EDBA48052A41BBDC138E9B057ED63A06BE40DD15F8CE22D973515739A939D9B
3F930CCFD507CE8F32E68775E0B48A4ACBC4FD929431214A7007259DC9C1D452
A59777C7F28F3D3D7A17FC11F439EB1632857F094232017A97B0971813F099FE
B292C5B11D4BC72093BD72DC183B1BFA8C5D251370889A6340B5AE68BFD7E2BE
4C3641D9ACE83370D0CAB8FEA64D73DC8FE0706F256EC29BF796FCAE2DE3EE01
C59D4556F8CD1CA0494658CA7BD3B02221F1DE7459926818CE3BE07E0F6E7EB6
68F6D315B11167302672D6B4B84CD4963F1A943E7ABB5B4FA7773D5C5D45DCF0
2FA1D722AE1D46FDCACE7861781A32B5A180FFF1947A6215B09FA3CBCE2A7190
EB43D5C3523C905564C6FF91D32BCCFAEADD5CD1682700CEA291CB76C0924546
F9983507ED3F0E911AEC729467024F8AD65378B9DF19C5EAFAC4E9842BEE346A
22CF71FE5C655457E2D96BAA3DB695B96900F41808339F040FE274B4D91E59BB
A328D39FCD3882633C246C4E2BE54E4CB71CC8AE3ED708921AA9622E1C4DE262
D43AB15C69061329B3596564133101C009F1975265FA3F5F02B2980D130E5C02
DAFE79687546E69FFDD3DDDA03836AC04C5C186F40C442C7A4EFCA9D134B5DFC
5BDEFE3EDEF121A366EC6FCD48E4EECD1FB272E33C8A9A06D3FAD465C8E2F8BF
72037CEA2BFDA2DCF3415B023F93F9C239A908383FAF7BF4BC1E54190F6800CA
49A320A7CB6605DFEDD97DEFA3BAE2603D6BEEF1E7B9DE45B02D0F95585AF958
D6F778895C3C14D6CD4147D453A58C3902B01E7DE13CBE6E9F612FDAF321A8DB
62253CCFE7E20DCA19100ABE0540A2AE2E0B1F5CC4A888FDF774576C4911FA06
8F0EDD2FA9CD3A32F5848A4F129ABA1026A386051753EA87523DC481AD350FE7
4EF7BB1D6D3C0D5E90A5D28CCF5B16C84346487F04987BF31D4EC83ACEDF079C
09C275080896C22A1510660679FE872DFED0AEFCB3CF16CEBC97A198347D6137
7B36C637CCE6D59FAE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX8
%!PS-AdobeFont-1.1: CMBX8 1.0
%%CreationDate: 1991 Aug 20 16:36:07
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 55 /seven put
dup 58 /colon put
dup 71 /G put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 108 /l put
dup 111 /o put
dup 114 /r put
readonly def
/FontBBox{-59 -250 1235 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F05C11F9A72F5DA508C30BC4BF52C8B1EC5FB
7F9DDDD0964A6D59193A389D490DAA6F6ACD02CF71C06802F3AE5A001F2B3A6D
EEB60E9DD26DBCE1D29C825A9BEFE3A6572E70DC7B60344C3E0C9C77ABE1804C
7ED61C544F0B4A3D6C7662DE8575C07BED3F6DBA7D64A9C8613AA152B74A140E
AAD9B66E0FAEED6AF9D1820F361C1269A5E90519A3E6D40782E06778C0AFAA30
E8CEAB87054C4D156C1B14B4E8471D78648FDAC70A3B8ED474FA356393A77420
4211F60E397D2FEFC6A8D91A80C84EB9E38E663249FB91D5C8A5CBA68BA04272
5D5D42497E1CF5CA1E62EC2B139F5CD4D6318EBBA7AE28614D2D88709C2A3762
611524B8A1FFC7B0FCBAF77AD8159C354F4887DB1A27781DE0A4BA7DF2CE2025
D9278CED48584E8E6BDF30BFD24284BA1DF828B637BF84A02908BBCED67372C9
EF44711BC2B1DA343C8D9D27A9745525C774F5D639B7AEC197CEEDD06FD27923
35ED0D402AEEB51134665A47847429D91CF419CA9B09DC905F610F8DFC54E606
ADCDA19D5CC68A7BC7108EC9236C64205B23CE68B9BC38EF3E5BF9E0E6ADF404
7365C8D0436609438C82EEB2F356F79186DDF6C1C797D3C278108B1767D15178
C4C3E8ADC2482BAB9536AE8419E5CF3EE1B6E53BDCE2A83E2E485F496A562C10
B3F5A131BB19D1E5414C86C5F995521076340536E10613E42779FA15EFDB451F
53495CE8EFF239E4EC442E1439594549D45F5276F93D496C9AC712D762D0B702
E894290BA028837304AFDDD8BAA6564E9DC307A14A7A206550FADDC7784DE3BF
3390188BBCDDD929C82B1D7B529553BA75ACF5B385D31EE3902D96B2B5DDFFF1
9F0F90FD791E54128C1717F313486896868A34FAFF22E23CEF046D02C2738768
88B166E2FAEBA2623622CA1255A654A7E4F9F47CC1AC7ADB2B86D4984C12A50C
1658DA5658E7DDE2C3FABC0A0979784A2F2BF3D21DDFD49A204A23DEDA35575C
D64967CDA1A770ED5C65F816CF8CC8C8087E11EFCEB8B99AE97B6031A6C54AC6
5B8F179A427D91A8D49D66CB619C98DDB0B1825E269634A61ABB2056FBE4653B
CE67C540050417549FFD539010C1733356766FDB5749F2D2C0DD91818E9C07F8
925C9CA90F4A5D6949A97B1480EF5289BE6CEF7868939EBA6BE083D599748804
A39C6052BBFF8402B0841292AFEC8C530092B74949EEBA7164A6E0B6E2EDD415
30CC71F517E9EEC5BE5F6B3BA0F0BF024E72FB288D54FCBD9CAF59A6235CD53E
76410361C3AF42D06DC39ADE1797D9C68FD274F287F60725DDF493A45AEF0FD6
88755110A3707052FBFA07A21DC3B91464684C90AC7434BCAD3408C615FAE35B
06B2110F5EA8DCA3494EF6DC6EA5058B4D8E6AD2BAFB52FB0D19937D85E34A78
8EDBA89C49B4157E09FFF1796FB0301AE0B924E365F1145D49481BE192DB7FE5
215987022CE4F043D26731805D6375A4A00CE1D6DFAECFCAB5B5160582B4A671
E99D069F168A0F1F76B26EBACEB8D9756114AA15B686E716E20D8541EB5907BA
64896F22D8D815AF305089660F422721455508C574A9AE535B1E51A73AA5022C
95964B5266DAE5B29C92D6E7D88526E3FAF9F109EB58812158FF1692410AF76A
B9385214F4D46AF7BEA9FA1E6C698D18AC5A6CE19652C2F8798C99A19DDCB975
60F85BE291A8E96F9B744E0DA8A4B92956C5427FE92DA2034FA376E9317D628B
D374252EE7043D22E8B3F5DF50505574CCCC7F4284530EF467A4FC596383D4AA
226F35E3955778A85D1C030120B70E2070E9F265833A9A5E140D5E027D8ADA88
D86BDE96D71C73BEE27D3AA255A8B3963460C6AE24FB7ABFBA5415DFDACE8B73
9C980CABAAE915C6AB2F6D735FF00477F5518F666E6423BB2765F0154337ACA3
0F05492070AAAC243CC81350B6AE3CCB026FC34E9ABE753290E1377059EFB93F
1C145546CF09EBD7DED9494E0EBAEFC90BFF56BDEEC30A0BA8165814433F29CC
0EB0D07B6B45243D3045B0A576844ABFE441934BB43F08699D5A1E07F4877444
A0FE1F89964941E6B85DDB48C3ABD6392546065999FD6501302C69683C9F84DB
8653B24BD3B7A7B68DBC935523C3CCA2F9B1E0E57EA3BED9C626CA01E02B64EC
EFF0A3820B1C84FEA2F5A4BE50FA5B1DE75FC27946074496A487587D9CF514CF
B897E8400BACCA8C1931D85A591854CAFFEC4020B864BC1F60514BEC3B539AF7
A0EBC315E5D282A23E7C35AE29068F2ACA63236DB1F657F05C96319AFFEEE9B6
3D5747CE039F762ED9EFFD6EC04C31A4A44BC7753D99A95E15A42F7FFE600988
5B8F118E0F6880BB3C21AC2C307D544CD11C394DD01A1FFE05A99C4CFDC6245B
5ADEB26B5E9D0F04B23058A94EE2A4A3E2AB77DC1F13322981061F33A0C9DE7E
ACFB225A964E574DECC23AC190D6840E02B63A13BB4D009458229A55B451CB6A
D1676157B7BFC1097D9AA0F11BD7A74D1129F51431E76C3FEFA90A00D4AD2F71
9BAB853D4811662FD4316DEEB15692947F6D794ED2882071C6EDF393FB6086FE
F04A2FA06ED30930B5A001F856A788F022C5AA7141BFDA2BC8566337404E7C91
E460D6A82130506BC93B5D7544F5B8DE6A9342B1F5814E6A5B364DCF9F09E8E4
2BB25F86CBDDBDFC94CD3F439B4975178C579E965317D942662173D64CAB3B68
05D9E55F55D000AEF34636C45EAFA07C9267D2976DE452A73E8C9586DF0A5E5B
0620ED51CF9E3E59ED97C60A39AE30CB4C93017DFB863EE53905F14E739DE8B0
9B8D06AB4A83FFCDAD9DA6C98E213C359283F681BBD9E567BCF661558B4BB362
BCDF0D4E7CFB03B2816D5169F3A73862447124200D1EC52B6F307AADF80CFCDD
D09C2741A7E57B3AD74E3B1083DEC67E09F9E3A953806768986E83528148CC48
9A1C0772B7D755C9154A288DBEE2A88AE965548CF34B4FCD22B1C2D73D692956
450EC5CB440F5D18FC4C4D7EAE372206B64C20DC51E13E4B47C777B64014BBE3
C839AC63F64DD66F8D3DA066D2B93A5978B57E57178329BF62157C96FFE00411
38F3E1193233B7A10D2A96197C94CF2E27DF4971500706910EE7F8AB11BB8159
618DD217DB1D5C83FE7CD18EBB1E861C4D99559E7B4493BB27D3E1912C52B771
2CD29742011B239C69B914C549F826FF112C68597AFD2BB82273E82A70A23EF1
69C2DB26FC7A980BB3C990889A57AA553D0BC9BAAC8637A6932D7E713D312C12
51DD04E00FFDCC316BAC58F8D35094B7F42773C624BB4D9AB9B314BD902D1E7D
6E937BEA77E879E37C243B2A8A54D9479E468E0985A11B2662BA4BCA8FDABBD9
71EB789A4178DBC893D029E7C463BFDC2FB9F43D94E8761DC04ED26184237D23
1641F95F6F9C4C1F7FB72E7ED48D4BE38CC3087C43CB360FB661D9A1987CFD39
EA13B49AC84BE8D62A1D04D0C7DD3AB4E59795439F013FE7D445DDA71F72F610
481CC62FA131193C948AE350A69C73F9B9CC3020C7362441A3FEA15868F44F89
63F25B6996CFF432FECC41F6B52A67F13056B3CE37D25610DD46A7EC9002455D
49DABDC637981EB7FE85CDFD2EC19D5BB68383D2939B83153505AA7DC920DE07
83690B60ABEB8E18DD8A0CA44E7A65B711EDC92F7C6797F53E004AD47C6D5519
A91EDC66E6725FB5B2D8DB06A2E07BBB351EAC1E84AE8528086EFE81C46C768D
45B81D0C8939AA86D82F6E725D33E41CCB01EF55A67911766F173841380708A5
F32089A356E9AE4FFB4C99FFBDA274AA3E57F87C710D085BE272EC6C960A9670
22DDED9D41E7BDE0A92E9124E4A28483304B7225C8D1D12BFDB81FF27309605A
872719C03661B0855F8580CD11D9EAF43C6239F246291123796040F8C6A254B3
E9CAFE6FA24B6202A72C4C5EA4FF637C9E139BB3D66BD638A9A7BC78FAC88952
BF64A3AB81E9DE347EC4C32D336303BB6F02504ECA3A22F6FF11B6DFE0D13C26
DCB04334BE0D77E2C3F50A5C235D7F4541DA81F0AF0396D506C2991EA4151209
16C1B0C82679C0A880EAD0205530B4F014DA0701E0B452FF7E2D1B28C7A0CC1F
1CA1750A01222DF99132823E3C654E80C9D5634B759959E725364661E7127692
1AD8960B295C036ABF2FEEF8F13D68CB7D3FF69FA5A70E79F94DEACB63C4CDA0
0C9AE654EE03FC107F1E592E36D0AFD51E2CD3ED5979AADBCC7D727237F164BB
F516B03977EC5D802D9E7F1994A7646B1A03255BC3D74A7F9B4DA617EACDDD11
93FC40DA2CFAACF2CF39D3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 115 /radicalBigg put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1C8384F906A7BAACDF441BB0AAEA2A697E453D9DBB2D81F604C099193
2EA5A946F39EBEDD0083367EC259DCED579568306FF3BF1F50CE674D11F0A2C8
AF8C3259EFAABE5050F311A4818E8F711912088F5F8139F1D7D2EBB1853B0DB3
24DB82A2C071F81366EC8BFF9DAF3FF6809DEB0AC5CEDB8FE99A0BB35A872D14
5EEB36D631C03D98C9EA91854E5C4E56E41F220FCF95D2907CB26F9AF078E564
3E4964A4EA4A25A66219893A11B5B4EDC65C077EBDD8328E7A4F634027AC7BA8
8816445FBF433233D990CEAF0C9B7C45C8EFFB5E03AEAD526025DA6AF4789E2E
27AB109E7DC8182E1E4EC608FF2B4A354D6FAA44DB8D847C9419FE00D44C6A2C
8C90B012AB7B4DCDED2B73007267
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI5
%!PS-AdobeFont-1.1: CMMI5 1.100
%%CreationDate: 1996 Aug 02 08:21:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 105 /i put
readonly def
/FontBBox{37 -250 1349 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA06DA87FC7163A5A2A756A598FAB07633
89DE8BB201D5DB4627484A80A431B6AFDBBBF23D4157D4AFE17E6B1C853DD417
25F84CD55402AB88AB7EEFDEDBF2C2C731BD25567C53B474CCF739188A930039
098A197F9C4BE7594D79442B2C8A67447DE44698321145D7689B91EF235EA80E
B600AA8E238064F154284096C4C2554EFE8DDF13AFF8D3CE30E0999375C0FEE6
F992DEA5FC3897E2CC8B7A90238E61E41622DE80F438DD994C73275CC52249D9
F6686F87F394FB7BB668138B210BEC9E46415A1B58C990B81E7D7DD301143517
4C2A259D2A0A1E200F8101469C10D7D537B0D4D39296A9AB3F132DA9A3B459B0
F850E2B3A03BDCB35AEF82285D19C38F474FB414F8EC971B994D1C7DD753B271
2B71549DF497C665DF0F266988209D9EB616E4D9BA229FF984E7A886DB01FD21
48ED2E4859FD6416C2CE52537464EA884C8C9C2D1083E2B83BE4B766474C23B6
6E8EC5003200AB10514BB44D14CA700416AB6B2683E80862E7D5B49A05526A32
554BB23AB8B0824BBA198E3825CE82380CC0FECF46651E3E5D77F09465E73164
20342822F29572BC7F73F2C3BF95ED3BB6FDEADC20C6AC866C4F2C679594D7E8
8D944704A3C5D771DC39503BECAB89F34D8CDB8FDB91AFE21F3F0260D05E90C5
73E2C13DFA022C4522E5918EE25038A0498FBB530DA33B0AE238B1C6ED03FC04
2BFED8236E07820C5BAB411EAE1B31D93A2FA7C374B1725FEC359ABCB88E2C89
214529A263D795AACB0B95A3AB2F4E08EF350C282CE521716DBB06E5B8291B3F
5D4ACA230FA192F64BC902A4C8842C0F916F92FBD002ADD408BF0401D0284FBB
F05D4C6DB631420747CC902C5E1617E6573612FB26C8378DF41FFB5048D3CF06
4893DBA48EF4B043D760F60C75712169D16C83EE020C45369E443E853E1809DD
F395B812067D6FDBD26111B34F42C21036AF952D0D767FD17F6959D9FDD46005
D64FFF54772B50BB9B173AE79702981F58F9F235C591F476A31852174DF0619C
A470359153DC32610E782B204E7945515464DACE9099B81EEECC7EBD4B5126AF
C3FD9DDFB329AF1C95C41FA4A5F6958869509A23BD7210386329771FA46FF926
0E54AC35106253EE140449425A8670E1F92B178A02A58EB57540F4BD8110E548
BB584EA6D625C5F5FE0124A98E49915F1A1B95D2125874360EED1C4379FEF3C6
90E5780C20309F11F2F23FAD635C44BA030B39EFF083A3ECCDD2641DCD35B24D
59A1A8D05205EE919E493B61A71A6D4C3270F9A970858EE85581074D5D40C20F
4DAA0CC50A0438F494EBB9FEA759E0D822D80346DFEA91E1CBD2526AF84C8D67
2F9A6B1C39F8BE43E6855D8B34C1681C16696914A033D8B8B3F66BF424C8F0A6
0217A4B0045F966AA0438736233D5286525A86E19B51EEAD09C8F882E4814BB9
BDD8511D988119BDC3D4EDC42C8E6EBF22A047077BB79D846560ADE675AF3CB1
4D286672477269CE31A042B49AD172FE8E18C8C4AE1BCB1588CF6406133EE395
16BC2D282B28C4EE24C4CE9AADA25877F8F32A0577B246D2F179912FDF3E4D6B
CF0A77E79FF40DB165A753F668CFAFBB1EA8FE4296AFC514C3952612BBD98B44
486A99F1CC2189E943A2E6483C17216406DF9906CF26EFD5A36E8F93DB4F3313
37F1ECB06CA76B37C49AF6C762372BDD09762E757220EFECE154B8FA33DF5A22
0791EF2EBF8DB1ADDA7755B9CDFE1C6C296629A8140477CFA7C28D84C991BC49
536B92A62607AAFA551BB6DB5FAA66F8E377C85C34A7E64C89685BC2B1CD21A2
E7CB59628D86C3FAF5C2CB64CA73319EDB184E60525BD6C3842BCE502CDC164D
AEC9BA43173EA99622800171D16E5E06B81D5017F195BEA26D1B3F058424D2FA
D324377CCC1AEA39724014B3AE3800BD59D5B732C77F12F6339C531B06DA0A83
B36323C5985605110DB42B1EA5D1669941AAFAE65738EA2BB0891FB807696A94
4D8C008FA7092514140DF9B52A3AAB5805BF4A9CAB867340229ED6D8C260
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR5
%!PS-AdobeFont-1.1: CMR5 1.00B
%%CreationDate: 1992 Feb 19 19:55:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
readonly def
/FontBBox{-341 -250 1304 965}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA1F9B0FF4CFF25B8E64D0747A3
7CAD14E0DBA3E3CA95F10F24B7D5D75451845F1FB7221D7794A860756CFBB3E7
704A52A22448C34812C3DBEDD41892577AABA7D555E9298C1A0F7DA638078167
F56E29672683C51CF1C003764A8E7AD9D8ADE77B4983F56FE2D12723AAD8BF36
682CFBB71B1D12210144D39DD841A971F71DB82AC6CD815987CDCF29ABC3CC96
5EEBD5D661F452C6E0C74F9ED8D0C5B3755551A172E0FE31EA02344176E32666
14B6853A1C303A5E818C2E455A6CF8FC9A66DC6E279101D61C523BD9DB8EB82F
EAF4D7FDF6372383C0794C4568D079648689A199D4B65BA646CF95B7647E4BEC
83856C27A8EF177B3A686EDA6354FE9573E123C12EC4BA56A7E8BFB8F9B75147
9DD79A743968F36F7D0D479FA610F0816E6267E5CE327686A5485AB72201525C
FB3B7CA10E1BF26E44C24E1696CB089CB0055BD692C89B237CF269F77A31DC81
0F4B75C8400ABCFDCEC6443CD0E81871CD71AA3064ABDE882C4C52322C27FA8B
41C689F827FB0F8AAF8022CF3C1F41C0B45601190C1328831857CBF9B1E7D1AA
246117E56D6B7938488055F4E63E2A1C8D57C17D213729C68349FEC2C3466F41
171E00413D39DF1F67BC15912F30775AFDF7FB3312587E20A68CF77AD3906040
842D63C45E19278622DD228C18ABDD024DD9613CDC0B109095DB0ADC3A3C0CB5
AB597D490189EA81239E39202CBC7A829EB9B313A8F962F7879D374ADF529BD0
5533EF977142F647AD2F5975BA7E340419116099B19ACCCC37C55124CA6C6A2C
D961E1362D29A5F4C3393CEA88CEDCFCD8AAC05D8F6790F6C9822F00885D7FFB
C8F31D0CA9E18CE24A9ABF70858A7531318CD90234AADA0744453E549C2E75EC
8D9E6B30AA7CC04511AA5787A9CD72D6CB8B880B2069BBA92A37C94479E9AE61
1F53F873B45A8C200913421D44CF0E2E947665A66813C81A6BB49F0CA576AE5C
7695400937D0F6B4482ECC524F0A06DE1DCE031B21F5A4B64080D78835975D4B
F6B9520724A4320420F2AC5FA35328964AABFBC3A4FCCC29561A0E602974614B
DAE5EF30B8E815DE96655404EC9589FB9114B93740B9DB69F2C1C9937DBD4132
4DAEDC52DCF2B182BE3F956BF154BED0288ECFE6D05126B462DE6DA0D4B2C44E
FFEFC865CC4BE77D57BC008E44FD2C7494C9DDBCBE4C873743D5E7242250B480
340EA291FA9612C8FED8AC6CE4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: EURM7
%!PS-AdobeFont-1.1: EURM7 2.1
%%CreationDate: 1992 Nov 20 17:36:39
% Euler fonts were designed by Hermann Zapf.
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (2.1) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (EURM7) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /EURM7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 25 /pi put
dup 28 /tau put
readonly def
/FontBBox{0 -250 1240 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA35081A3EF70F93A4FCF4140B4
F4BA9261A08F615D1F8879D10F1A07FB156D4865D7E6CB7EA0322EB92D4169F1
B0A489784A5FDE5EA7A41D0606E467E610C9696284D9A56995BE40C6D6380BB4
1BFF36E1DEC8081BC5B8804FB9919475D4789D55F8894D034806DC9FA3A57C8E
65980E3AE2CC96261DB4110CF2D24DABA5A3C1566B0674490417D1496DB2EE8D
9D06DA9EE996FED422B6E35AF5D9A5B19CFEF1A4BFF14FE66B490191605F326C
7080E9E84FC999505DBEB48802042A7079FC61D71A2A8C266F516274B20A89F2
3420BA8C7B865D16E654719F367B2636DCE29ACDCBE1DB7EBE91C27590B079C4
0D6AB4126F1D94E7743860AFBC1008297B4F3DAD06B26821C94C7A306CB714F2
4986E2697B1C520F3BC5C7CD755842A4B0CB6B54E7E148E61D1BC63BCEE9D558
761A00201A8AE6651594354892CECCA5DE92BDB0B9E0F8205AFDAA5F5DC5796D
AC76207AAF34C4417BC99C385F1E8398EDA6A42C9BDD82B1DECA882E9243202C
76D01C9AE6C68F7C2635EC92EAC1D3240C007102D32B0D2E752614D663D1C399
618C2B55096FF70016BFF4C7B3D6CAC6FED76F908AA97F74545C4F70FB2E749B
BF6077B9AEED790A98BB8F2E021F52B11D2CDD5C218BF84EC864B6AD98F74FD0
37431CACDCCAF8AFE2DCB926E9AC0AB7CAE3EE8B11531D7D9E4639622BDB471F
322E3C6E8DD3B1398001DFF57D3211A340D76C85E93C7D079361793305FA5D24
081C21AF0FE2422360F25BC6BC27093D895685436BCBDE910A678487B23E410A
58D0B9CB60A450355CEA870F22B18C517B867B83CF7E6AA5053EE5B6947D285A
E641D5E754E77EB5C72E62B87B3846DED3905A8F233CD2B51654C1CD04952788
AD179C75A0057C92C7BA540B55414E73FB5A2AC82D7B330711487F5B3AF07283
453A8FD96D1B43EE668D9C8B8A58C406BE20143CF4F603E68677147D4A633326
BD3F41814067F8E2ADA197F79F9EC77F6D8A45391982854EF346560A1AEAC411
C7B3A7FA386FF789AE896B9B764E50DE99C7F9744CDC276902FE310C6B97BF87
D5550B1D9B3C3E9C7B07718F53A437C771595C6264231ABF7E931702F48835FA
BC1BB7F9993E42C9D48528BAFF76BD69001C00AAF987DE1570B98097DCEE3A7E
B119EB34C5F987E1F1C05BA6B60CBDFE2CD8370133C737F9ED5D9806C952CA2E
AF6CA7FA44C04A557A35E16D5D2E4E5920A484ADCFE5B01B0FF77C66B23171A2
5506C2039C44C59F2AA5107E457FA5CAFF88F360D576CC57A29F13AF7114EE34
4298F739FC8F098C58F5951B769E4D4530937E3F6F0BB013700AFA02306EC1EA
4EF51BE50291F4FAD93DC76418D115764C3BFABC48BC7C63DBE74BD2AC81C69F
2B2DCF1C0391FFB8EDAB601730F8376647D993929F53E539125FD404B5B6C415
4FD5487C1701255CDE22B70B1CF3F96752F894CAB642FE95DD424B33C5C2B96C
E7429B072BB93384FD61AAA927CBEAFC4A262AABE0DDE695780431B0D105F513
531E7A8F5728882384A3E09A7F65C883E7794F00DA33F96222743DB89FBF81F8
6368F2A0741219212DA08D46136A10C7BB3A7862B1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.1: CMSY7 1.0
%%CreationDate: 1991 Aug 15 07:21:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 3 /asteriskmath put
readonly def
/FontBBox{-15 -951 1252 782}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D251491EBF65A98C9FE2B1CF8D725A70281949
8F4AFFE638BBA6B12386C7F32BA350D62EA218D5B24EE612C2C20F43CD3BFD0D
F02B185B692D7B27BEC7290EEFDCF92F95DDEB507068DE0B0B0351E3ECB8E443
E611BE0A41A1F8C89C3BC16B352C3443AB6F665EAC5E0CC4229DECFC58E15765
424C919C273E7FA240BE7B2E951AB789D127625BBCB7033E005050EB2E12B1C8
E5F3AD1F44A71957AD2CC53D917BFD09235601155886EE36D0C3DD6E7AA2EF9C
C402C77FF1549E609A711FC3C211E64E8F263D60A57E9F2B47E3480B978AAF63
868AEA25DA3D5413467B76D2F02F8097D2841FE9D089F27B314C2B7095381853
3E28E2A3EA5E789DA4343DB3BE83B18FE9D7725C3A96CFD8038B3518C10A68BC
9A67AF6D30543F6C7CBF40C7875E5E2AE8A0AA5E69E169CDDEB9958F11724338
CFDE66C32301830F03E702EFC0FDE2A99B1D3821537DDAC96C59B9BC53657F3E
889B2119F09A2FEA880AC116DA02AE5C695DB3F874CD5BC44FEAEA9F8693FD34
B20FF306DFB33581AB240916FE6D4512E518762E38110D6E03FA81D6C793016D
6C0269A9AF8A71D014A332AD56E741A662484AD84E1D39181C9D6D11F251CBC2
01D09CBE181ED0E2EFEBD7D6B806BF9A7300CC5CBECE10B3BFE9074D4462779C
736D536A762AADA04AEA6CBF149645E469641BD5840281BD1BCEE75C57722DFD
506C3C7CC9184A65F7F8E80E8BC537DF84649E7D3877522C488E3195C818218A
0DC07DACB340A55B3D938C6F577025881DCA103B0F6676B334D2B1E71AB8A38A
96D30B7785979125D46FD986141BB45595F760768552EE658C50A43C0B0C4B5B
87EDC8BCCA97BB68F3B2A7E3F48BFA2AD2D0471420A22982FAC5D8C3546D6FC5
7DC431250A0FD4B2CFB24A7C8F0C468F9165CB880D8C82
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 97 /a put
dup 100 /d put
dup 109 /m put
dup 114 /r put
dup 115 /s put
dup 120 /x put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A4EA503B3836E
0409721D38E3A5116D56105ED756EBFEFB8C3CB2FFDBAF6FE008853E0B7242E0
157A3A484DE3ED2F06C53FEA5ACB47D669682EC394E7DCC914188BC6B1B16871
52C80C902E71F652468AFA151A54F436C7198DFA1A0F1B5568891952EEB694DD
2075EA0A4272736FEF31FE061CE3D41A6A2A66E26D9E912537323012F9BAF8AB
4CB12DCADA24587248542E5F8652EE2C948AF7478009EEDACE533D6971E1688D
806D38780A934D2A6A3E49E3551098BBA40CA4F1F1BC86BC82A288765E938094
22742172BADFA73EB20C5D2009D431C10FCABCE0867147F8431A52C0E13BC2F7
8B0841ADA9FC51D13CE65637D359685659351EEAAB69EF3FF3CF5E2C139CEF3D
1D2EB7A5BAD5735BDC88DA00303F684BA34AF93B4D59215B632529B07F72068B
17B4A35DB9672604D432C75DFB0BA7425C3A66C6633743CD8A23A5AA38C16868
8E211078AB24C122873EECE00BF4A2FC4DC824BEC19E4C6848C47EEFE298F7F4
CB034F9F5E660DA76853C9CD5F3FDF5F803302F2D7B1278BCA10D2FDA97509FA
20AB938CBA1FF8DB7601559907D6BB9725C90E445ED92017A6EE46CBA099929F
3572969ACACA4804197494D0D12C11D2764BC0575D32D2A508E959C0B6CB79C8
89FD181E03B891F8BA03E3500EF56DD23C562A86426C31BE4B76D64B374AAC99
5AC526A33BB4D2337D171055838F819C38658BA1C25C71B79555350C55236616
C8FC68922015FCC73E9F1CE8AEFB8BBF0A2C9E5E0EEABB7949FFFCBF418B9DC5
6651E8FCC6E9677CCE3AE9DC93411C32B7FDD44BCB73218EEDBE1C82A99A1DA2
05CEC0EA0A1818C34DA6F864474658FB4B83D0B094BFAEAAF04CAF3F6C2C578B
7A0B40F732D7E6273733D244A060BAC8A93AC2B0B3FF92ADA72EC4C1F36750F2
A8262CEE41EFCD24A9EE9E9075DE00C9BFD24D3803CCC9219DBC9C5A5CBC6919
BFA50EB06F415201D6BF98A15947AE9D969147A286295B49837E2E9335E59AB0
2FEA21FF769AA6954ADFCD191FBAD882EABE6486DFAA7EF5B074669DECECD23E
3102CEABD85C58513D4558450E3BDA2663E602445B80F375CAA3B21BE3F5D47F
F1ED1120DBB8F2B18C93513498E25CE294E0F577003851DCAEE4B2C5CCCC08C7
80D685FD390B7A8B434FF0FAA3EEE931ABF6A209092B6C6DCD6B2F92C665D29B
EA2AF477B6A93720EAA487ECC94527F1F38B759D7C5AC75B7B21FBCB79882098
A39D50B6B3FB98C2ED6AB133F13922DDCAAB623D0C83960CD1B681077636DF50
ED5C4970CBD0640FF1E360422884F0C072ECD277D5D90814441413F21F568FE0
4EB1307031EDD48841ADCC6938A4F16B40D9174147872F4DC6DA497B8F7124B2
2D6B864794AF0A656B813C4E70B7BB75ACAD64DB67F845D51B88D64F79FBA7EC
E706137BD9EC17E8C1A38A9F64BE8B91D057DF460E7CFB87333AC5E4CAD6E436
72ADAAE9E3B942370C2FC7F438FB6254B7F3501F75905164FA39467A0060F205
F44E2F2289D16D8986B4CC2BABD4DD164E49A6EE1941D1E3516655D667DFF59D
B1E644C6484A52FD168AF8AE361FDA8E3A9C3E1B4FF34E7DFA45B46F405D917E
5696DB317A2562E4526C805226F0B2110AF327DFBE7C99E976413019B1005B7C
AD86237FBA2C3F39E8A657CCD0EE606ABA56EA2FC6DEEF8A6EE80CD1A137209B
03DF5018DE6B1101EC4B7F80497783FD0317AD93C3B453BEE45186054D3CC771
00A2D3B6F8C5344971013E6D36B7C505F6B80DC399FAE97CEB04FFBFAD1A1C33
178A123A13EBB6B7A86D5E1C22962F76D58B78FB0CCC8389033D3D25086D0C2F
5D810C8BE878DD9F972D27516A9917BC81A4E622AF5E00B11CF026C4C13A87AF
81C2D6A4E72B510543A082DEF29815867A2604721D2841F2D5BF9FC2D1110D64
17299C22586808F8CDE95FFF8064C8988F641570AE33EE2DBD7B7322260F66D5
A6345F3DDAF65A9E5CCE3FE9CE421574DB74880A9DEF2450AD67A230CB90AADB
83B00042596815804731DB3E30C32CDC625031526EDF5871DFB615101674DB5B
79F31724606D1B117D40ADB40DD1E2A72A3CE80740AE5E30F8B37BA2A3862D3A
2BA2A631CAF366A3197CF484BDEDFE6116C844F5A3834D5FD29432D5DFF96C77
34E8C3E93EDF4E108C60620C93DA9AD83D506ECC8E3BDE8281A5A05BFA8290E9
470C97980A26A04348F57F39A3CDE0B6536F4C05DAB2F97E557EC5E585238107
A8663CD80BB42D8956EAC535178B11BA33B220722DE794FAD6DCE9B67CB417BF
520829F653313ADB6B3754FD345A87C13FA29DB0AA3F6AC7232B709F0F5A82A7
606B4B2679748ABB389036A8DF9E6BBE8D03DE4C2068B20E8410A96226FF2EB3
5E8A4AAFE4189289FE67C8F9C66A2F92B7DBE6A983CA8B9B520A89AFFE29A432
0D403691516E9B5F38998B97DFD18D208B98127F979B84E87B12E70F31DFC249
1370BE0D1BF38FBF7DA99021C812B71BB0AD6C86DA1CA9CE2E80AB59C19D7B4D
2D4CE1A795B1D78762E46E2103B3150900977805127E8110377F13BFE35511ED
D4CA7415107C5FC6313FA9F72C76B42556583003CA0851FFAFF93C56F3943EBD
B90FDC36720EFFCAADD7D51920E55CD84C1CE62529970D61F8BF7BE45EAD2FD7
63608E4387194517C3FC04F95507297CA8821AEF6C15D9C26076A18A91E3B9C7
E2B9337B720A941E150264F4DE5BB8DD1016966FEB71482B48B1FEE94FE08091
7E7E38D8CD1BAFE83BD9331B6F6C89D31CECDF6A56042D5EA05B8DEC594D831A
99CE6BB54273F859722D2C8B45BD8F6C6A2C274ED6DE445A17EC5B3C9AA56627
C9D32F26BAEC6854D088B67C129231E18AB5E020C9F0AC25FE486F63F1B20B2E
B5C35A22158BC28797D55AEC9164EFBAE502F5EEA2F89A29BA253C0F484EBDFA
66EF4E42B6D9C1DD9F80861C6F3976C5084C034FF8D4500161CFC9EA2CB8C574
B20AFE0DB090C8EAC8DD604D6A7743B4F8D9B3322AD8582E78780736C6C58B74
03CA21F51279D50199219E9DA780CA2814D44B305A27C54477B1018EB6055A16
7218522DE9A19FD58460BE67D2EEBC67B3C118F2A5E5B3797E006FAB1FDA26A6
44ACA62344B6BB7EDAEFE04F3F455CC37B00C7EBFF74BB9361D6D4946E7E6D6F
03D69D86E6D42C6FFAF8C557A3ABE59AA67BD67A9FE04B71FCD020584E51953D
595823EB971F5EF05721FDCEEAE81A15E21403A180C7FCB58A016D8C19FCAA9C
E2EA0FBA1F8F3F8707E10543527EFB5353EACE17334E8436CA5294FCA41631B2
5E4CE46E538C24F12C41C6D82CC34671F4C59C5BC41A4DFC009CB73E4943D0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 73 /I put
dup 97 /a put
dup 105 /i put
dup 116 /t put
readonly def
/FontBBox{0 -250 1171 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC69C6F2AE63E19FB4633FEE6B85717F3486040D6A070310CBBE92842
844A73E31679E777268C8FDD0246867AD2641A4D922926CCDE2A03AA374353D3
20949BC21C71217EC050098CA596089CC49CEC3DCF142F0A36AA2F24CA7C891E
E9E84AA90990DE04607C764CAC37F9EA1706992DFBB572B288F917EB8EA906AB
07376F824103734FE251CBEFFCA564DA0159BDA228FB5B1AFD15C7D91E5E9CEA
82D93BC134FDD124C62E44BE8203911B1FC7078D59C7F968DCCCACB9BDC60BB6
80C58D311AE3E828E5667D6CEA6BBBDA0A320ECD5C73ADD5CE6AC43DC29BD437
4FD0453852A6517763808E287965F3AEAF8C74F7FCC762DB2323ED99E5C9C820
0BE9E159FE9CFAAE52FDD19516F4226A8054F7355BF2F64D8A83E5664A04BF07
95770500782A7EF9536E362F0CE22DC9AF52D6E238BE5F4B53DE950CE970F7CD
E54339129BC953A3F3F559DF6B9A250BB4335153633D7CDF057FF734B95D2728
70BDF99DAF246D0BF72F036011E84381730B0772B6B3C3530DFF5FF1F85112A7
E379B204AC0C4B309AB0F080F59B2F6A845F070FA6E54D72D4923D640F274D80
FA6538AB3A6C0E4A4F79D3357DC4325098A565F82484E27B1EB08D762A41924E
339422C45EFBD0CD4E0E3AE56A53EEC28FC05B3E65471F0320ED736ED12EAC22
A05232F6324EF0E095DFC2575AA813ED1627F49E035C3A1D24FE0E925B286448
2C8B7FA13373B016E21367565B5416527E5B99FEC262D24CD211E560CD1F2FCA
7E1EEE62B0C10DBF7DF1061C1F7CC819CA63457528E6A1D5E288F849A7421688
F0E32DAB9BE64FA6F0CF657E3A9D9EB4768B811F8376B7358BF96F2965AC8BB3
D05C62FA71E013FB5B1A9E28EBE60A1A8E3C597801D6BF44E616D511BA945DC9
98923189F07534CEEB52F84FA214978C8ED69E3FD471382D7E565D4B1890EE5E
8096621131EE9508749FD08C079A96802D19636B911D9F3921FBD635D610DC90
B085EE4060956F2AC63A6DF27ECF9238AFB1A93557FE66A3C9F76ECE29F9D09F
DA8B967C7021F4AE6221F0A84CE1C1FDB3AE284F4BA4BAD0231999564494AF10
1DAD265A3DC0C4380D1BDC31F46A724D7F24D700DE27BCB19C157A7088D4A822
5C5FD579FCEBE2F6140282582EE79571444C649BD1AC6A157C95E39DDCF06153
308B2FDDEBA8AD160B6EB3638C96DACCAED115DB4E5D86A8FEC816D9235C8A93
592E98949646B06443CB7EF7911EB8BA7DDEC13B66208ACB072FF45E742074E0
899B44
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: EURM10
%!PS-AdobeFont-1.1: EURM10 2.1
%%CreationDate: 1992 Nov 20 17:36:34
% Euler fonts were designed by Hermann Zapf.
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (2.1) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (EURM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /EURM10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 25 /pi put
dup 28 /tau put
readonly def
/FontBBox{-32 -206 1060 722}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA35081A3EF70F93A4FCF4140B4
F4BA926E2B0C037A54AA13BF32DE0B7F982A798C1690FCB6A0F1C1F97B6086F7
05F050801AEB6B89557D7AAECA58235F14B88C53C5E7699D62CB7135EA50BE24
4A6F6EFD997762D00159F5217F2A7FC12ED1FD1CDDE2961C9548BD966A26C693
E55C51F874353230C16B328BD35BB036A8AA771660A520C63ABA10352E6EF5D2
A21A84251D9B0DA3EA615C3B24D017BCB769481992620CFAF0203F931277BFBF
FC0F16150B53A284A11B625A77A06C37151A7E062A591BB9FCB4E96666AC0E6D
146D8467C4C5ADA986EF06E613CB48FEBEAACE210DDE13D7844B481E57C616FF
2F87748A70C281600F89EA636660D342CC7B1436757DC0C8916E9C38AECD3132
15FC6C6B9B682AF70B7ED5EF9ED8C72AC06DB418893225A01E265A6276D56479
21FF58A4C8058F8C4A61AE0ED01EE8D5646E6C0FDD1828146B47C37BBD2B61BF
C4B8875531DEBB9DC75948485863A51DA90CFC612C8ACC34310EEF29D40F1DB0
24584EEA868733368F3EAFF2AB8834F01E1BC04B077BBA80D80285FCA172353D
01ED05A0BF270C21CFC7E5B4D765A25A75DE914041607C6AFC67C5D711AA37B3
84E23D02DCD904AA0C6670CF256D24CA9F34633EE619D1747D3572CE2D82290B
D895D57BDB03CCB29B9086077AA19E82E245C4D67F02904D0CA4B17F45FFF9EC
C8719A55C7EDC880C6DE5D27267A083AB75D97EA7C2765D1980AA866FB4727E7
F1835263425A1BE7D3F64A28027FAFF346CD81DCC6A586555B0BB325DB0E7D72
21BDAAE3FEFB338AABFCBF440F5D46154DA78A260693EB353CDF3970FD01B0EF
B1E5171691104074B84930250C8F13AB2728C2E2DBA163E94182A181A0D5138E
C9F2E26C2943AF845DC8D2AB32B879E4D6B4B96BA801F368F05919DA545A7D14
81779675D648DFE1E02118E560FF012ABF9672F1D8CD8E2AD55F0BA422303FC3
00186600865EF56C3182A20A5D6858CA8B921BF593B4A5F47BA3ADE8C6E14E14
ED095B86EE849E4AD6A34D3CD3C6EA41CCA8971568F4BB489B9C732415C89895
4B2A63AFEE61C5B0F4388C7095F3F87608D57687C5ADF4147FC3F7A159BCC9C9
A716AF36DE00D4B32F5ACDD0194206D07E189F10AD55F622687DB9ABCC4FE7B0
877210F96F8D53B4EA7C744FADDE2D211DE8590769B8460895B5296620C3C3B9
99302E156A7420F945B67128FE0EF145DDBCE1F37B9EF1807A6E04DA2BA6A233
37A853B0C4306D7816FF2699264A1160377B727B5A30236E325BB61CF6582D67
8430EF3FCC7B642BD2C05ADB43EE447FE5969483882A64476C41DFBA6A6C184C
7A7D5CE63BDC6A87BEE3C6FB282E25625C147895AE26A03A758CC00D6A458198
3942019F1E4529ADE40CF53480DAA1A4B3A1E776E3F4AB0249597721066E90A6
723DEA85E67F96655BCBA29C00AE80D372908E5EF4DA25B980B0361C2D80AA84
A763BA8C7BE35C105CB2F225884A615E90E6189334A10BA43EA0C37708DAA805
B399D441ACB120EF4D75A7D606AAB5FDBDA327EEEA6B551A7BDC3B7DB601A7A9
AC1819DE4CBE900D44982073DBAE9C9E57EAFC3A89
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quoteright put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 79 /O put
dup 82 /R put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 122 /z put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
35FBF325BF62458E39F193E4A10E361FAC3954E758DF3EF9CE8F19484E66D7CF
F574036E7646A08BFF5F7A6026F8FE083AA9509C3FB8DB8285D2EAE4D64963C3
7A36CCDF65D57548BDAA25F88FA8A7A4A0A8A10775CF818B92F8C52328998AED
407FAE2F915AE248B475FC7F452CAE3626187507C6FD533738EC8FD5CAB41949
9D5ADA8ADBD792D1BECC9F741CCF671D283C1AAA2E9C0B5840090CF30A21B8BC
0A4B1C75F75FEBE00329819B78A86B1D52D02C7997D4BF42ABCC6DD21E785ABB
1FF6A3852A8AE79AF00E984885A718B5835DDD13E201DF350F9439FC9E19CA87
8553DF6C33244B83ED43F69FD5FAE42CAB212E016DEC2A450DADFA36CDDF2163
D90C6CF7B1BC9CC413F0C9EE56C0152204EB8B3E750979FCBFAB73AAD2F79C23
F03E23BD7A2F9E823D7402826A7A60D767B2A8EEC372940C43F9558471A17737
184F956578E2EDD3D657B46CCDAA388AAF5C5949FF436B5DB8D895453B4163EC
7D36710747906884919E90C2302D91C34E1BF5329FD48353602B97FE9404954C
AD2EC30FF1DCA4A949FC9C60023CCCB5C068D99F723406729892D2695B49AA01
BFD3608CE0F484CE0812E8B68E1F7C064B0868253F4FECC61C94FEAF3D45A228
D764643C0C7F0E59580519D5D63C7DD900CA090C64D4346E3F9E8B2D26589242
E77E19385BC38917062F32EA79642AB2704D0ADDAFAF7CB74717C1DCD8350237
1E945B14F4F3EE1C219B430A76FBB2A3CBA78DF5A6D98F36041992E9635BD097
12B05C4E8B4C5E9AED276E1028DB8624A124630556EBE693407FF2550392D892
FE67600D6823A187BEF893068659129CE688336E4EB5D4DB1AAA260BA8A92CF9
6AA4820568C749CC56FF3AF542E27D4DED158803548FADCF8A41304D06565854
8C756639E8F03D838B9905715B44E7E05103E0643AB3B3D2AB25C795D1283F93
3A53C6955D384CD0D19B8D6325241B238786D858CFFDF43360C0BDF3FFF8811A
AA589B6F6F6D8817F0FEC8FBC76CCB84904417521887F25994914A58ADC97D3A
BB97025AD5023CAF1A1A7F92C58D706035F8C8C99044C5250FA46B1E3883E53F
76746C02CEEB537FEC343E6193C2B25E80FE80D60F7624FB9438CE1061BFC6B4
85832EA115DBD7E94C49E9C841CD3AC76C9C0BE9D9A52D15C859A3246EEE0D3C
5A26DE46796E6127C2D41DEBDBEBFF72548ACC4F0A10E78284E61616B3776E47
9D04746700A1F1416BAE09C3C7FEFDEFC98336FC44FB5CAED6DB10A549AE06FB
0862BDB63D6664065D70B463AEA46F73CC864E434AB5DAA43F67E50987E3A74E
3BF57639B786F28813A9ABB4B06D1C3584689139E018DD1BC871E0A95D5A9C9B
465ECB7A12445F4CE768F06914FE2A04B42629CCF1B1D89A84EE386C9B601E8B
D77B0D9F74271D34027422BDD3E45D7F0810B6A254C380CB31CC0E5BE324BF4D
5345E23D0AA2DABDE64EA6356D9A439385164F2D38CBF9108BD0F21517296220
56A1947F9500AC953F5226A200ACE3789C14857336F1E3CB31D999218C097EC3
82D1E7BCA791251D05C263EA3600346CE40F84A95C3FE028EB872B7AF016F73F
D4448B98E1285260F2FA2E2B33B928411866F06312BC051FB830B957708A3CB9
55AD0EFDA029F9389328800D8409E0B0D0E586BF2E94AFA40368E6D05E7A5DA1
145679476A94E9A7CB6F8B095B71B2995D4D4D6F9CFB10661BDC5444A86807FD
FF3B7C77C12F217569F9C21E1EBC85B9F5A697B27315DDA201690DC50355A1EF
D754F33DD5017B0A235603180C2DB866DBF098EB31F65DF570D31B9B22CA60B6
BA60317BAE0943A76AB109AF21DC2D4216D9AED2ACC9BD17ACDC0DBACB1D1BF4
C6AADA7E0DC191B0508350BE66865DD034E2613C4A2F868360C2DE33F33CCC5D
BC483589976DB44FBCE65434AFD24C2EB4DD49A511681A3BEC2B8B6FC16E1BD5
0CA9588113C0191F54A099AFAC00B66F4AFF9D219F4F00D158421428B1049894
978AD0B81100EA6A3D8B6FF894BC8C7C2E6D4984E5DC81EB4D52069CD0BEDCFE
2354FB18BDFA3AF8C78D0A5AD5244BCC3006B4AE7F5F0A454A333E84530573E7
51A7AC43BA863DDDAA8EAD41F4D2BF572334C1CACEE08A08BF77128DB94C1C3B
3AE9E96949972B7D2F88762FD030F17BCECF0C54C67B002E814413B38D0E5C2D
1CAF014047D55DA1E05089F5E2A7CB8CA5C4CCC24D78991E08B258E19E591F4F
0E73FAF4ABF63C92B55E2BD4F49383F527D080D8785181F0F06C4465B80BC31B
031A33069C6D3EA5F06A1E649D6BAF4903EE4F14A910EABABAA8C2594EEC7570
A8094FE9B8DAAAEC794041808CA9FE50349FB1EE93FE92C4DB4066B7D09CDEFD
0BBDACB538EEFFAB0E6736788B96CCC6FDDD40D04D61E2D568AB72A39D3DA65F
F19784DDC59A9D900CD19098675A39904DA6A41591F7675BC6F53E327817A9E3
7F323F2549E4CB92D8AE5BE43E352A5558359CB02270130F0FED2ABA649853CD
E05397229E213514F1948D36D4B9CCAD098217250AE70B7DAE0C2197F71C0045
A6D4B7D2A0BA3BCAE4E2D4EB1DD994592645971B528933E976A924F97E0AA58F
A4B93E623FA45F8B27E32FC0A4ED93D8DFBFE44600FC8ED333A5D722B76668C0
87B1A13A348B9F9DC90C788502028D5CE78ED94AA0797A9BB7A14275C27A0051
0F9C18A53BEC417C618666BD2AC15807737873372AF437E10CFFB8477D8AFA97
728D4D1E90738D110E12ABD10CE344EABBC167BE0A521C4BF6F69319CA9BBA39
0BE5A44DF261A3A55F60249CC25E6325132D7B9EF95E28A377178CF683744A87
711E34C72D7F60AFED46B39383EB32FE9B05EE3455DF376E02AD283E7DCC0894
5DFF2F701F3BAEF639ACC0F247DB50BC738C88F2187EEE2139CF5F412A6CBA55
551DEEFE463A0C3DE36D6E7BD903D5E2C9A7676CB7C76E20BFEE6683AE1F1766
716BBCE5A76E9E3FD3CCE80E7D0BAA10A4A2E40BF6D27A7587B2FA4866AF09AC
C934EAD8E57F163123858D0E4E4B1F38FEE6A2270AAA6B04861F8D40616C1311
37A4FB0F891B5FCD0A12B6F315431361237DAB74760CFAFA6DC14A1A3118DEFD
A1CD089F11C24BD791C7B68C1B27E564D1818532BC4B582D9235F8ADC5681726
819D69773D21BBA44B64BB38123B08CB577371475A44EE72E7F9A501830AAF85
EAC885F05FBF8C8904A38312A5CC773E5A904A4449AA5BA9AAB676468F875A7E
62905804A9F8631E6B2C74E4B417BDD7FF5CDCF8C82A74336301B09A7559EF32
96B0C6876A3D845DC36C77922A74DD79A737CB10307D58EE9BB7BE8A9A36187A
24AACD96D7652732A40AFE69971328A2E4C7265C4C9C49DA3898735ACCF925A9
FDA821DF226E249DBE0CB686D294ECD75085272BAF753B26C594608C0486AB05
D175ECAF46AE8A5ED33261DD0D8C5576A03EABE860833776A74C13CF5C8F16DC
026E1B044F172659A6435333FA81DAD2DF6C24AB3BEA5CCF6599C2402BF13F9E
91B9D1E1E1D693615FC30FA2C3DB1239AA1DF47E5A22DFC4B00E70FA8F441C98
EA9F2E6CDDA19BDB75E2BC1A65210C8360FAE4692406534753B72D793447CD3A
E4AE0ED5D3E3E1F67AC52DBB72DB0D4FAB65C472783B95861613BF05CC17D8F6
6C51DD9B629D29B7C198CB446A2B3F5C524AF3E326588B7DF254F3440085F1E4
7CC5D3D42CF7BBD3701FBCD53A462E1113F76C911229BC5CD86B1809F1EB0EE5
018CEE88DDD234D6B048E95FC3286EE8D39CA89BF7C995A3253BFBEBE4B16BF0
E06D924CE9B9C3172B47E0A77B101C3F480EC9CFB080D0AF6701B0E0CF94A949
33841F3B67608A73C30D863F800308370AEA80D5F30D5F6D1B331B5203C2F7C4
C1C66D000DD1F577AC42E9666E19D0F6A0EE5E56D7D2CA19533FA4B54274BB90
A8AAA5CB6D611201DD52474D18F90E91FED98B49FA84068FC78F06B21A4D8F7D
626828D9F6CD496B102D4D48FB4A26A436F5F8D1E713B272D4A6C7220C89C0D1
94B517D262DB25F67F7B07635075B4EACBCB5EC4AF7C54B3D682266B3FDF19DD
B8E5E0BA14FB49EBD7226BC0AAF2066C82C2DCC6728CFF7391895A4E3776C164
B733CC7DE5A6D9D0629242CBCA2BBD94B1ED5A83D48C182903615BA63585C61A
F6CA6B7863457569969CFB22A3EE005F150639E281A24D2B3C255F75DB9E5CF5
B620FF23CB4EE61ABFC91DFB2D7C803C6CB873B835F6205132D7E2C7EC237B17
6FC646C1D6631DFA9824C8D89F972332E45A9E4372554617E6362C6C9A5050FC
56F2F81CDDE47704794607E09D43803D5C859EFEA43E2A2B4CF58EFC9828CAB1
D0A7B489C2FF2034D1315609D73298271B8F6AB960595A0ABFAF0263B2EC4657
61D486C09C7E41CD4773E943BA462D1A838FFD661E115325BAD07AF63D69850C
38E6BC8FBF6C507C4157F05296F0B8E5F8878C71B25F146290F95BC3C8C089F9
75CD4683E229D072CFE55F973EA747B3ECFAAE3558A5234C161E6C427ED60B07
1B68BDBBB841FBBBFF17701561F39E1EE8D5E17AB779A227B7E310BA8311F1C8
9C73C7BF82CDA89E9427EFF1E0F92C35B4916D7F2EC0458F58640BA29E4BDB82
E39672A682CCC405B58D9A4E5174589EC61644C7B47B187ABCCF1C344DAD8667
E0F7225ACC10C2585AAED0DC89080380C63B216C75713A9390E1519625891BDE
1A5A79D896FD087992D5049E93A25F7C2CFD7B6340D704C5351DC1F2478F8382
15C1247FAD34D9222DA75204D19B70762C12CEB394E2E5D2668AA64F790A2993
D78EFAEF91AE8E8922E1FE7DC4202196D5F631ED7178571B3105CE7FC3F0DA56
E049F5B5A47A3F3973B43046B1BE9CADD13D2022703261D3D9AC153DAA94D127
3A2E33B47F5184F51AB048E20A5C7AE0D1B91B569CDE3C10B5A63969C5DD19E7
06DA294063331E1F9CF41A13235224A8A13D96F13B6D0FF5D3CE201B25E864A7
E1EFEEA2C28A3F65A366EBEBD97AC22995776ECD1E584C3AD218AA78B2BC00A9
10903FE61C61FD0DD556504DA36D43A125A1F03911F0C78BAC019341D90DCAB1
E1E1699111E1692F85F6B5F16A9B9C41AF79ABD6DC3D284780D6878277FEBA3B
CBB2423B7AF51424AC6F68B630F5607DA476A293DCEE4EEA77BCCCE8CF4B0945
E11B4039B8B507FA9E6B2754A1D390E196373EBB55082B62405B26D3B1F4B0F2
41FCC4005FC5E2873F16C961D525C23B80C3533C55AA346B2975E32ABB6207B6
665B8957AB10DC436C988B9D971AC7EE75B2AA516275BE4868DD7F652E983832
38847E43953EA1DD49DFF0E0C9BC609B0F3E9305B2DB8B67DCA93F1898FCA890
9B91C2F347CAF6083B01B611F95FA29A0344E70C03D42D90D9F8AFE8719DCD6E
1B4D0AE8A11B9DE5D355D0314F2FCC42C0678A3C19834C9C21A5C7AEC602A6B7
3EAE77F69B0A8A53FC6F816CF6840C99057E7E9A37B6554D04489AE1666ECD6B
F4C58A49AD074900CF420D9089BFA07E009ECBCA3593782D8D84941F408EBFE7
FEB2A2DEF0D1BBF67159E14C0F938CD8EF24C94F1991962D35D0DC16389D2C07
7661AC7F739947F4AB4EB4E3774D5DAA046EFBD25EDBCF55ECF82F45C18C809F
527BAEEB2CA4404CBAAAFFA2D8A5353F34219503BDE08A3A4BB65BFD103D37AE
87F92BA6CC707B1D0247FAFB354264A14DCDCF4E5DAA74502AFF8FFF7A103AE3
027100DC3F5F9A4BF1037AEC4267669D86B404CBAD765C015D4503AB61CB1BF2
34F34E37429FBD374AD546B58CA169A1D52FCCC5729C6B7B470C7F994FB17381
0BE570FDB59F1B20E57177F250437D00B55DCB7F35931F364F9DD9BDE0FC1968
B774CF1B8228DDFD3E80A47F9792FDF2F38D106A58ED4DACE900197B9818E551
0D05FFFC3A109E5CED8D168F17B598081A77FA946AC060157AD9799CEE6E2CD6
2A4CBF351BD1C9FC26D4A2032FA4043FBF0EF1D8F32841796280EA94A2F55B99
A73D2DE0017A3EF5E14531AFEF5D389886D8E02E4B69E664B85947D15D6395AA
D921A38094C162265F40918A7A90A4FC0999E60041B47F0E081FD85BBC2AD9C4
F73B3EC099DBF1BDE3081C79D950C84C9B1EE560E756BEC70565E5648600CF89
73D5015BF8300AD79E7442FCBB1317B619B51C2B914CF58CBADB6307FDE15D91
CC78022DB40904CD8694A171F3CD8BCD00E24B91B2485B7C823C1E6B973B66B9
52C6E931904FC0E74C43BD37E5492190DBBC187565979F01996FFAACBC4929F2
1F4FC894DBAA35A142A6853F3791737C086D129D04B075DA6BA2502D5A5515B0
4A3E9C5B031E5DCCF234033646DC760DC301892823F241DA6BEA6AFDD5619851
515E65FC7EE7795EB92E2DB7B22AF5F226856172E039B1D228FFEABAB3E0AAF4
92615C3BE70D747239832707B51E91DBED6017501548692F74D6C93337F1227A
F965D2D260CB756BC8E6B3A8B4BDBAD7041058671B03F71FEB867B08E051D931
BC6354EFE04E3A2662E9482CC644C0647330433F9B5D45C781BBA64C9E137AF0
AAA1E7B17B0F8E5BE993828C879129C93B3804B405174E4ABCF1F22A45B68E50
BC092713F4AF2D18B4DE370F600B78FC4C89D90D2559AF97FE2634E0383766D4
AB08BC28EEF4E5CDF28B3289074E8EB82D536F0B90EFD0117E625F808FD9A9FC
8C065A413B80440B8A12B028C1E136AF7F7E248444BA2D2BC0310D1A5DA800A7
B630FE3FC0C3E8DE86FC1E3A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 50 /two put
dup 51 /three put
dup 56 /eight put
dup 97 /a put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 122 /z put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CEB939AD2EEB
4370BA2C96960CE9E6882316268ABAF1023ED9D2D13969EF9E53F52BC143383C
AFC14F27A7530C1EF399707711B3AD971D9F57DE244315EED5A16F9CB6AC1524
65C8C8458FB03FB8619B8A925DCA3AB2518F044DA696A4D6F8DAD182E1C15D7B
C108C9538896A23A043EE66E18808902D215E82AEBA183D813D46B89A3FC847B
A7F6E0082DE9AD8C0A83F521219955FE964A660826FE921E1EA12D7B34D65EAB
B5E40E74A9666CBEBBFCB9A26A0526B72AF9F31F6A04305FA02853200453B2E0
ECB64DF5D831317EBCB81FE315CBC4C282167280496C3D534CE1B663DDA9B9CD
D4946EC0AE9C422B3F63E3AE028D80AB4606DC49F0B8BC31882285B8382151B3
21BF15DC9A0CE603DBF85541B72BBA21E3BC69003C9E6B0D3754E4070C68D10D
879B5278F06C10F74ED5063D0D9B51035B496EE5421C5654DE0B545E1B8DD9ED
ABDC78140D5092E9C8FB21100B06B504F66910CD54D359F2F4B2C9B47F02F6B5
264200843709385E75ADA9894CDE0CACD9725351545A8185DF42E3E6257AC12B
FA84A64DF284054E5ACDE73CC8B3E0D396009D1EF8EE4844672FA9C1A19E40F1
84D612C34D0B0B9C0645D34C22B2230F5C3301D73B5DC200DC548EB5903DBF92
2FF5F31D25AF3063CDB744C33EEEC3396BE34387F9CEC721A11F760D538F04E0
1885680EBD5C13991B4E7169F04B1A7265F429B16998A0ABABA017468117560A
EE1F8A1A692E342D187C4DAB0DA2C39DD1F085A1D14211F4F1FB1A29A9BEA6E0
DFB8E1FEBC2F997A92F39028298DAEBBF2603BBAAD099E063D4CB3F5D48FC206
C9C56B1ADE18805D4FECDF868D8434F7345D9425B6697033EFA7E1E736F613B3
782E4AB3FAB78BD645510BF4DB2BEBFD404C2DB0D2E16F6233D3FD2A7C08AC70
51A160C94D367C164BA40C5616640FD9A53EA26BD5A5EA55F1AEF10D43235B99
878914D2974A7CBABE470A5D66D17A7AB471FE19602641D2B9A282212A2AC319
714C10E0FA7306AA5DA5528B2CF2ED971D659983BDFB684A589BF19120935518
1DF59DC372C7665C4A22B35DAD596AB01F71129B04BB0C8525AD747559C16943
22E993D6136C9518751BA79871EFFC6A2D4E9E753661A6218AADD2F8B3ABC05B
F3765ADDA97C26920C8772670A313DB5710FDDA39D9A6121088174D81BAD3C33
D35A14EC06EEA8662162C536D06CDFC7BA6BBBF361B21BF49AF107A437F3A258
7CB2DC09C9F13AACAC7CB327817E2639DE2D7F06189DC9E8C11CAB5CBBEE3C9C
37D1382E623BAA634877686C716727B4DBC87579721FE35BE3B1649DE8CDCE05
FCF27C1B37CB5E22082B1AFF218507E2B482906A6EBDECC386313BC960E5BF99
58FE82484665D2EB5D7B2291245659A40D57BE6B8153FA2EA67C47F20BDAE24C
2B250D2CA468CFFDAEE00C42D53CC1BCBBD00C3C39060484E306A47A95489613
1D25221F4E3334CC9355C31F3ED98DCC3AE5850F77E8899408E6A63E03559B79
A3B0AD0D013F24D69DCD4C0A09B95E637F41B5B5846358864123747760F377AE
738976219881FCC55FB3662B75E586764CD50C970A792E47853E842757E21B0B
F87A1D809F9BD448D321FCEB1F0F5F2D287A3C5EFD40C72C62D5FCCF491D02F9
9E0F6347759FA3562BA50BB1164CD88D4F440292B85743781540427B81D2C9AB
34331C5D44381C0DCA4560A0FF805FE2A49F10150A98C8B4606E50BD3463DB50
0F24222699EDC02F8AB7EFFFE35C0F9D842667207D092E750C1E0873ABB4DD5D
7EC5D91FD8A62B2979B89DE7E56B735559250F2D8D97E439FE7D368FCEB432CA
D8C2CE0122F3A2E7653DE40892912ECA4B9A237AEEF290982A64AE2120F4D925
604FB2A12E5167673311852DB05E7A77EF13E9AEC0421F05671D2B12D0106346
05BDBD49C3BE5EAB51A087ABC56B8E663E777369122541929B6610D857C6ADFE
5096B560654AC85BB2F22A02D2263ED30DB61F0487C30C9EDC788806DB8AB47C
05178EA4AD01C2CAAF9F7005E17E94F9D0AC3776EB1CF6D03AE9BFBC5F4EA1F6
7BD0B38872C7FAFABDC4EF361565ABC839FDEADE0E0BC91BD738058FA926D876
75AB2C564B7F20492E697894434678548B15F935341CE582F8DCA28536F6B297
40A2D7720E8CD6A2E4BE1C80A86FB46CFD72D880C3C6B1B7DCC60C46BC4755F3
E8EA2B0EA7FBA43C1876CC9D0805B86F53A9B06EC854092CF617A73DE3740F76
6D9E590B81B07D63D242198CDB67A5AABDF1BC55B3D5A4147908BC4233A27844
E41EA7CBD08497F4D9E9D3DFBB22767FDA07357BD21086CB755F6C8942E6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT10
%!PS-AdobeFont-1.1: CMTT10 1.00B
%%CreationDate: 1992 Apr 26 10:42:42
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 64 /at put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 119 /w put
readonly def
/FontBBox{-4 -235 731 800}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8232429ED8B7CF6A3D879A2D19
38DD5C4467F9DD8C5D1A2000B3A6BF2F25629BAEC199AE8BD4BA6ED9BBF7DABF
D0E153BAB1C17900D4FCE209622ACD19E7C74C2807D0397357ED07AB460D5204
EB3A45B7AC4D106B7303AD8348853032A745F417943F9B4FED652B835AA49727
A8B4117AFF1D4BCE831EB510B6851796D0BE6982B76620CB3CE0C22CACDD4593
F244C14EEC0E5A7C4AC42392F81C01BC4257FE12AF33F4BFEA9108FF11CF9714
4DD6EC70A2C4C1E4F328A1EB25E43525FB1E16C07E28CC359DF61F426B7D41EA
6A0C84DD63275395A503AAE908E1C82D389FD12A21E86999799E7F24A994472E
A10EAE77096709BE0D11AAD24A30D96E15A51D720AFB3B10D2E0AC8DC1A1204B
E8725E00D7E3A96F9978BC19377034D93D080C4391E579C34FF9FC2379CB119F
1E5BBEA91AE20F343C6420BE1E2BD0636B04FCCC0BEE0DC2D56D66F06DB22438
452822CBEAF03EE9EAA8398F276EC0D92A7FB978C17805DB2F4A7DFBA56FD6AF
8670EB364F01DE8FCAFBAF657D68C3A03112915736CEABAA8BA5C0AC25288369
5D49BD891FABEFE8699A0AE3ED85B48ACB22229E15623399C93DE7D935734ADA
DA7A1462C111D44AD53EA35B57E5D0B5FC0B481820E43222DB8EFCD5D30E15F9
BA304FA879392EE0BCC1A6ADAB001EDF5C9D6FE45735098A304A8BD4A0AC9980
7FFE62FEAD3843EF8C45E1203E303D028897CFE1D4D0AB8BBA74CE279275A67E
81AEA417A3E49397386B7304DC9247290A5CE2408114441EDD82F9B3A8E49C4D
D9745142652BE8B82C2A9610B26EA1A71212CE97781A06B58C3DDD9179016AB6
740166FF986AE856AFDD2D8955D95B2D0C57BC179F1D9136BEFBB6F17E8DE96E
921502FB19F0C21F0A491F951D83972DECD70AA8987112F05C939A6FB073A5EA
495069A1DDF11DC589D2E91C1514C2799C5B954EB8B347918C4920C7142A2AC6
8231DD2AF57E9540C46BDA6AAC09689487F5E0EB021CADA860FD25B2E5230259
7BFF0F12D7DF5CE219716715073177028CE276FC313D6A101898D1A6BB0AD8D5
662A85EE6B921A72E46589CC08EA87EECFDF36B819B07306C44AC3FBCD134930
4B2F9EC4D5C57518E8210FC2C61DA3FD185CFA65DF3DB858BCF75E95321A7131
547E0C854068826FAB1D8A48A3708F6B3AA1DE3502DDFE91A553D31ACB26D732
FD54BD83E3C485032A061769D33F2D8BD8AF3E5EB9BC7BE18F5EB7A440C673D6
25151DBC150FE25384B0E304BB85A140375383149A3A282B3C1A2DD60330607B
2227C8FA6DCA0BBA0FF8F31D014DF938AF76ED6DC37FEE4AD941A482CB903601
2A09B166A63E733247E6A97289CBD5264C2E574E9B672ACB124FBED6580C39D6
A130678100141FA920C347B3096B0D5BED23615CF99ADBE878DB4A9CD5DC6A31
3C70C43D3D05BB7669EE9B9DC978AE2018F883AA804CCFF66EEFFACDC2F36228
7A632C802CC68C815B3F752D1FEDA8215151A5B799710662B4FE3DB37004E8E3
F9E6D6626CC108573E1A50311F4FF876AA067F87B305E68746CD0081FEA8A006
393592A2BF09449075E6FD14CAB1B91F916DCBBEFBCA48B33BED89EB06B69D79
3252D77D01F1CA2A4E278F7C70F0F693A9016757E73CF123CCEE639C85E5F85D
01EAD4897E07633CD81079013A159A4D58DCBF8A436B90799563801EB5F227B5
2FC5A4525195924C988B0E1C44B0D90C20D92F6164946CCF6E14BAFFC49BA8B9
55AD5B42269A79139D34C0F36EF2C31AEAB72789293CF481E6351BB96EB65D4C
9218D77A8CFFE0571424D9F093709308118EDB7A58551C504ACA7C17B9CED7AC
15CBD348FA5EECBE8086239FCE7E291557AE8880A77E855CF7EDFFB7F7DC1768
77D27D69790C2704899F93BEE14D5FCEB0BDE2FF537D7F655C148A3BF84471DC
C257ACABE47CA7FDAB41BAA8BAD5B99A3BFCF8D66669D38B8D95C33B60490448
DB1F3DB41EA0D552EEF060F208FAC7E6CAF962CC60EEC31EFC5C621B0D3BF3D7
9F6EC35E56046BF8532E6B06946C4BA03D46C3C537517AC5121270EBC713C83E
BF601010160AF6D46DBB6B219BEB22E76547C4D17A3C832589188BE73EB3243F
9F92522E192B760625213AF434B2E18F0CF389AAFB8B11F3D183C712572CD314
E40A18A4B37C04754339C96D309C47AA9D5677A74F981C48AB4239EF25D2EF62
0542D73E6DACEED611CB6CB846A3DCCAD477279AA5235DA35D2F0B0E98F3BB3D
81E0E539671C849CBA4F74468E91C67C8FDF58AA6213C4239A4966C913D6F11C
F70A7BF812D44E99984B0090CE19206F567EB25963808434C690EED0BDBB8EF8
5683FE2BFC98E8CA02BFA6E353A6A6461F3555419433A83E044FF1C1074A1D1E
117E05308E4EFDC854D20043EA21979AEB7505D378F530D121FDED1CFDA1BB67
34A0B3E16551A4A35DD7D5F16EA286A2DD2FB04E69EFDF7C06AEE17BC9440677
4587B4162CAD1D8F9DFD18316F5028FF3E5C22C142AA991C474786D676BA1439
C26B61B0FF5E1BF2E715555675A4F01A6FEF2F28F83FBF6DE8DAD4D3BA2FF08D
6DD6223FA43BC37B925EE0083FC45BA91563D449AC9962E49451C4C4CFFF04A9
9401F36AB051E930DA75A5E53C2D0B8677E163D950D3CB62741FA439021BCAA6
6EA22423401831015D63ECC9738ED70ECF43AF8C8990CEBB79CB242B6FA2D158
6B62F6D7D97287939822978B936771F2644E11350514483F34867AB209BB47E1
FD66F7B19A634C5C568CFD5B960F38366E8B70D7EE512771D30C7B3AB999C3AF
D776FC1D07D8D7422051CA0213EBE93A0CE23166D1758C7276A7C584DB3688C0
A977CB2F30C10463DC0C494A2B508021AD3105FE0E5F5F9D9F020A1C2DA72FC0
08D25A88B5D4018B53C36BF144891C792245C0C2B3AB65C18864FE167C09E6F2
53B0D2F44C2F2664A3EBFBCF5D274A1034681D8C88BD1E1C261AFEF2697A3722
419BEE925E0041EAFA021829BDCA9C56DCF61EBBF071D1D4A108F414B924D172
003592EF0EFE4CCE9AE33A506E13277D264FD8996DAC260F2A9F50806E6FA62F
8DB72C53733F2DB2E8E933FD5AAD581A456B60E027E682AA7591D4C5705B14E1
9D5987C3625482300335CCBB8192AD85DC5515C0C871F06D92085387A95EFE35
7BD468F76A67E29AFD226CAD35FCF10417C08DBA30469B9CC53A57948CEF5775
06506815A9F563960913FF6D5457DC4E570465DDDF4809FD356541016191549F
F6696C7842FB2473AC6445D565619D7238AABC54F2BEA7B826BDEB84C5C70436
FDCD4F8E64B65DB8ED1FACB606552A2034CD060C992B3C907977B48D345869AE
A5549D1B44C2EDE45B37787D6CC15D994BA6F662330C7CCEA5B74EE800B48372
D661A657B9591731C50CB56E07F4717AFCBA1CAB6D36EA0151905E7022B65861
A054FB6CBE3A19366DE8D06889930560BDA07219419B5F23F0F8AD1397A5F1D7
5E4E7983E5A73E8E6EE13D58657C49BE55CF874AA530C25B6C6E24E379A29EE2
902F87503C12670210B9811FA649D0DE88DA1F45C1D8EA54C2D54CC06289FFD6
5BB1FD16BA5BCE161BD28F4C1967C68EC8716E9E8B4728FC2438D0671CF9C39C
1111A93E19E925A98E2B7AA768F9277F73B689AC03CA299A30EB7544DE077EF1
8C814DFD1C7DE2574C1E6DCA25A9EC893DBB12D8149A978DB6A06618769C1C37
0BAB58195C15B370F8C8144D83B5C414E2AB9EB5C9239C6918D072ADED1A148F
DB6C086367267A763AFF4755C415B295E4068314D5E1ADC5B78EC85BAF1345E8
755AB057021872D1CC2EAFA792B4E6EB4138B9720A734B433EE2F1C771B430A6
9000107D55A1478EA6713B3486BCF36936CF7BEC2FF82A5D0E8AD26277CBFB18
063E088F4DF266F2D913B158F29584491C5F4225A17A8D22AF169B38131E1F8C
A12331739F81F4D2B1E85F380DA2D4B2BE09B6A2B25A4EB50F83A456D6C13AC3
BEEB9F6F2018C25076D72365FB9A0BBEEA06E22A6664E7BF0DF2ACC644B21326
61A947C5662585038947B4D5475302C35D70D066FB6A4E2C8228803A48BEEA14
8E9EDFF4746203003D0EBBC2DF28CF12133C7490702D00F97847190123E774B7
B933E901686B5D45665E74FACFD0F5229118AA5429A8AFB132D7F03A09373376
09FA9898BED2BC45D5B5C7DCB21089941B5C98C2DA756223E286D233194BAC5B
3795AE9E604AF0B8390BE2B6C619B576CB2FD55851F03BE4A1F062BC0BC6520C
2212F5DA9522B957047D37E88745843E0BD3C1369B204891EBD0063938A9E7D2
5C14AA9978D5827EBA43C44A3CE4DB68BE9F742A20D5C7303A31BF70CF7B45CA
1EF24835E2BB21713BF977B3AFE6BC225460756293DC2BD5FE6DAAA6CFB360E9
14CFCD1F0CF1F59177F4EDD953A6529B41B73962E7AE5C65FA717C4CEC8D578F
6312677077F460D17483262B462ABC55FCA54BF4ABABB5EA291A3CE89F472C5F
F4D0775011A79D4D999B5EA066EC282D9AE3DA08AAB7C37F180053609A1EAE07
BD9E1B01CAE093D36E7FD12A382BC1E15850E9CF599571BF05F20A567D537282
92B7F6524914C88AE33ABFFA46961E8A03819B43CBE672782D8AF20484DA34B3
8619FD467ABD63D8ECCE47D87CD3845DF26DB7009F31DE32F77272A364C0C8D4
EAA5A5833F59896A1AF074507685D82EA34729FAF2A02237BC639434FF5B081A
7DF556097E55AAD67DCD0068D56E08108258F713206EF3A2434CE872DDF5AA4F
CEBCCB240DBC8B37AFC507AC3E87E522130077CF0B495C71C66A24F62CBF91F1
E09C1723F0D0A62F852CB4C8D52BE246A31734FEC6D1D484CF17F7ED6254524B
9068F3271916CE3AEF7CB21961D9DE145DEF8BF26F8F2E2F95229EEED4152F1C
0BE130BD12FAE1383B4BC8D54D66B5B44D65DC4F1CB6249CAC8C41D2ABB5CDD9
47DB81A5CF9D1CB0F1CA60AD417231AFC5BF46CEE116B8F696E8791BD1624990
3D07F4FF2BA72FE8C60C3B456E8ECFE2225925CACCCA6F4681D89F60655AE239
8445EE6B9847AF802CE4165504AE0A33E340821DE639BC8B3CD8B0F7DB919644
86A579638562861F6101A3B1608BDD562202A4C0B1273FB4242F5D9940E9B7E0
96CE348041C904B00900D508CCA87B05533984C5D95221916AA0FB4F031ADF0D
3FB14F8E8DC4F742104F6EA43721174C5F3A515198C3B0CA2B31BCE3C7D86B5A
5A5111C4EB08E2108B13EB43840A6843B0B6B7233C92C12A111A262494D8E6C3
9CC76D9BECF4E33C85B8FF5489818DE1D18D9BC63592749908D684ADA9DBB033
56D80BF24792E812E15948A353C7AFDF72E75965D1F221D28D6BD712B9F2B7E5
36FEDECE016345453D3BFC38E9464DF13563B3148BF7A45E936024AE75C13D8F
9A5EBE3C5563D453846E8848967454F78CEDBE18A388E84017E820E78CE84DB2
1AAE570D1C60656714497BFB8DA253B577427735F4EE20E3834CA2F9625BE82B
CDA3B83D9B0D66C268BFE7D5EF026DAB4EB4E81E8F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 6 /plusminus put
dup 112 /radical put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57030ACE57A0A31C99BEDB251A0ECAD78
253AB32E9AD71F7E106560BA511DA17DA9B50B0585742DD7C5FC3BA0B94348CC
1C27F194D9FD5DD303309D4E1262DC924ECA34D9AD0A1C03CA53FFC8036F7E2E
2CD4BCCAB4E0DA5181D6F2CFE5086AE9C19BB6B635ABA6B4A34DF4431D935227
1BF75321A9237332AE45D8CB1F0C5B52ABBF37116E2A41FDD215C30FB11FB137
B125BEE01DA2E9A5EDF196053523AA39BF180668089A93DDA7D14CD6C9CDE49E
15DCCCA94A72071AFEDCCCE63083EE0029E74A850EB649CBD612265C4E09D33B
BDC7C2296C97D832A058E69F726D48151BC405A6AA2A2E41521136A299EFA8BF
931C53FB5279A77E99C886C4A2B4684BB85255C6900123761AD8C0D0CF060707
8D1AE12B2839207B516772D23516F94C3574B65593BAA1162DEDFD7B0161026C
F5AD4CDA822C5C00D78E00FF9DEDBDD44037DD602FA482FB31176CD150BD053B
4F152B7E7D0653F26ADE28F2984820685821374F09F5A544D1AF925F38C9E533
97655CE7CF30CD00CA2F152CED99269007A721024FC4F0F188092079EE7E86FA
44244C372EB41E6531F9F11C663B0A7A005B08B2B2018267E74D7BB27ED7FC8D
980D5BC9864B24696E9BFDFE593EB0614D7DFF651B55CD2C6651C7C3E458B9E5
44FA641DAB2F22F9D783C73EC6BD1FC0519E4D1690403ABD134B19C2D187576C
C166797AB21A4459E8E09CAF112ECFCD4D9138CCBA358D313E18E9CAFF0A213F
74649CF1CF91603C13F709153B87DF332B73E4D5E8A1B82B3598860D3881C761
E2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 12 /beta put
dup 18 /theta put
dup 21 /lambda put
dup 33 /omega put
dup 58 /period put
dup 61 /slash put
dup 73 /I put
dup 97 /a put
dup 103 /g put
dup 109 /m put
dup 110 /n put
dup 114 /r put
dup 116 /t put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
956017667589EE6908966A17DDDE40C2FA52A4C9DA871EA13DAFAF5F9B39E6D1
E17315E187FA80D92CA5E2456E2B14C16945303D400D6E317A56215F77E4CB2E
2F1C5013CF4E702E82AF5CFC83EB2A04A39B780CEBE4B5495AA3769AB7CEA1B5
CF164B6BF650074D8D6EEC42481B7D6834CCDE367EFAF4B71DC4E0F4715E519B
4E4446A7B7A669A81A66056A965A7574784C2BDC6A873B20F7E7DBB9B255435B
DBE497F34378BA46A718D9CC740A25B463E159E4A0DCB5F6B8D888D192D62D51
AA121530F19A08201901490290C562D0FF0485B29C5A0FE0E138E04ED8106E2A
93947CC31688E267FAE6C97E99FDD246182DF7E8A5EC2E5E62ACE4B78B87E0A2
9E6D504190612D802B29828FCB125AD4989736B58E6346F306775166C6E60FCA
D983A7840FBEA3C441A5253CB5EA50C55A949F0EC33109A93073BCA6F60B228E
EEAC72C88F54CB75BF779F81FA78E6B0B642E5592326CCEFFD7E1AD77DC8FBC2
4E6220B10DE9EB2205999A6866746C934FCCEC7019A7649FF5EB894613D6164D
A3F8E3D4D5E1A3BB23FADE802AABA34CABB581340108327D7CE62843A5C42E3C
5CEA5D810368F82BBCF6C3A2FF2A4E06F27B176B3E172168C1FE52E1DC0F4A4C
B31DC9A7B997DB04EF220D3020D311C1E2416767DA0A2B12314BA188F74458A3
7FB6DF25675BBC10316F1AA4C9A25A53167B25FF7363F22551A1C783410030A3
4FB5D5B8B3587E5BC75CFFBB6FB63DB208D99ABB947F9D6DCA3117B0A06439CE
D20C00EC90203E3DFF220E12A7ACF308D84EDF634270FD4948C888D281755292
AD2886F6D14D9F988AC4F87A233C2CE9E0AAE1B1E8139B87CE952E056AE9143B
4BF39FF5624F3519526467345CDC29DBCCB6C6B24C5B435257B1B3FB6A4C3941
1C8B3C91BA908C3735CCF2D9B335E660D673C2201283F9D6E990FA226D505357
57B147C39A1B49AA050F3B717CED3DDFC992E26C2EEECB03D75CCFA41B1812F2
DE3C324ACDAF0E5493C0B7A02363471F618EBD7F18EDD783839849946C550346
E2CCD4AA0C3960008E85939BB63C609E112A367D2876F16DEC8F7D87FED83C13
DC4011A521F387CDF378084EDA5D7581E2A4AB07D2E7757DF0928692912A3D0D
249FE069AF7F512C7DAB141C640E76CD79ED5E265CB6C1462F39E9160158A797
46FBC0A45E53E5D8979BF0049BF8B3A6B74BA13F44A13F4BBCB42AA843E2D388
951F6DE84ADA2C48FCCB7990928B2BB7165BCAA85E187B7F3A5FF2F541B9BD16
3D6D0F4D3EE4820BC4419C9BBF7C37DC130FAA76BDB27F5426B48E352E384657
922A8E1F3AA2D44098530E42C4A1AC9F0D513990E22D8B8337233A42EEF0F231
BA9559A5F0D951C75191EB1760A9B2CF34F653BCB6E3E54389298151F376B1EA
544EA64048852B0F3FD8BB11509A59F330BBD21547EA8F5A8B27EF195B2F44DE
1B286A39511A05C1C64EC0A444799CF715DF8A5CD77BB7BB234D3696BB230E4B
9F2CA73E6741D761E852FA9EECBF2FA125E54BE1DC2482D5A27DFC28D3210482
BAD6AACFB8B79203CD7F94D9902B835676CF899B572407288C8EB2B04F432BDB
9002D68D250EDBFA1D43691D81E2A5DA3348768B17754BECDA806932A709ED3F
5E14594A7AA1987B39865ED32BAB9385D3D538EBDF872985A9B78C545113A4CB
394602827336C059AA814989C72849B044C85AE6EAFD8957DFF2DB682D22E425
22A8DBE0EF0B63B6729CF89ECCBB8C1BE5A340D31E50B83A446D7FDB09A7406E
4B535DF584F3628FC6A7C0A0B5F9264E401D3E3C4445C11103E01AE8606970ED
4B5C5953254493EF4F726A5AE95CE10BE2EDFBEC7D7286A0A53AE3712A29824F
E833C10CB85BF990DDD3E5498C9B908B63D6F52ADCA535EA0D48D7F4CADC8773
90E3F91237B461B5D18E6C425B47B56583AC117079621C63AB76B926D82029C2
3D1FE37A81A8A1B5652F4579FE975895D09DA568B2A78455FAFAD16C39806023
819E2070A8935644F13F4CB6085A1E1016353D88802D5A0AFA3D0E899B59CF15
C315C0F96038406B1D2656995BBFF93CE78F0D129E73F5882EABAC0F7DEFF999
D18FB37F511A86436273C7D249EFC6DF3EE0A42F87D1B1C5EB67BA60FB6E7859
70006E9D0955CF01D4ADE8FB30F8D8706FAAED3794C46ADCE9BE89CA6CB9967F
AE9C24C37874F44FAD59689DE0537B9FB80CD33D49E2A2379B74822DF609099F
A465F18A1E5A0360939B88C05BB898876E137A770464ED1CB14DDCE215CA9AA5
750AE635C4A050F8A0894C96CDA4C344EDC89EAEB5927C23EAB83830D794B9FC
D71BF3DE397E4775098F080CC0CEAA1195DDF5AC9B9ABB7807E7CCD0332A8774
30206D39ADC5CE348136EC005A675C918E0AE1C12CB6E8011B50913233EE327F
B1E7DB2BA9D079C86BE65507472BE2270AE4C4060E50BB2D2BBEAF22D12E5488
A9B7EF1214F41E4693E64B245F38D75B7870191C5384B9F10CAE7191080AB99C
59DD5321E16BF662D1E0A3808C7B15ABF94A8642C8F2606984C2CA6D8BA6D5E9
1933BE2EC58663AFF8CE2A18EBCFB5AD0FBE941C12FF22905BC96C8B72C9D984
CC99D068FD32A37B234A396AD3C07406FA068DA80A7595A50B151E05A5C08878
F33BDE21A24FDD7DF173D2C8C6D172D73CC6F8A7F6CA906F5ADF8D6B6E3291BE
100E5BAA370F58FD7EFBE92FE44A6313A5B9B34509197FEEE234C67378094297
7D7D5984F00C188C12E3DA23B5C5C7001474B8D4CE40A61129CCB9E8BC22AD47
CA449FBC0DF67CE2EA4540B99D650CF68D17E9B3BAC6E1DAF64EB5B09114114A
4ACD3D39F07C4B037F75F5A3B7275A4DE3A1587DBE470D024D0A11D280A66B67
F0795BB1A38473E8D52B4B7CBBACC7A2CB4CF76023DD1F5C0962BADDB0DC37BC
2F58D98A1561A7816B2661C1BD425BAB7DEDB504E56C0ADAF45846D84866B405
0B25AC6A5644246FA41D5CFCB73D60FF38369FA99DD5391142E795C72C180197
1BECEBA30AECD0B4ED476057211543085E834B3702DAAA423299176E7E073D35
27B4CB4309E02DAA502A3D52145B02443BF3AED4A36AE4219AAFB143A5A9C620
8DD1FCD8124ED2362940BD108B5D2A5A432735A7C7344E154125591E02B85735
EE48A1B73BDFADC01B9A58987B53F85D1D4FE65FEB6E11A9423D68232CEBC303
235307F9A5F448E4FA4C2ED190CD35EB1DB5043AEF5F395E1EE839764D7816AC
C3A3DAEA36924D556939E3EB44F830E966D6A72D11513F47E0081C8CAD1C32E2
536469F7F384425887F68FBB0A143315ADBC892C84722CF29BEA79BC46E24720
DC13463D099769DE8D03D2DCF2FBDD14A22805336D70C60B7C923EE7278834F3
D039A1A18B39F061967852B11713DC4724986AF8597BDD6EBFE210CDBAA3298C
DF8300ADAC6FE3A5E020EACC5CFC2BEBDA99F7B77BDC004E59E1B7F547BB6E78
EF101ABD61F6193DC0978E0260B651874A38E03753A5CE857E9B12C183245F22
AFDB1ED9DB5F2E4C18B9933E6DB645EB092D7461AE1583108CBC1652E86D9DB9
47BA0A676615901209B40F4907AC42FC5EC1D7D32F543A3259B02A646C837FCD
457FFF16C19F5DB91A8EA4173DE13FA5CB73A6C198523400682E0A7ADD45559E
3A9D51D6FF6B95214769974D667415E5EF761C26E323B987D9737C7533A1E197
41BC773EB6E575CF2C6C1BBD887938E652A110ED3C596A3D26FAB8396663BDBB
35E34CF03F0C95EC6717F9CBBFD67726A7E11D98D3FA6FE23BD8A1C7DD29EAEF
FBA0716A7A3F31D586633694F872DDEF7D547721AD41D226E93A84F55F2B5E5A
8DD0E878E06988BFA48079CCBA378C31B20BDC79097D2D045054FDD97472374D
08564DE78D69225043F27BA408
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 18 /grave put
dup 19 /acute put
dup 22 /macron put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 81 /Q put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BC784E9865B00EE8B49B918E886049F1F4939403EADAB83A4D8C332E
2221AF8F6F4A4954501CB6A6268AC96F7091245F034BD65542DF47BC7BBAD667
1EE6AF9187E298CB7AABA58E3FB5B4C7E86616C1A830A4A937C265CC28A83EED
8F3C971D6DF5A50A615B713F5332E0CF05C754FD76916FECE4DB2807334C34E1
E2418FFF1B4429A564AB857F1E23337C75E729645AEBE7F8967630A40E00F8C1
3054F2BE2768682E50D0B43E3CE3897D9EE7257E77F9894CD4395C21585D16F8
AEFE05217ED4F78C31FD635A00CE5D0DFC7B0A6BF9444B62C836087731D6D205
24A45B3C8D80983A67377EBBEE171DE0B4A21368F9B83AF7CB286D8389785E93
B11277C65D4D789AF99B1D7A3032947A51DFABA0DA3B94D8D4205BE243264127
474D97F3572385018D62ED4B1A399B8E4AED8D7C329F109DBE3015A727DD70ED
6DE4DB36BF48205C8CE0EC0A77491A26F93F7C0A036827625F115786A2ACF14D
47E189148216456EECF3BBAE34408904A558C8A43E369A01C4BB7D2BBBBFB271
A89201777264C399F3925DACEC43096BFC6EED7D5B536D9846B22B75BE321739
617F870A37FD85691FBE1D0A38FAEF19653C8D5D5C1CD4661459A4EB3A9DE450
E4153CAD5C139394EAAD21FECCB8AAD024696F68D8F2A82BD0548AE275EAE43B
E62A2C1A6A396BF4DB127663A36D09B0388C198F0CDFAB1BA53D79420A0C7529
B0BE757D554390F271204C18A3CDD0D72D52948373E38251C508E4505E8450B4
0E725D99A55B6543C2AFACBAFD2D9DAAF0AFF6D937AF17762BA6B0DB0AF1D237
D490DF25FECFE6539ECE57C9913BBF588FB9831C826A2A0038DB71B7214069A0
6007D98391BD29E5D4AF398BF365A7AF16C8D6233DCE12EE7DD760BB72A31BAB
4DD576165ED82C45D26F55C2ED974ED067D4808EF1C42954A77FBEC90EEA2397
C943192B5908CC085442731F0C9983A9780ACB765D53E78F76A536779521ED28
E83E83256AD6842C3CFBD66A58FBF42A36699A037216F10FAFAAED622EF19068
FFCD71B2E8EE8CCB7325F2EC645649B9B80DBD4E18551BB5E737DF4F2130017A
5DCDCA750055C85FBB37E90D825A61B6714D5788BE542A21AD70AFA24AE38B96
BF737E0B808850DBA89CFF3390621116D133F8663E5D710BD5E10A5FE74E6494
BB866AF97CCAEA7D69FCF39C6D16762FD3A9AB56CC0F51C70940E71FCA3C42B5
A5528B53CBE729B611B6C12348B66A1A4322494BFAD824FA04169AEEF0D886CE
43E194C08F03BE8678A22E2AB2C1C0DE894876F40F2483E71D3183886969C512
AC8FDBCF101DFBD04E0A7DF00CACD6246FA607835AFA49340E995D1C83727955
E110556A5060743C4ABC273DB64DF80D0B86B191FF5B038B0433229EF543A985
6375BE642CE1965E1FDDB952151FB75ABA020EFFB0DEB4493D2BEED80FA3CF23
01753FDC30B9B4FB520F2C26BF7AFBAFE1B4F207C5968495C8B4554064091374
F80F1447D2261251CAE067E233F5935A433DEBDBE02CEB58E00B2209EBB1728A
27AC1F820E9BF5287AD6858B20F47EA3DB8315F7FCF788B675C96958BD041EF6
D2AE46589839F0134747CC3AD279E0BD502B1544871CA0C794FCF3CCB006F175
DB32068B711E4C62EA6E282A56A5EA71DE76200B4853E3623FD14BFA36803964
F64C7733470EDCB2529D75CDACF9ACF71699F3D21398441E1D6DE3E8B8053ADA
B0685F71C14B3CF61BC543123354592AF03F87E3090ABFF132106A07A17C5E55
E74F5DF7EA7371D85A3F450004BBE90665214671627C44E105C128826EA37147
147B0225881E363C18B08B6B26B43EAF4EAF260283C1D094FBBE3A455ECDB8EC
0FB27880354358E8BC419D9FE5F6DD3AA6512950F21631CCF59054652E926642
23AE5E0FA713F28E78E52C3E1F4295317F4EA4490AD4C7B010F637C5249B2D08
1865CB14A9CAE35BB5C515832A32B3648C505E0B4FA340D29CC990CD7C25ABCE
A718EBA787B990A4A7500DC8C73DDA55E03D9D4AE26C893C0D87168F5D0C0EC7
0548F4092B261272F7C3F3A7DA9F8A7FB2ADD306A6E30D8AC8E559121F00CAD9
E9B8400CD87DBE751A6712F499082A0D91A7B9FFCD77BF5A0510E1D33D8D1B18
9BF9041AF8DCEA0B3F7059A7AA3B373A71FD46A0952BE3B99567750D98893C87
72202BA7281CC4E5F99E1E66D7AE5512FB68B05A40A0BE909C03B593232251A2
D0B4975B0E9559541215D0FC8CE84897D5DFED3A86B98B5EF22D2CF8FA9BDCA7
27700CBA43981C019F907D1A68AC31D1B55C915448791954B543D3CB4062A07D
0FE6451CC99B42678F75EE312611F06882667CF61F74F0C655EB736E392CC0D3
2E4B4AB93C101ECF62004CFBCC964B65EE71FC2349C39BC06776DCC2BD2D0E16
A45518F5C0172F3272FB7D007113F0A14B15CA87B01A41D70AED3FAE13C43EB9
8947AEC107ED70E4AE5399D2BB8A423F89783B2BB9F90BE28A7D3D06573EA798
06B3EB505EB70B767805631B0F0108CDBAF6C21733B946476CFBE45D27DE5C40
95EBA817D88C4496CD35EA0FC0F27E1C27BA13BAF7771B006C85B518A04D4232
B5D5C42E7F4A087FD7451611C2617C0A3FDEE234E781B8B2E217770F3568F99E
7E8A8AB839FBECD3083953C0805B57AD60EB6262F8F8B88F74887F6008E05A28
EE4616ED98A5E97D1753F1F847796DA2CB29F29D5220A563D5CDAB2521DE6A39
B36819BD89EA437D51E7231FD212E438FCE1C86CF10D9F8D4F74B55E66756694
7AF3597F2A7AF61F2A8C2244A54F9613C06D65C71D83FA8565FD3BDF5B1B2B87
5BEE1B7A64A7D5D66C011A37F2AF4EF28085BFE4A87247E4174C985898FDA033
4B4D9859C6F83721BD89F64872F30023128A1307D1C85BBBC7B1EE7ECF129837
FFB9A1F6368D8F365D1C927206907CF94BB4FAC2D41601EBA165F8DFC8F07A16
A66C85D8299957E39B203FA301EB541B3E9E50590A0FE3281D158693D4733688
69BF97BB139030D26F55EB8C48A4B37143538D6B456414D5C718D081C067870B
ABF5FF6EF43AFA7D8436E3F921D99EF50F951C6734E0C16095621D4E7200025C
F72E3C71E9FAF9AF69C7534AB290929B645C60E995724E324012A1239EF3BFC6
FFA32126D9AA3E9DB5E4E4DCAA328EAB2CFE2A8BBFF81C441DB1B5CA2EFFECE8
48C07FCD6C9D32B15893F44A8A3DDE2F978D3A5D362B7775D0EB52DFB00BAA0C
F519DAC49C13F8DFDC3AA56D30629D1B339B66D6B8F43BB9B313301B8EC29353
A522955B9125C5D5BB6EA57CF7E31EA8E3A111B04A2C85CF1AB51792F711CE3E
C1C19E995E5405EB3BE8585F9EA77F05F46BB8842CED5AA73378706C5F2D8AAD
270527AE40DDC3A510DE04E505063FB86DFC3108F68603D5CD8AC78781AD7AAE
554E267B761080F089AF0E920F5007DC0819ABA4D6FAB4B2746F040486C7EBC4
262424E9E8419D642E198A09273D68D707E46532FD37644F706E301A3A1BF4C5
4F2ED3ED6738FD92F382BD068098F64D5296B6B421E6F8CE0A277FA98A673EFC
A73E3FC3FA0509A5182CD17C310D5E850946B2F5622A9407AB8C37CEA78325E7
DFCFD26B55343C513575D6B1B74884F2DADF97156C0973A6F359E7FBADD8D1E7
6D1CA233AC10D81AE0CC028692BD36A310E0F74E47D6740C0856F7D9CA1F2745
540D3FDB5E2FB29C24BC52867B432C088EA6B189170B5BF261D1838E36C192DD
C6FBBFD644CEFAC1C9EBEA97C980FB0B7443C388DEB17421BD7C994A80EFC41B
E397A2BCF784573AAF9DFB629DBA70B5712926070E004BFB55CC1B4229EC6CF4
11EE9D7FD2D4DD1157F0B30058617320FBE96124DAA74E5881046C21426346A3
866A6AE1EB721BEE81111BDC21C72D20C9BF01EC521819707FC75A97D411639B
837016030C602AD949654A49BF5FA814654F329FB5D5A39A4D1E3983AFE1DB99
809D2903C16D6EF763F0C464C75FBD9E974341C8342D379A75C81EDD23757747
9B8FDCBE8DEE2B54A2D20E4708DEFD1306675CE7E3260E05F4C0649A628A77C4
EA3E78E1A6610D1658BB5A6796989D179E305D4C0549075729230BD91317E971
12C03CC815BEC8BD3CCAC2D899D43B0F59390139AD3731B71D0B6306B6DC166A
040EF4509C6AB62AF91B681CDD924EA53C94ED473E249271A53F66E95E73C711
A6E203A89B7FD510FD8D88CFE662B1BAC49109DCA6E8A5EFB3C9D3C38BEF92AE
E1EB2A7392AA85616F1101FF955A85C16F13340065977B099E8B204032EB72A0
9E415C72DD48461E0B8557F768197D6CBDB8602F12D0E2F820B80DE6318941DA
316ADFEEC2990C13EB52D58B468821D515510E93890807DA96CDDB5A8943920D
17F6B36A8606D1A2F92F298D655006EAB0391194F75D955116C65A77CEFE93C5
E2EA09AA6C4F91C34CB76E6A18828407E80F0BE7F05A5886C948865BF809BD49
96966E9304D5AB1D8954327026873BF07BF255F2053298CAF028CB3DC1843D54
4A8A6CFC7CD68FC36141775284159CDC58FB7CBD5A580BE7387FFF6CF20BC03B
F9AC3946E5720BEDE642402B72991D4FF20364308CB90A0F70DEAF9D0DAC300E
5828CBBD7899922FE3281E1E311CCA0EFBE3BD7DAC684FA645EB0AA0FBF53628
1A655634B43C7DCD280175745DC9A6BED0BE6B4B77E60E3F6A09579C1DDEB964
30719E625C48DFF1E486B1E16FA050C16CA04F92E8A3FAAA4A553CFFF4026EE9
31939B2356AA70FCB4C401EF377DEF9CCDB1A39B154813FD16F82D00FEBB81B8
6626E6059810C168B035498F8AEC2838BA7451BC08C8AA0DF5EFD25E97A21E8A
2C28BB1F0A64EC4E1517B6D357E31F289492E414BE035E650F2AE38D0E4ADDA7
A3A863AF4E2CFDD04B537B0363CBC41A2C55D7B6D0F37C29747C710DB1889D4A
260F3FB15505F20BE47DABA742A25FAD6014ED2F72C99CB77AE35996B0CA45E1
3C875D90A8CC93FDEDCED0F863701EE1337D0788235833225F55354727C94085
1461CE8D520DE3E9CABA32C1D749C95AAEC6C55E88B5B26681674799B2D4BBE8
E16935521FC85EA0B3E3266D70DA88264C53B3D4D5D4578600CB951C4AC30FCB
7C5476C3D7F414DECDAB0F2FE0F2188EC63C1A6A56FB973238698A14399DDB4A
D1C86FDCE669FB3BEA96C9F70295F3921D08BE31182DDB9EDB17979F9ACD22D0
A4A0526677998546FDA0EEB34EE10A29E4F7E956C44E6E17FBED77985ECAE25C
03A32ACDB9543504B8F1D759A7BA8C0EC6F7748286447B9EDF46605919D46B91
91DE416FB6078E3A0C288B58FC971529BEC86BBA471118987824B2AF9319D978
EEF87F706248691C26A9C9E3D7B92AE722BAF4EBF83B3901BA4691E77917F45E
97C1B15CADC024B007B4E77726FE870D6856404ED4E5FD43C07999C54A5793E4
84AA053B2B59BB4EF5486E406D813394CB4ED526C075091330B0586000BE09D4
6EBE1C3F3884490E5DB3BDCAE7ED8A5BEED16F3EB88166F848BD8626165AAA0F
B76AFDE7CEC8CE22AA79E89911DA5A329404A69C4720F4719F081ACD070E5747
4F6C4BFF5B5062C7F0C55D7AD28B77C41C00050E99DE1CC3A17472DC1843189C
4BCE08C2413EDD2524CE6D68D8E6EBC6D7E4F1AFF2EEB78E081DB587C986BE73
1A539FA80FE4CE1939E0F71038870BDCD6C38E2C537F3DB5D22D545EF3470524
D8C9CA3935563C2F51F5ED3FC76D40F7D6423FFF452223F89BD9054427D3B7B8
02ED117253CF497982DA51875F1E0B2D3E8E26B043C50E573C73EFF3726C59AD
3BFE8EF63469A6936160BEF50265443385FC2549FA12B22B47DC1E5BD35CE491
0FD3729D3B077F2EF95B071B8DE29E7381DDE2FAD10870263EF9EF54D4D1BC43
A40917FE4604954A361FC3E180709039C675908AA6B90E2B6B89E53662797BE7
3CB83C682652F58817EDCF8C75E847EDE11C3D85DE7F8DA807EE0007456E0BDC
1DC608AB8E321BF9CF945D271E0B4F9C250EDA0F4F7231342D2300BE7ECB8A75
D97A967E40601E3FECA548EF98D310218095438B5F64880544EA6A308D748559
71F6FC00E2323075A5C771DE55BF670B0CD72053ACD0BF64108234CE9EBBB4EE
E47E86501E75EA3B1F0879B4B1D5BB9FC48D892919A4EF832E10249D05740927
7DE48A968B8F2297CE2D16533713862E1501D422F21BEE7B7FDDAA6C523269B6
1E2634B2A73ACA45A460EB0CAC9D7FADFE3D574D40A3DFD37180D8DC6C739C72
E78EE352395FE20B9BED4CBD35F0A4C63AC9BFAA68263C235CC5C61FB990D12C
92922333A2234A8E2E1FD86E4F64776E9C337E8FE37D980FBD46860BCFEF7D6B
FB146B6EB53E583F8456A1C5ABA95FD5B2DF6B6301C29578DB5D0A48DE8AAFE1
3C76A0BADA07430D57D6BA083D682FCD9B794C318E85B6D6B92EF3446B1E290A
95E1DF6F94F86A494EA847C866F43DB622A0C9AA4CB5EB830DD78C04092C1C81
CD9A70B140C117E389EB810EE488C0859854DEAEE19602EA85C27EF2AD2AD2B9
48D1BCDCA92B0F4AC670D7173AD2FD30E841E9C625F6BFBA9E1A2FBE23262924
482BA7B1ACE326E3265CBE746E98630EBA6BF89CF779E03487EFABC0EE09F2A2
3D9815779B1F1E30F29E34A4F235CE8FE2983EDE9BBB5E9B0B8750EDE16BA780
E27004DEE7252183D5110546FD352B583398A7851DA1D716E3999F24C44820FE
73C7EA20C9306FB60C59D59B73D6E620CA2418442CB68DB2D97F416A43843618
D156C51B56535C02D246AACF2C97F9C7C4467A64C36738196C42C9BAD10B74D9
228814547BA5D2A2BF9D0592E3CD43658DF06E5EABABB57B68C4201C91FF1C89
897E2783BD7105946D6911E58DE22B56F232F3BBD770BE4905BB4C523F2E86DC
2F0490DD77464E70B351A93FFCB485D4098EA5C917171E1D2C46397254223886
89074B9EAE76527227FB0350EDF29E71FB5224D5C31CB5A8E38AD005DC1C68F5
82864AC3C0734D457B103A03C774620BC41689CA6FB5A47816DFC94686006718
6CCA6D1E64BF5C542E1CFBAEF7D2BDE35362D624D16EEBF6755ADFAA2774E7AD
54398027AE768758139698912C234368043691BD4F413754DA555D2379AE4120
ECB699A546CDFAB37FE46DF0C78F6C2670C5B8EABAB7C136B8902662225AACE7
8B0ABA8049E2349918B3C1C56DCA747EAF0CA4FFD9B329DA6DDA8E7399731040
915AB2BBC1F0C0C8201E74E633AC25F6758A343540A17AD5BCC65D30697640E7
B541419A6C367F09A4AB6CC88CDDD8A9A36FEC50FD609EB9D0E08138505F7EFA
2D8E65CCB6E18C77C46C7222B9D5CE21D063EAA027F047357F19DEF34C143DD9
5914BF04B51AECBC29B07DC155E46C897E4655FCE6BB36B3AAC35A614FCC8010
B4FDFC421CAEFEE1591AA29AEF6839044388EFBAE109742BE89CD375311FC4F5
DB7922CD9A037346B6706EE2C8238AD1F1CFDDB305BD1DCF89C9A810D60207B3
23D3BE171ECFB3654AAC839CB4C4F2428D6999CA1E88556B191D7EBDF706D8EB
5DF16EBCDE634252AF737F3462BA658DECF8A2EC9457399204A5A550C27C1AE8
22453567972D9E4A0812967F289750253F15662229C9FD887937BB9155A54B05
20B7CEBDEEF85F87A7BAF959DDA6E8F0EBDEBBE7F8F7D1BFF8E201C5F237FD2B
9821D64350209BDCD178403445F2A6D1B56004CA82B4F930692111C8FB266E33
9DF76B6E6E90B144ADA51FDCCF5F2110CF28B0972F2FFD7AA8784DA6B3135B2A
428D475C6A44AE7B0AD9418731433CD9227DE68A229A9315089613EACD310206
6DDD7C94E1307C200E71A278F0B29818E794B80170673A275A1B151363BA71AC
16B0AFF9BDBADD028F24EA8B7F49955DBA20ED3F9CEA7983B4FC21262EF4E375
D0ECAB54DA1A01CC76C62B05A977D876DE75DBFDCF9D2249B6B54C2A6EDC568D
FBAD9308E62299517D439B469FF509A6B87B59C2A588FF377CA5A200FBE227AB
263BC4EE80768537A9BEED3362B4E672FA7A369B7B771B9207A5B5FA6A341260
0006263D2B6525E7DA5681F8F506F4FC105F3BFF861658D4C7736DDA248CC4B3
DF52D22298618991E05FA361BAFC5D746DD2BDD2F37C15A546456D666E96B0F3
67F05FB38DE443D762A3BD49710C0EECBED69F709B198DC52DE3A792EF975837
D420FAB770FEE57C07DC4A788373E4FE60CB634F362435C287BEF2288F8F359A
C165FEE4D15540D252BC4F6875A30158E8397834BA5C728BDC87BA14A8E2296B
F23F0509F89538F71C3CC1EE73989D72AE89C4B1900E3854CCCF59A8FBA32195
8972C419B288C684ACBD960500DF227C46CA356DDBD1563695CD99DAC7194DF0
2ED3479468F7FEA775B3BCC777CD6C48CFE571692828AD7034AFA0708A3637E6
2764EEB4C621EE3C4C4DB84694BC043B23706DA7A0AE3DD31C2807925C84275C
4609D14E3A0A68421238C2C4577C1039F93611325100EF15A7E1020E61719CE4
179A4C0C70DDF1AA0BDDAD35EB058EB4CDD0C1A48128690B7B488C9FCC73188C
78189D3513059481BA5CD25D0F23DCFC95FE4771966D6DCBE132FE8F153F1396
E803DA079309AB6208C477EC422E3BD1615CB924C3E73574C1E87CA93BDA89C5
FC269B5B253D7E0C5718C6C502457DBA9FE65665882D66D25FB3BF50462BA0D6
D1263A5DF741EBA247C5CA4E5F2B15E610D6C01C9919FDF163F481789A253D38
4C1A60352C462F53A92D0B1A34D5FFDFD484CC413C8F54495CBCED7E1E6D6A46
3A4C3AE2E1FDBBDEAA03E0025E6C2ADF31E392BD2A8A52DF37414A8AAB67C423
F35BBA0D1A8F3464A7FEB167143EA6F66215BBCF838A166A606D9A2D8DDA8141
D11AAB3DF7C30315EE3A326AB96ED037138B12B5A0E6A90BFD3BDC9888988F11
CE89945AB80B91C6EBDC8B44474310D58D795B9470041DFD2B7229F13458494E
09C6C3B353632A91444DC0C02D7F2777A94966B7E9F19A40BBD62D44B9BD0553
6B2C6F4EDB96E1630E1194BC0948ECFE642371E774E5C06D7779CF0EEB6459ED
9BF47B742A5DFD5354CF0667BB088913273DB03A3C827D87F5C92422CBCBBF75
0CA6E11C712BF053D32593DB26BE3E745373B8C8DAB1F4902C432338B7147936
952A4180880D90861BC20FC79E414B95A5EAB54E54A58C2D965B0797D804A0E1
B87BB3E66FFA83A0A7164CF04DF9754EB723925264D6308104039452974638F1
4CBF22A45081B99592ACEE767B31EFEA2CAEB48988CF46EADE117616434273CC
27923B1D9BE52D817EA36168082B42CC05095555977182083ABE26C4AE576BF7
D1D244C6C02F4747EFACB2055AF8070804D47179B21965F1B6E2705A453D37F0
DEDDE409CF006C62E7E766B31BA5A76EEF3CDEF72045568BDB6BA2E11F71DAD8
CF8CEB4A42619469AB615CD2F03121CFC46EBD112609FD6A811CF30966D40F8B
030EC8EAFB739175E6091F359671B26446272D668081E3B3C69F7BEF10E84921
78F46DAEE7CBB141431457895F6B8099B4A3E2CD3917574CFB673B4A2907EC5D
A8D3EC1BEE751C5C17CF38D383537F8F00DAD4848FC256773B95203EE89A327D
DD5A9DE06B5D4CF2E6244E6D190F2284E69873CA48963C1890FD4A69F85595C1
B4161D6C5CEE13CCCA84C5781D5CD668E61BF9087370D3A543EF9D9A4510055C
87620D2844B554F7D6D3C7D058048AF52DC985F9363B46BF515A9EBD61FA20A6
F8ADB7A93B1CD569EF7C230D66E32E3DDA42F90FF34846170B375062A510F770
E25BA2B0C1CA721A2104D7730BA916AEF8087036A764A8E864F10178A8988F4E
D0683F98897AEC1174B331E1620CCABFE3B1270C7A743FC0B180AF8F1C5E8323
79C4F07F654C7643A4293767F142A03CA2B46A10DE8ABB9890C1DB9863AFF26C
31F4677810F2E643D463329ACF5CCA5DE89548EACCE39E782D48A53827264AC4
FADDED76531F3B8006BB9DB69735A5FE3A5D33D2A4161BFF89E08CE4B58A4533
40DA1AA3ADF7129971B465DF96AE40F4707E9389D91832C0F9B128B9F4D576E1
EE274276720B8B1B01047107CCC11482B9FCC466966D239001E863BADAC7BFCE
A62F94F69DA25D7029D0FE31856A763042515AE9EAE0802B22DEF9A028E4B400
2C35EDB90F31913D4BAE20AF472980186E5DA67B983A0CE85DD597C3C091D5B7
9113496485497B4C630CA94D668CC39B26CC3B248250B46E8CA54EE65A8EEE81
050E70C7F4FFDE6CD70E6B4D65F34059CD772A3ADFBA3E6733C9BF2AA42E57F3
B9C70C3783F02651453C56344C683F10CD05880725B501DF42145DD721FE883D
530C004260777E9C7BA38FB5BA3216F303095D23792A1FB5BFA3631DC332CDD8
7418B238E40696EC8CAB7C16B7DD167125A8B6F041B0E5793E5104E2C33F05B9
2F4B61C5A44EB2CFA9758C377B6EFD60BDDAA1A9331EE420D1D02A7C1599E465
28B3E902365B55F63A988DFF8CF5FA2FADB645EA9F26271E1BD55EE9E0E99237
374D88DCA18D081A5A8E35BF50801FD4C3B6FEA88967209B3921B4CC8F923D67
7E3C78F4649D014607B119ECDF674CB8D9CB98DA51FC2343678577EA45E61B78
1A8341279E7C8E1750A44C4A74B77527C78BE7BE5FCE287B2D3FB3180F476369
F5ABF883220A80B07D51508F97BD3D7E9A9BBDD2DE8DE6FA8AB750A97A1B9D1D
924EA73212DB981E8D45C5332BBEEB6D981AE6900A2EC31FD989D5212366933C
F94ED7FC6D8DFB3506A6A77955E1D0A64B153BBCB0DB6E9701469E68492B7756
8755BDDFC2CA12DE87358D142B9D01161488A73EBFB23B2A55456B0F251B4EF7
AE5A8D403F49167FA8995138BE436D715FF4980A276690047B9274FF1FCAD874
7D931490457F5FC3314D6CF5A91908FE14FD23464A176D5A3EFF2A80B2DC0734
E6CF4EC7FA06BC983F01B58197654076CDFCA8ABA1E207417545DA8E22DD33FE
0B22EDD27421D5C2547AB7DE27F27BDB2D3CAA04A99B6DEDB3F046F8EBBA5705
B8DEAED5F03936344667DD356E09D460AC280A29EE3673E030C458B15AEE7A42
9127561542725CB2D4D9BD0A1B5C0512B7B0B3020A67FB278085738817AA192A
909AFC099EE14F3734E7D11AC55E698FED2A3F2B7C15478D33A360083E50AE69
E69EC41408214238A4D90FAD759081F326E2EB58F03BAFB32659715BFA4B575A
DC1BD69DC986EC856AAAD80ED14658464CA773263BBBE52FB34CE7D47680FAA9
B9C035C26007CD292C1056E869A167BF5402823A29A45A3BC772E71AF2974E4C
58B9C4ED820660F7F0147BEBCFB70BEBA73FC0CCE94B0F94CCD8D5ACA69EE8B8
0EA117C5C35ACFA86D0A3FF5119DC09FB3165369E7458D4D8B9F56409BF40B01
9D05D71B9DF011EB7393F20D522BD3B8F42721FB99B12B286CE7D6E1F0691352
B58653605CD55210A879D479FA446FB76C70C18718B9D27A44EAA4EA17B2DCB8
1DB0B7C7F2C2956830D778DD2C78EC57450382C775B0F73C52B4E3EABEDD28FA
D2DC880B4CE52A7F4D412D5A47E214F8602F72E73CDDBE22171FE691D6D758E8
BBD97FB971D874563D3926BF2045130CF6AF9E821340CB643584BFB7B8252FA5
95BDF9F675BB07AFB73BC5896A872C57E603537E35C12196CA28D61ED03B25D4
070C23BB9930D0E16E3D738AAD778C647823F053096707E04AB30096AACEB986
218A8D4DFA159F5A53AF3078F720C4EAD0C494A770717531CAD2243E1A9631FF
6CFC37B8C55E2430033F674738370213ABB7A3EE8E6328CDA3DEDD798633DE8F
17F35C2EB4C7288FED45F02AA273546C5C490EDA4DE5003C1547267E8F76F39C
4BE88A3EF54B6D05B62C6BE8EF3CC043A64547589866E777CA0340D7F20C9467
7757642D229E2E845940234A0796A084DA7042B76FC04B00A457FA07D818F759
454C7B888E32C102C7C73F7E6E314E03B590369171CC654C77307C0502E90A3E
C2477C8110C1C6DB5F2300590E81691919D458E84F022D36C2409304CCA91BCC
BB6EE41E04C1919A628EA301A3DBD9A553B02B119F45C21547E416FE2FF5B8B1
93E7EE9FC347516CC1352D66534BF69C7FD0F0A7800C359CD661964CAB576984
AF91B71A73339CA22F49AC8ACD59DF10E2CCB0FE631936208D93B52077795E32
78A6446CD08923544B32CDDD97E1AAB648686C40C40359E8D142DD7277AF7724
ED101DE0417F2609E86828B302840BA203D18757C48E277093358F6D2AADFBFF
3BD38DA11848EA5177F13EC422E32FD76C79E92AB003FF3D5065173467DDCFA8
4A6CF5910F8E15D19FD9D69BFE432913A6FF72BFD1072810F9F209C0DDFB5847
13F689E03671A9802CDB3E601DD60C0D3F91F0E0A17EDBA2004A4F805907BB35
CAB026AD6D39BA68BB60C8EF74530DACAF4C34EC529469D4D7C8E11EE0DCC946
61F48CCDC150B0A0D579124E1175EFDD0829D4002F2350EC9C446C197C79A059
B90A97E6A28A8556F5DEC91FC654C2BA7AF707FA09EE1859395FC030558286DC
2B8A5D14A1B1B0E146ECC44C6A74E90B0EDCD7794D12C324D426C8E3AD05A2D9
0CD6F5AC729B52AE664FDD60A346BF5EFBA4357801AA0A83D441A8925702211E
0BC686CA438537BD760CBB576229AC2392B6F6616CB95A5071DC4BDF1DA580F0
8B71B2639ADD71D8B96D29526EE5C93ADA07BE27271F21379B439675208FBBAF
2C854F48A2B80094A94CCB1D0F4F6022AC78C1DACFB33094BDAC105E55DE97ED
3628B2E684A99A8A99DCDBB8C5F1B81432B84D6EF875ED982DFAF5DFCCE9DC8B
C87EA6DE753E3E1D5E1AEDC0E5FFC8FA1F55BCB9EE098CDE2820376652B2B90F
57F19BF9F585B9115E3A31A2C8BD00DB13271ABD88D7E8F54846CFE203F3C9D3
06D29E0C865F64D161FF19F0BE0C1AEC632F363145C2017D5CB8AA9EBF6D94FF
8F27FAFA68C8FFDCBA4581A4D046253594CF122265766A97294536A0208F39EB
9D9F5534ED8FB3EA25298A85F73CC88C38002828700E309BB8002FA7F6666B34
65DE6BCC7321158E1625F0C5BB63406928578BD9E18D9F90B2E7B91F8829FBA9
E0CF123A5301CF6F6CA974E2F64173247F3100A123901CADAB9A9FACD7A81E03
89C55AB61A663877C416F87BB6469D7A5AE008E9757575C6C1BCAEE2FA7632CE
94E3F925CA6AE3D9BA784E0223547AA752F3DC836997F217B8CCD18F36B55535
10A447A69E09F7E890C509CDEBF4DC1D563DA9F635C3BF86B86E3D4DA9E2738A
93C82DDF1E601655A48EF944941212638C8585B1CE14E8777F9F101D3BDAFFA3
7E026FD0FFE29EB4D1077292C84637930D2D6746959C0629E89B0888A997C16C
46AB96B74A7A95D899CCFE216987E1E7E46485851A2D8C9A590D8E673CA2EA00
991758F26060E6A17DBF68ABDAEE63F60DA74D6BF8342A20BC60C9FB8A764900
DD69D45B09A531F10E12A7D82DDA348E476E25853780122E37E635303E0AC68D
856666B929B1AB8F91AB1187F84276C2EA11DF00AF00B702E60B44C42B529679
9ACDD6E320A50DCE7470D8D9CD7B837C19B7598DE4F94DC9E01441886AC70E6A
6389C39205193476883143CEE3FFBC1373F4A714D8DF27BCBE0BC00C4A2A02E1
07EFE1FF12E81ACE33A55A39617C4830A90255EF66D4EE9563A55260C222F73A
59C1356924B501AD22AEA496ABED7A2BA4AECEBFE4F46672E70EB3B2DC45BD7F
B81DAF12B247CEF4631976F2CFBB6F889EBA524EA0889DD6C2064EC11C0FA5A3
C5F5255AB3E3E9C4AB9DFE33B05E989C6CC57AC96679ED035ADCEF8D5FC17E5E
37CEFA8024D2F0E4EA69E3E301E04687DA68337DAE223DD4FB822969DA8DFFC1
BC717F6B35602E517AC0A1C249B7C0A08B8DDD3D9B4C2CFF1BDD4C7ED8D7B1EE
3C730264BE3C73DD743F464D81B4C1EBCEFB8267A438BE8C8E1CD25E611CDAC6
91277A64F225D8558F0B9770070744F4240A31D771A6E0BF30FA887077615CB0
B8994EACC807833199E1C20E707503188845284598225A9D479F2379BAD0BEC1
0DB4164546108137F7BF8DBA9214DCB674015A9D9D1D165838D3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /colon put
dup 82 /R put
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 118 /v put
dup 122 /z put
readonly def
/FontBBox{-33 -250 945 749}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F6F3F23E0C1657CF5D
E8374835BDBD2DED3690C84A1EBB8E2383A5E49E610B6F5F0F5F5EC43CFD16FF
24FEEFB92425CCB577E17FDE4EA6C50E1448DC5726A21888E25B6D6B52DA3D3C
E4C4C6A73C176DFEB60B6B6191B336AC4F5BAA123E1B3B6FAE4B3FA9DC8F7E39
335277EF2294315BE95F64EBDB1F393B293FD0FDB9DEE6C89082232013130D28
9234FF12DF47D454558A1EE8603B2832772E5CA07D18B34A4763D5B890F7173F
B8FEEECCE6F627ED0B99F55A7B29E677A13C06385B1547C8D5BC60B571412602
395116009EC0838969AA16B391703F81A20D38B4C7B46BCC53EC5FDACD217C7B
76BC8CD05DCFF526DA55A95DC1EFFF36F876DA7CCAD413AE599EBB1A6CA6D269
C22AC0D9C56C4ADF4F9F8EAF9762AFD5CB93198D162BD9BB431F3A6FA74F2B12
F00001B6104ECF2F72C9BDCD82FC4E0AFAFBC6052F40086269B6442DAB9ECABD
68032D67BC89291FA9F68234A826A8819C0FF776D6E524C6EFE70E34295FF927
9938FF2E7FA49B3912E07405D2EBB7A041821070C17FEBF606174199752CBAE0
DE42C843D0BB19ECB66421A2D8E786D0A210F995C42DBE95B3087AB80EBEB3BB
BB12F947DE70ECEF5530F16EB0D5E2387195DC51D56C9614D50FF8A54282FF77
0EA7B2A975C269047B23C84B857D1ED3A43C05333B95A5DC88576603177E7DFF
BD9CB21CC2A494816D65089D64096E7A7A1D1F9303C53DF1DB153803D22F7A9D
78DFCB476E38D144D38AF6D590C6A8319CB0B68F6778DC4CEAC895894980A062
CCE0F0C5483A7737392DC8CAC2C601C5A92CC542F58BAC97AF661A17C9537205
A4CBA0D9B07904DE79F1A73E061433BEBEA2E654D782737F3CB9A8CF24DF8384
F62DF97CD4CC9A046AEA8A8675FDCCD7A6CB38F8013C3727CA27E22D7B8BE6B7
BC2598A9FFB4430DA8FE69CE1A0B19A5F8BF9B02D045136864FE063F0410E1EC
BF6AEC3CE3E04B2D5D73567EA5104DED1F48C8866D278207180C7E6CECE5F073
DBEE16FB15E8718F8985FA89C5A1012566C93686B5CF9ED6C31938C15F38E6CF
DAF8B47382DF0D2827DA4B6E1A5A4E14E9EEA2A52630E09CAB8EEF9E1C343FBF
C98CEFB47A22FB8816B49EEE7CE7E96C9284BE8B52E6D4A579E178CCE3068D29
A4B5AB6F1A6B3D197E4B8AD5B41B1E629291910B2D4FA69DB62230F1F2E6F811
A42D6117A81A05CEBE039BD11555CE9A63892A192A040021CE2702C6477537EE
248CDD1F539549243225F4ABE53C69CA98E586751477F442751D10CAD6EDBA1E
9DDBB5BD45B74062B36E2FC28E4D7E27537BD586220CC10A93E40170A013C37D
97338E7424024165E6B21B10B749CDF3EE1A47F2767E669D66F757A8AE36E75C
F1DDE226695082D3FFE5731CC846E4F26A6FF153DB98B1C569FE0B411D4416AA
822BC495B23E8BB4597F58B1AFB91F47F3DF30460958138BF3E10DD3AFC0B48E
A7DB69491469BE62150FDAF4C285FE0B904CB189ABF78A5DF26A82F320C390F2
AC2C52A1C95CACBDF0D5122E8D665397603468356DDE9D648AAAD689F7CF4716
AC29BCBC8C88783AF7845EA26F7A1F723B5C436B38F5830FB804055F43E8B262
D00F19856567CCE5408D5A236084CE7F33B97CB31345B18C8B488320684F5D0A
CAF853445683B2A5AC349D46EF573CB04038AE123323451A12428E67ADFBFA35
E65797E8C59A88DB83B823EB38FBCB590080BB000D6C166358AE626C1B5B43EA
B41378C72D142B641B65B1930A97E78EBFB2DD6656708953E8C844A7695CB8D6
C978B986D9B4F1C3BF217927CABF235DDE1FD7B0C9E4B8FA70FC7C0A5368E8DF
5D2826238C898A92BF49E646C739AE9B1245ACAE3A3552BAD32C5B48AC19C705
335DB60E3C2C58D49C8080D3B4DBA1D63A4777C5A090E09371E954B678E40291
AE3C4F245047106FFB74947CD613689B8F0C8745F79781C3DBB32DA9723067A6
8763ED5C0000FC4912ADF9140A770D5BBF9404153F6FBDC1E1337C234085EC8B
6AC7BCF933914D511D8ACDE4BC06DB7A6BA5A7EBEB92C28C5B30A30853248EE9
34C7D150FC9F574238101B3999EBC25F03F6FD33D3144B694480C4EB19C790E7
39F5886EBBDFB988C8B71669FF3E08DCA1E54E9BDD3713957057A3B44F3D89E7
3C6EB7D3E611314D3BA8FB53C78EFA8E0A96EB09E545BE94037FB4C3D74B8719
7416878239B0791A19DF3953B1D376686745DE5E6FBE5CCEEF664309B7BE0761
1F44F72868261C1F53F52F9C732AD78B56B9F0966FE56D283C9A6551BBAB6CD5
735699A1916C2495466A19C4B25E574945D58CCDDB7E2C9C9213D8E0F69CC0C1
2D554A18D001C7F0BBF478A9137E8D4059625B4BF272AFFB03B381F468BA16DA
CD6C262096566111284A14EE9E733488C0043BE062411D65CA904411E0EFB5FD
FA0CC739CA6BCC954F6ADB90F5915AC80BA2D0FFEF7F21DC924C32743F9306AB
73C4931B2C8095A7EEE3F8D8E98124C7AA98593A4530476924A3D6781D69211D
D20A96073265EA0E0A07A7B8C02C8258EDC6295DD80D9F2EC5CBCD083623C515
7802AB1FBDA012916A8DA00BD9187F970A55049F47BFCFB5D1B27F1D5FA2F277
0DA8E20633539574A49226041A01A9D34A240AFBE1D4DC197481EF5211972A9C
5FC867C46178CEF86D23FB80D7F591252D033EB5D5CC03DAEA3DEA3D258C997B
B001A2894E040AC4B8BDD7760460FFECDC7913D9D2737D6EA07F466E130052A4
7B4EB9BD4B220B56AF7960F1F5CEC4C9049687CFF719B24D455737CCA2C0E013
A7A9A83B483B93725C850F538AFB21B46C7CEDBC791840494C19187F38DDB1E0
09F425A89E24CC75C42057A137A63017CE846C02DB6BD91C7C5646370BE7A00C
CB8A2C844F9DB846BB4390BF04AECE6179208AE76B78B557099E72EFFBE54F9F
06DFBDE69CC64511527CA9A623ED80F3764BED330C28BA50C579079C27001311
524414A22411B7CC2FA91D3DAEB57512B315B4ED98D89443BC395A3E90D15405
6BE862D92053158028E4AEFA807BF4944085010A08168130521F59167CE1E5A6
5FB7D13CD8C2BAF59C16DB2C270155C6A0A986DE799B0104ED309295EAB6530D
C876185500AA2B573413F53728D9341903822CBB261BB97639389B2DD0E083DC
B7E0FB98A196412473C664FB5265C8519D243014F90AF3B44425335B2388FD5F
582A03A5E44037B505189A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (relazionevolano.dvi)
@start /Fa 252[ 31 3[{ } 1 41.511 /CMSY5 rf /Fb 252[ 32
3[{ } 1 49.8132 /CMSY6 rf /Fc 139[ 24 10[ 22 71[ 39 33[{ } 3
49.8132 /CMMI6 rf /Fd 198[ 38 38 38 38 38 38 38 38 38
38 1[ 21 23[ 38 20[ 64 1[{ } 13 74.7198 /CMR9 rf /Fe
140[ 24 24 13[ 34 2[ 30 39[ 30 30 30 30 30 30 30 30 30
30 25[ 30 20[ 50 1[{ } 16 49.8132 /CMR6 rf /Ff 139[ 28
82[ 48 5[ 44 27[{ } 3 74.7198 /CMMI9 rf /Fg 141[ 32 8[ 24
1[ 35 103[{ } 3 74.7198 /CMTI9 rf /Fh 133[ 31 3[ 37 39
27 28 28 37 39 35 39 59 20 2[ 20 39 35 1[ 31 39 31 39
35 20[ 44 2[ 25 2[ 46 48 54 9[ 20 10[ 35 20 1[ 20 2[ 27
27 20 20[ 35 5[ 39 41 11[{ } 35 66.4176 /CMR8 rf /Fi
141[ 34 2[ 41 2[ 23 6[ 37 1[ 36 45 40 12[ 57 12[ 64 12[ 23
2[ 41 3[ 41 41 41 2[ 23 33[ 45 12[{ } 16 66.4176 /CMBX8
rf /Fj 140[ 83 115[{ } 1 83.022 /CMEX10 rf /Fk 150[ 22
7[ 32 97[{ } 2 41.511 /CMMI5 rf /Fl 205[ 28 50[{ } 1
41.511 /CMR5 rf /Fm 227[ 37 2[ 44 25[{ } 2 58.1154 /EURM7
rf /Fn 252[ 34 2[ 52{ } 2 58.1154 /CMSY7 rf /Fo 135[ 35
4[ 26 26 4[ 55 8[ 37 2[ 33 43[ 33 33 33 33 33 33 46[ 55
1[{ } 13 58.1154 /CMR7 rf /Fp 139[ 25 10[ 23 7[ 36 23[ 29
73[{ } 4 58.1154 /CMMI7 rf /Fq 227[ 43 2[ 51 25[{ } 2
83.022 /EURM10 rf /Fr 133[ 60 3[ 71 75 52 53 55 1[ 75
67 75 112 37 2[ 37 1[ 67 1[ 61 75 60 75 65 14[ 100 2[ 101
10[ 103 97 1[ 102 9[ 67 67 67 67 67 67 67 9[ 37 39[{ } 31
119.552 /CMBX12 rf /Fs 133[ 43 7[ 38 2[ 49 1[ 81 11[ 49
40[ 49 4[ 49 49 1[ 49 48[{ } 9 99.6264 /CMR12 rf /Ft
136[ 44 44 1[ 44 44 44 2[ 44 44 44 44 2[ 44 1[ 44 1[ 44
1[ 44 44 44 32[ 44 17[ 44 46[{ } 17 83.022 /CMTT10 rf
/Fu 143[ 69 105[ 65 4[ 23 65{ } 4 83.022 /CMSY10 rf /Fv
139[ 30 1[ 37 3[ 50 73 5[ 40 5[ 44 23[ 36 11[ 42 2[ 23
24[ 52 11[ 48 2[ 39 5[ 47 53 11[{ } 14 83.022 /CMMI10
rf /Fw 133[ 37 3[ 44 46 32 33 33 44 46 42 46 69 23 44
1[ 23 46 42 25 37 46 37 46 42 11[ 62 3[ 65 57 1[ 62 76
52 2[ 30 1[ 65 1[ 57 63 1[ 59 62 3[ 65 2[ 23 42 42 42
42 42 42 42 42 42 42 42 23 1[ 23 65 1[ 32 32 23 16[ 42
2[ 42 42 5[ 46 48 11[{ } 58 83.022 /CMR10 rf /Fx 133[ 58
3[ 70 1[ 51 1[ 51 2[ 66 73 1[ 36 2[ 36 3[ 58 73 1[ 73
66 14[ 98 23[ 36 58[{ } 14 143.462 /CMR17 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black Black Fx 911
640 a(Relazione) 43 b(di)g(lab)t(oratorio:)d(il)j(v)l(olano)p
Fw 841 880 a(Ilaria) 26 b(Brivio)g(\(582116\))p Ft 710
997 a(brivio.ilaria@)o(ti)o(sc)o(al)o(i.)o(it)p Fw 2154
880 a(Matteo)h(Abis)g(\(584206\))p Ft 2050 997 a(webmaster@lati)o(nb)o
(lo)o(g.)o(or)o(g)p Fs 1596 1188 a(3) 32 b(marzo)h(2008)p
Fr 80 1545 a(1) 135 b(Obiettiv)l(o) 46 b(dell'esp)t(erienza)p
Fw 80 1727 a(Gli) 31 b(obiettivi)f(dell'esp)r(erienza)f(sono)h(v)n
(eri\014care)e(la)i(legge)g(del)g(moto)g(rotatorio)e(del)j(v)n(olano,)e
(stimare)g(il)i(v) -5 b(alore) 80 1827 y(del) 29 b(momen)n(to)e
(d'inerzia)p Fv 27 w(I)p Fw 35 w(dello)h(stesso)f(risp)r(etto)h
(all'asse)e(di)j(rotazione)d(e)i(misurare)e(il)j(momen)n(to)e(delle)h
(forze) 80 1926 y(di)g(attrito)p Fq 27 w(\034)p Fp 483
1938 a(a)p Fw 523 1926 a(.)p Fr 80 2201 a(2) 135 b(Descrizione) 45
b(dell'apparato)i(strumen)l(tale)p Fw 80 2382 a(Il) 31
b(v)n(olano)c(\022) -40 b(e) 30 b(un)h(corp)r(o)e(rigido)h(vincolato)f
(a)h(ruotare)f(in)n(torno)g(a)h(un)h(asse)e(\014sso)h(p)r(erp)r
(endicolare)f(al)h(m)n(uro.)g(P)n(er) 80 2482 y(ridurre)c(l'attrito,)g
(il)i(v)n(olano) 23 b(\022) -40 b(e) 27 b(collegato)f(a)h(un)g(sistema)
g(di)g(cuscinetti)g(a)g(sfera.)f(In)n(torno)g(all'asse)g(di)h
(rotazione) 80 2582 y(e)d(\022) -40 b(e) 25 b(\014ssata)f(anc)n(he)g
(una)h(puleggia)f(\(raggio)p Fv 23 w(r)p Fw 26 w(=)f(18)p
Fv(:)p Fw(95)p Fu 12 w(\006)p Fw 13 w(0)p Fv(:)p Fw(01) 14
b(mm)o(\)) 26 b(con)e(scanalatura)f(elicoidale)h(di)i(tredici)e(giri,)
80 2681 y(lungo)e(la)g(quale)g(si)h(pu\022) -42 b(o) 22
b(a)n(vv)n(olgere)d(un)k(\014lo)g(di)f(refe)h(c)n(he)f(sostiene)f(un)i
(p)r(eso)f(di)h(ottone)f(\(massa)p Fv 22 w(m)p Fw 23
w(=)g(34)p Fv(:)p Fw(0)p Fu 9 w(\006)p Fw 9 w(0)p Fv(:)p
Fw(5) 14 b(g)q(\).) 80 2781 y(Il) 31 b(\014lo)f(si)g(pu\022) -42
b(o) 30 b(considerare)d(con)j(ottima)g(approssimazione)e(priv)n(o)g(di)
j(massa)e(e)h(inestensibile.)g(P)n(er)f(misurare)f(i) 80
2881 y(p)r(erio)r(di)f(di)h(rotazione)c(\022) -40 b(e) 27
b(stato)g(impiegato)g(un)g(cronometro)f(con)h(sensibilit\022) -42
b(a) 27 b(10)p Fo 2655 2850 a(3)p Fw 2705 2881 a(s)p
Fn 2738 2850 a(\000)p Fo(1)p Fw 2827 2881 a(.)p Fr 80
3155 a(3) 135 b(Descrizione) 45 b(della)h(meto)t(dologia)h(di)e(misura)
p Fw 80 3337 a(Il) 25 b(v)n(olano)f(accelera)f(p)r(er)h(tredici)h
(giri,)f(o)n(vv)n(ero)f(\014nc)n(h)n(\023) -40 b(e) 25
b(il)g(\014lo)f(si)h(sv)n(olge)e(attorno)h(alla)g(puleggia,)g(quindi)h
(il)g(p)r(eso)g(si) 80 3436 y(stacca)f(e)h(il)g(moto)g(rallen)n(ta)e(p)
r(er)i(e\013etto)g(dell'attrito.)f(Il)h(cronometro)c(\022) -40
b(e) 25 b(stato)f(a)n(vviato)f(al)i(primo)f(traguardo)f(sul) 80
3536 y(riferimen)n(to,) 31 b(o)n(vv)n(ero)e(dop)r(o)i(il)h(primo)f
(giro)f(completo,)h(e)h(sono)f(stati)g(registrati)f(i)i(successivi)e
(do)r(dici)i(passaggi) 80 3636 y(in)g(accelerazione.)d(Dop)r(o)i(il)h
(distacco)e(del)i(p)r(eso)f(e)g(un)h(in)n(terv) -5 b(allo) 30
b(di)i(tre)f(giri,)f(son)h(stati)g(acquisiti)g(i)h(tempi)g(su) 80
3735 y(blo)r(cc)n(hi) 26 b(di)h(dieci)g(rotazioni)e(consecutiv)n(e)g(p)
r(er)i(stimare)e(l'e\013etto)i(dell'attrito.)f(La)g(pro)r(cedura)d
(\022) -40 b(e) 27 b(stata)f(rip)r(etuta) 80 3835 y(p)r(er)i(dieci)f(v)
n(olte.)p Fr 80 4109 a(4) 135 b(Risultati) 46 b(sp)t(erimen)l(tali)h
(ed)e(elab)t(orazione)g(dati)p Fw 80 4291 a(Dei) 40 b(tempi)f(misurati)
f(\(tab)r(ella)h(7.1\))d(\022) -40 b(e) 39 b(stata)f(calcolata)f(la)i
(media,)g(l'errore)d(quadratico)h(medio)i(e)g(i)g(tempi) 80
4391 y(di)c(p)r(ercorrenza)d(di)i(singoli)g(giri)f(o)i(dei)f(blo)r(cc)n
(hi)g(di)h(dieci,)f(p)r(er)g(di\013erenza)g(\(tab)r(ella)g(7.2\).)g(Da)
h(questi)d(\022) -40 b(e) 34 b(stata) 80 4490 y(calcolata) 26
b(la)i(v)n(elo)r(cit\022) -42 b(a) 26 b(angolare)g(media) 34
b(\026)p Fv -49 w(!)p Fw 26 w(=)p Fo 1568 4473 a(2)p
Fm(\031)p Fv 1636 4490 a(=)p Fo -5 w(\001)p Fp(t)p Fw
-1 w(.) 28 b(I)g(tempi)g(in)n(termedi)p Fv 27 w(t)p Fn
2497 4460 a(\003)p Fp 2497 4512 a(i)p Fw 2559 4490 a(=)p
Fo 2647 4473 a(1)p Fv 2671 4490 a(=)p Fo -5 w(2)p Fw(\()p
Fv(t)p Fp 2803 4502 a(i)p Fn(\000)p Fo(1)p Fw 2934 4490
a(+)p Fv 19 w(t)p Fp 3048 4502 a(i)p Fw 3075 4490 a(\))g(sono)f(i)h
(tempi)g(in) 80 4590 y(cui)e(la)g(v)n(elo)r(cit\022) -42
b(a) 25 b(istan)n(tanea)d(\022) -40 b(e) 26 b(uguale)f(alla)g(v)n(elo)r
(cit\022) -42 b(a) 25 b(media)g(e)h(sono)f(rip)r(ortati)g(in)h(ascissa)
e(nei)i(gra\014ci)e(7.1)h(e)h(7.3.) 80 4689 y(Dall'in)n(terp)r
(olazione) 17 b(lineare)g(di)i(questi)f(dati)g(sono)g(state)g(rica)n(v)
-5 b(ate) 17 b(l'accelerazione)f(angolare)p Fv 16 w(\013)p
Fw 19 w(nei)i(primi)h(do)r(dici) 80 4789 y(giri) 27 b(e)g
(l'accelerazione)p Fv 25 w(\014)p Fw 32 w(do)n(vuta)g(all'attrito.)f(I)
i(v) -5 b(alori)p Fv 26 w(!)p Fo 1926 4801 a(0)p Fw 1991
4789 a(e)p Fv 27 w(!)p Fo 2107 4801 a(max)p Fw 2261 4789
a(sono) 27 b(le)g(risp)r(ettiv)n(e)g(ordinate)f(all'origine:)p
Fv 1409 4972 a(\013)p Fw 24 w(=)c(0)p Fv(:)p Fw(0419)p
Fu 16 w(\006)p Fw 18 w(0)p Fv(:)p Fw(0002)p Fo 2164 4955
a(rad)p Fv 2250 4972 a(=)p Fo -5 w(s)p Fl 2313 4947 a(2)p
Fv 1374 5096 a(!)p Fo 1426 5108 a(0)p Fw 1486 5096 a(=)g(0)p
Fv(:)p Fw(731)p Fu 17 w(\006)p Fw 18 w(0)p Fv(:)p Fw(007)p
Fo 2081 5079 a(rad)p Fv 2167 5096 a(=)p Fo -5 w(s)p Fv
1411 5231 a(\014)p Fw 28 w(=)g(\(3)p Fv(:)p Fw(34)p Fu
18 w(\006)p Fw 18 w(0)p Fv(:)p Fw(03\))p Fu 17 w(\001)p
Fw 18 w(10)p Fn 2178 5197 a(\000)p Fo(4) 2294 5214 y(rad)p
Fv 2381 5231 a(=)p Fo -5 w(s)p Fl 2444 5206 a(2)p Fv
1284 5356 a(!)p Fo 1336 5368 a(max)p Fw 1486 5356 a(=)g(0)p
Fv(:)p Fw(257)p Fu 17 w(\006)p Fw 18 w(0)p Fv(:)p Fw(003)p
Fo 2081 5339 a(rad)p Fv 2167 5356 a(=)p Fo -5 w(s)p Black
Fw 1860 5857 a(1)p Black dyy eop end
%%Page: 2 2
TeXDict begin 2 1 bop Black Black Fw 80 291 a(Da) 28
b(cui,)f(essendo)p Fv 27 w(\014)p Fw 27 w(=)p Fu 23 w(\000)p
Fm 897 274 a(\034)p Fk 934 282 a(a)p Fv 961 291 a(=)p
Fp -5 w(I)p Fw 32 w(e)h(propagando)d(l'errore)g(con)p
Fv 27 w(g)p Fw 26 w(=)d(9)p Fv(:)p Fw(806)p Fu 17 w(\006)p
Fw 18 w(0)p Fv(:)p Fw(001)p Fo 2663 274 a(m)p Fv 2706
291 a(=)p Fo -5 w(s)p Fl 2769 266 a(2)p Fw 2802 291 a(,)j(\022) -40
b(e:)p Fv 1143 518 a(I)p Fo 1179 530 a(1)p Fw 1239 518
a(=)p Fv 1337 462 a(mr)r(g)p Fu 22 w(\000)p Fv 18 w(\013mr)p
Fo 1759 432 a(2)p 1337 499 461 4 v Fv 1464 575 a(\013)p
Fu 19 w(\000)p Fv 18 w(\014)p Fw 1830 518 a(=) 23 b(0)p
Fv(:)p Fw(149)p Fu 16 w(\006)p Fw 18 w(0)p Fv(:)p Fw(002) 14
b(kg)f(m)p Fo 2581 484 a(2)p Fw 80 731 a(Un'altra) 27
b(p)r(ossibilit\022) -42 b(a) 27 b(p)r(er)g(l'in)n(terp)r(olazione)f
(dell'accelerazione)f(angolare)e(\022) -40 b(e) 28 b(esprimere)e(il)i
(temp)r(o)g(in)g(funzione) 80 831 y(dello)g(spazio)f(p)r(ercorso)g(dal)
h(p)r(eso,)g(secondo)f(la)h(relazione)p Fo 1960 814 a(1)p
Fv 1984 831 a(=)p Fo -5 w(2)p Fv(at)p Fo 2128 801 a(2)p
Fw 2190 831 a(=)c(2)p Fq(\031)p Fv(r)r(n)p Fw(,)k(do)n(v)n(e)p
Fv 27 w(a)p Fw 26 w(\022) -40 b(e) 29 b(l'accelerazione)c(del)k(p)r
(eso) 80 930 y(in)f(caduta,)p Fv 27 w(r)p Fw 28 w(\022) -40
b(e) 28 b(il)f(raggio)f(della)h(puleggia)f(e)p Fv 27
w(n)p Fw 28 w(il)i(n)n(umero)e(di)i(giri.)e(Da)i(questa)f(si)g(rica)n
(v) -5 b(a)p Fv 26 w(t)p Fw 23 w(=)p Fv 23 w(\022)p Fu
3131 871 a(p)p 3200 871 50 4 v Fv 3200 930 a(n)p Fw(,) 28
b(p)r(osto:)p Fv 1516 1194 a(\022)p Fw 1580 1191 a(:) 1603
1194 y(=) 23 b(2)p Fj 1733 1040 a(s)p 1815 1040 430 4
v Fq 1825 1138 a(\031)p Fw(\()p Fv(I)p Fw 26 w(+)p Fv
18 w(mr)p Fo 2165 1108 a(2)p Fw 2203 1138 a(\))p 1825
1175 410 4 v Fv 1860 1251 a(mr)r(g)p Fu 22 w(\000)p Fq
18 w(\034)p Fp 2160 1263 a(a)p Fw 80 1429 a(P)n(oic)n(h)n(\023) -40
b(e) 20 b(il)h(cronometro)e(parte)h(dal)h(secondo)f(giro,)f(l'ordinata)
h(all'origine)f(nell'in)n(terp)r(olazione)g(\()p Fu(\000)p
Fw(17)p Fv(:)p Fw(32)p Fu 6 w(\006)p Fw 6 w(0)p Fv(:)p
Fw(02) 14 b(s\)) 78 1529 y(\022) -40 b(e) 30 b(il)g(temp)r(o)h
(impiegato)e(a)g(p)r(ercorrere)e(il)k(primo)e(giro,)f(e)i(non)g(ci)g
(si)g(asp)r(etta)g(c)n(he)f(sia)h(compatibile)f(con)h(zero.)e(Il) 80
1629 y(v) -5 b(alore) 26 b(in)n(terp)r(olato)h(\(v)n(edi)g(gra\014co)e
(7.2\))i(risulta)p Fv 27 w(\022)p Fw 25 w(=)c(17)p Fv(:)p
Fw(286)p Fu 16 w(\006)p Fw 18 w(0)p Fv(:)p Fw(009) 14
b(s,) 25 b(e)j(dunque:)p Fv 1065 1856 a(I)p Fo 1101 1868
a(2)p Fw 1162 1856 a(=)p Fv 1260 1799 a(mr)p Fw 2 w(\()p
Fv(g)s(\022)p Fo 1488 1769 a(2)p Fu 1544 1799 a(\000)p
Fw 18 w(4)p Fq(\031)p Fv(r)p Fw 2 w(\))p 1260 1837 532
4 v 1364 1913 a(4)p Fq(\031)p Fu 17 w(\000)p Fv 18 w(\014)t(\022)p
Fo 1649 1889 a(2)p Fw 1824 1856 a(=) 23 b(0)p Fv(:)p
Fw(1490)p Fu 16 w(\006)p Fw 18 w(0)p Fv(:)p Fw(0002) 14
b(kg)e(m)p Fo 2658 1821 a(2)p Fw 87 2069 a(\022) 80 2090
y(E) 27 b(stata)g(calcolata)f(la)h(compatibilit\022) -42
b(a) 27 b(fra)g(i)g(v) -5 b(alori)p Fv 27 w(I)p Fo 1759
2102 a(1)p Fw 1796 2090 a(,)p Fv 28 w(I)p Fo 1883 2102
a(2)p Fw 1948 2090 a(e) 28 b(il)g(v) -5 b(alore) 26 b(atteso)p
Fv 26 w(I)p Fo 2609 2102 a(0)p Fw 2670 2090 a(=) 50 b(0)p
Fv(:)p Fw(164)p Fu 17 w(\006)p Fw 18 w(0)p Fv(:)p Fw(001) 14
b(kg)e(m)p Fo 3448 2060 a(2)p Fw 3486 2090 a(.)p Fv 1692
2264 a(\025)p Fo 1740 2276 a(01)p Fw 1834 2264 a(=) 22
b(5)p Fv(:)p Fw(7)p Fv 1692 2389 a(\025)p Fo 1740 2401
a(02)p Fw 1834 2389 a(=)g(14)p Fv(:)p Fw(8)p Fv 1692
2513 a(\025)p Fo 1740 2525 a(12)p Fw 1834 2513 a(=)g(0)p
Fv(:)p Fw(0) 80 2687 y(In\014ne,) 28 b(dalla)f(relazione)p
Fq 26 w(\034)p Fp 928 2699 a(a)p Fw 990 2687 a(=)p Fu
23 w(\000)p Fv(\014)t(I)p Fw 7 w(,)h(si)f(rica)n(v) -5
b(a) 26 b(il)i(momen)n(to)e(della)i(forza)e(di)i(attrito:)p
Fq 1366 2861 a(\034)p Fo 1409 2873 a(1)p Fw 1469 2861
a(=) 22 b(\(4)p Fv(:)p Fw(98)p Fu 18 w(\006)p Fw 18 w(0)p
Fv(:)p Fw(09\))p Fu 17 w(\001)p Fw 18 w(10)p Fn 2161
2827 a(\000)p Fo(5)p Fw 2263 2861 a(Nm)p Fq 1366 2996
a(\034)p Fo 1409 3008 a(2)p Fw 1469 2996 a(=)g(\(4)p
Fv(:)p Fw(98)p Fu 18 w(\006)p Fw 18 w(0)p Fv(:)p Fw(04\))p
Fu 17 w(\001)p Fw 18 w(10)p Fn 2161 2962 a(\000)p Fo(5)p
Fw 2263 2996 a(Nm)p Fr 80 3269 a(5) 135 b(Discussione) 45
b(dei)g(risultati)p Fw 80 3450 a(Il) 30 b(v) -5 b(alore) 28
b(fornito)p Fv 29 w(I)p Fo 715 3462 a(0)p Fw 780 3450
a(\022) -40 b(e) 30 b(una)f(media)h(p)r(esata)e(dei)i(momen)n(ti)f(di)h
(inerzia)f(dei)g(v)n(olani)f(del)i(lab)r(oratorio,)d(ma)i(non)e(\022)
-40 b(e) 80 3550 y(compatibile) 30 b(con)f(i)h(v) -5
b(alori) 29 b(misurati)g(in)h(questo)f(esp)r(erimen)n(to,)g(c)n(he)g
(in)n(v)n(ece)g(sono)g(assolutamen)n(te)f(compatibili) 80
3650 y(fra)c(loro.)f(Questo)h(pu\022) -42 b(o) 24 b(essere)f(do)n(vuto)
g(al)h(fatto)g(c)n(he)g(il)h(v)n(olano)e(impiegato)g(ha)h(un)h(momen)n
(to)e(di)i(inerzia)e(di)i(p)r(o)r(co) 80 3749 y(inferiore)j(alla)g
(media.)g(L'unica)h(di\013erenza)f(apprezzabile)f(tra)h(i)h(v) -5
b(alori) 27 b(otten)n(uti)g(\022) -40 b(e) 29 b(l'errore)e(sulla)h
(misura,)g(c)n(he) 80 3849 y(risulta)g(di)h(un)g(ordine)f(di)h
(grandezza)d(inferiore)i(con)g(il)h(secondo)e(meto)r(do)i(di)g(in)n
(terp)r(olazione)e(dei)h(dati.)h(Infatti,) 80 3949 y(p)r(er)e(p)r(oter)
g(in)n(terp)r(olare)e(i)i(dati)g(come)g(nel)g(primo)f(gra\014co,)d
(\022) -40 b(e) 27 b(necessario)e(fare)h(pi)r(\022) -44
b(u) 28 b(passaggi)c(in)n(termedi:)j(calcolo) 80 4048
y(delle) 36 b(di\013erenze)g(dei)h(tempi,)f(della)g(v)n(elo)r(cit\022)
-42 b(a) 35 b(media,)h(dei)g(tempi)h(in)n(termedi.)f(Questo)f(pu\022)
-42 b(o) 36 b(giusti\014care)f(una) 80 4148 y(maggiore) 24
b(propagazione)f(dell'errore)h(sul)i(risultato)f(\014nale.)h(Il)g
(momen)n(to)g(delle)g(forze)f(di)h(attrito)g(risulta)f(molto) 80
4247 y(piccolo,)i(al)g(pun)n(to)g(c)n(he,)g(trascurandolo,)e(si)i
(ottiene:)p Fv 1310 4438 a(I)p Fw 30 w(=)p Fv 1474 4382
a(mr)r(g)p 1474 4419 156 4 v 1525 4495 a(\013)p Fw 1662
4438 a(=)c(0)p Fv(:)p Fw(151)p Fu 17 w(\006)p Fw 18 w(0)p
Fv(:)p Fw(002) 14 b(kg)e(m)p Fo 2413 4404 a(2)p Fw 80
4639 a(c)n(he) 26 b(\022) -40 b(e) 27 b(pienamen)n(te)g(compatibile)g
(\()p Fv(\025)p Fw 24 w(=) 22 b(0)p Fv(:)p Fw(003\))k(con)h(la)h
(misura)e(di)p Fv 28 w(I)p Fo 2267 4651 a(1)p Fw 2305
4639 a(.)p Fr 80 4912 a(6) 135 b(Conclusioni)p Fw 80
5094 a(La) 38 b(v)n(elo)r(cit\022) -42 b(a) 37 b(angolare)f(cresce)h
(in)i(mo)r(do)f(lineare,)f(quindi)i(la)f(legge)f(del)h(moto,)g(come)g
(eviden)n(te)g(dai)g(gra\014ci) 80 5193 y(in) 32 b(app)r(endice,)e
(\022) -40 b(e) 32 b(v)n(eri\014cata.)e(Il)i(momen)n(to)g(d'inerzia)e
(del)i(v)n(olano)f(risulta)g(al)g(di)h(sotto)g(della)f(media,)h
(secondo) 80 5293 y(en)n(tram)n(bi)f(i)h(meto)r(di)f(di)h(analisi)e
(dei)i(dati.)g(Di)g(questi)f(il)g(secondo)g(appare)f(migliore,)g(nel)i
(senso)e(c)n(he)h(p)r(ermette) 80 5393 y(di)c(ridurre)f(l'errore)f
(sulla)h(misura)g(\014nale.)h(Questo)f(p)r(er\022) -42
b(o) 26 b(presupp)r(onendo)g(c)n(he)g(l'errore)f(sul)i(n)n(umero)f(di)h
(giri,)f(in) 80 5492 y(ascissa)i(nell'in)n(terp)r(olazione,)g(rimanga)g
(trascurabile)g(nonostan)n(te)h(aumen)n(ti)g(con)h(l'aumen)n(tare)e
(della)i(v)n(elo)r(cit\022) -42 b(a) 80 5592 y(angolare.)p
Black 1860 5857 a(2)p Black dyy eop end
%%Page: 3 3
TeXDict begin 3 2 bop Black Black Fr 80 291 a(7) 135
b(App)t(endice)p Black Fi 80 651 a(T) -7 b(ab)r(ella) 26
b(7.1:)p Fh 26 w(Dati)d(raccolti)h(p)r(er)f(la)h(p)r(ercorrenza)g(di)f
(do)r(dici)h(giri)e(in)i(accelerazione)h(e)f(sessan)n(ta)g(in)f
(decelerazione.)i(I)f(tempi)g(sono) 80 730 y(in)g(secondi.)p
Fg 231 933 a(giri)p Ff 168 w(t)p Fe 542 941 a(1)p Ff
831 933 a(t)p Fe 859 941 a(2)p Ff 1149 933 a(t)p Fe 1177
941 a(3)p Ff 1467 933 a(t)p Fe 1495 941 a(4)p Ff 1784
933 a(t)p Fe 1812 941 a(5)p Ff 2102 933 a(t)p Fe 2130
941 a(6)p Ff 2420 933 a(t)p Fe 2448 941 a(7)p Ff 2737
933 a(t)p Fe 2765 941 a(8)p Ff 3055 933 a(t)p Fe 3083
941 a(9)p Ff 3358 933 a(t)p Fe 3386 941 a(10)p 198 964
3366 4 v Fd 314 1028 a(1) 144 b(7.170)h(7.147)f(7.)q(232)g(7.)q(147)g
(7.153)g(7.)q(160)g(7.)q(109)g(7.113)g(7.)q(144)g(7.)q(122) 314
1119 y(2) 105 b(12.)q(656)h(12.)q(568)g(12.)q(687)g(12.)q(086)f(12.)q
(650)h(12.)q(616)g(12.)q(569)f(12.)q(662)h(12.)q(642)g(12.)q(612) 314
1211 y(3)f(17.)q(250)h(17.)q(250)g(17.)q(295)g(17.)q(221)f(17.)q(298)h
(17.)q(311)g(17.)q(237)f(17.)q(268)h(17.)q(278)g(17.)q(243) 314
1302 y(4)f(21.)q(356)h(21.)q(340)g(21.)q(430)g(21.)q(358)f(21.)q(349)h
(21.)q(392)g(21.)q(345)f(21.)q(390)h(21.)q(368)g(21.)q(354) 314
1393 y(5)f(25.)q(066)h(25.)q(022)g(25.)q(094)g(25.)q(039)f(25.)q(071)h
(25.)q(028)g(24.)q(931)f(25.)q(004)h(25.)q(077)g(24.)q(942) 314
1485 y(6)f(28.)q(449)h(28.)q(410)g(28.)q(469)g(28.)q(434)f(28.)q(406)h
(28.)q(474)g(28.)q(370)f(28.)q(411)h(28.)q(458)g(28.)q(357) 314
1576 y(7)f(31.)q(547)h(31.)q(631)g(31.)q(596)g(31.)q(578)f(31.)q(492)h
(31.)q(591)g(31.)q(566)f(31.)q(565)h(31.)q(592)g(31.)q(523) 314
1667 y(8)f(34.)q(547)h(34.)q(549)g(34.)q(572)g(34.)q(578)f(34.)q(545)h
(34.)q(566)g(34.)q(516)f(34.)q(492)h(34.)q(581)g(34.)q(498) 314
1759 y(9)f(37.)q(379)h(37.)q(376)g(37.)q(421)g(37.)q(255)f(37.)q(319)h
(37.)q(362)g(37.)q(290)f(37.)q(333)h(37.)q(375)g(37.)q(304) 276
1850 y(10)f(40.)q(003)h(39.)q(988)g(40.)q(048)g(40.)q(016)f(40.)q(021)h
(40.)q(052)g(39.)q(976)f(39.)q(985)h(40.)q(015)g(39.)q(959) 276
1941 y(11)f(42.)q(575)h(42.)q(599)g(42.)q(586)g(42.)q(529)f(42.)q(559)h
(42.)q(589)g(42.)q(590)f(42.)q(550)h(42.)q(569)g(42.)q(507) 276
2033 y(12)f(45.)q(118)h(44.)q(915)g(44.)q(967)g(45.)q(159)f(44.)q(882)h
(45.)q(038)g(45.)q(104)f(45.)q(038)h(44.)q(952)g(44.)q(993) 276
2215 y(10)f(24.)q(683)h(25.)q(064)g(24.)q(801)g(24.)q(534)f(24.)q(834)h
(24.)q(904)g(24.)q(932)f(24.)q(840)h(24.)q(891)g(24.)q(814) 276
2307 y(20)f(50.)q(730)h(51.)q(063)g(50.)q(467)g(50.)q(367)f(50.)q(622)h
(50.)q(548)g(50.)q(622)f(50.)q(648)h(50.)q(580)g(50.)q(448) 276
2398 y(30)f(77.)q(628)h(78.)q(018)g(77.)q(082)g(77.)q(181)f(77.)q(338)h
(77.)q(238)g(77.)q(332)f(77.)q(291)h(77.)q(219)g(77.)q(100) 276
2489 y(40) 67 b(105.)q(698)h(106.)q(094)g(104.)q(729)f(105.)r(113)g
(105.)q(259)h(104.)q(995)f(105.)r(116)g(105.)q(029)h(104.)q(911)f(104.)
r(753) 276 2581 y(50)g(134.)q(985)h(135.)q(439)g(133.)q(489)f(134.)r
(244)g(134.)q(230)h(133.)q(994)f(134.)r(009)g(133.)q(907)h(133.)q(775)f
(133.)r(576) 276 2672 y(60)g(165.)q(601)h(166.)q(298)g(163.)q(509)f
(164.)r(777)g(164.)q(667)h(164.)q(130)f(164.)r(216)g(164.)q(062)h(163.)
q(853)f(163.)r(558)p Black Black Fi 80 3062 a(T) -7 b(ab)r(ella) 22
b(7.2:)p Fh 21 w(Elab)r(orazione)e(dei)g(dati)h(p)r(er)e(la)h(p)r
(ercorrenza)g(di)g(do)r(dici)g(giri)f(in)g(accelerazione)j(e)e(sessan)n
(ta)g(in)g(decelerazione:)h(medie) 80 3140 y(dei)e(tempi)g(della)f(tab)
r(ella)h(preceden)n(te,)i(di\013erenze)e(e)g(tempi)g(in)n(termedi,)f
(misure)g(in)g(secondi)i(tutte)g(con)f(il)f(relativ)n(o)h(errore.)e(Le)
i(ultime) 80 3219 y(due) 25 b(colonne)f(riguardano)g(la)f(v)n(elo)r
(cit\022) -35 b(a) 25 b(angolare)f(media)g(\()p Fe 1681
3208 a(rad)p Fh 1761 3219 a(/)p Fe -4 w(s)p Fh 1 w(\).)p
Fg 607 3423 a(giri)p Fd 929 3409 a(\026)p Ff 927 3423
a(t)p Fc 955 3431 a(i)p Ff 1218 3423 a(\033)p Fe 1263
3426 a(\026)p Fc 1262 3435 a(t)p Fk 1286 3446 a(i)p Fd
1501 3423 a(\001)p Ff(t)p Fc 1593 3431 a(i)p Ff 1780
3423 a(\033)p Fe 1824 3431 a(\001)p Fc(t)p Fk 1898 3442
a(i)p Ff 2135 3423 a(t)p Fb 2163 3391 a(\003)p Fc 2163
3437 a(i)p Ff 2426 3423 a(\033)p Fc 2470 3431 a(t)p Fa
2494 3417 a(\003)p Fd 2722 3423 a(\026)p Ff -44 w(!)p
Fc 2764 3431 a(i)p Ff 3002 3423 a(\033)p Fc 3046 3431
a(!)p 558 3454 2646 4 v Fd 691 3518 a(1) 177 b(7.150) 101
b(0.011) 139 b(7.)q(150) 101 b(0.011) 177 b(3.)q(575) 101
b(0.006)g(0.)q(879)f(0.)q(0001) 691 3609 y(2) 138 b(12.)q(575) 101
b(0.056) 139 b(5.)q(425) 101 b(0.057) 177 b(9.)q(862) 101
b(0.028)g(1.)q(158)f(0.)q(0007) 691 3700 y(3) 138 b(17.)q(265) 101
b(0.009) 139 b(4.)q(690) 101 b(0.056) 139 b(14.)q(920) 101
b(0.028)g(1.)q(340)f(0.)q(0009) 691 3792 y(4) 138 b(21.)q(368) 101
b(0.009) 139 b(4.)q(103) 101 b(0.013) 139 b(19.)q(317) 101
b(0.006)g(1.)q(531)f(0.)q(0001) 691 3883 y(5) 138 b(25.)q(027) 101
b(0.018) 139 b(3.)q(659) 101 b(0.020) 139 b(23.)q(198) 101
b(0.010)g(1.)q(717)f(0.)q(0002) 691 3974 y(6) 138 b(28.)q(424) 101
b(0.013) 139 b(3.)q(396) 101 b(0.022) 139 b(26.)q(726) 101
b(0.011)g(1.)q(850)f(0.)q(0003) 691 4066 y(7) 138 b(31.)q(568) 101
b(0.013) 139 b(3.)q(144) 101 b(0.018) 139 b(29.)q(996) 101
b(0.009)g(1.)q(998)f(0.)q(0002) 691 4157 y(8) 138 b(34.)q(544) 101
b(0.010) 139 b(2.)q(976) 101 b(0.016) 139 b(33.)q(056) 101
b(0.008)g(2.)q(111)f(0.)q(0002) 691 4248 y(9) 138 b(37.)q(341) 101
b(0.016) 139 b(2.)q(797) 101 b(0.019) 139 b(35.)q(943) 101
b(0.009)g(2.)q(246)f(0.)q(0003) 653 4340 y(10) 138 b(40.)q(006) 101
b(0.010) 139 b(2.)q(665) 101 b(0.018) 139 b(38.)q(674) 101
b(0.009)g(2.)q(358)f(0.)q(0003) 653 4431 y(11) 138 b(42.)q(565) 101
b(0.009) 139 b(2.)q(559) 101 b(0.013) 139 b(41.)q(286) 101
b(0.007)g(2.)q(455)f(0.)q(0002) 653 4522 y(12) 138 b(45.)q(017) 101
b(0.029) 139 b(2.)q(451) 101 b(0.030) 139 b(43.)q(791) 101
b(0.015)g(2.)q(563)f(0.)q(0010) 653 4705 y(10) 138 b(24.)q(830) 101
b(0.143)g(24.)q(830)g(0.143) 139 b(12.)q(415) 101 b(0.072)g(0.)q(253)f
(0.)q(0002) 653 4796 y(20) 138 b(50.)q(610) 101 b(0.192)g(25.)q(780)g
(0.240) 139 b(37.)q(720) 101 b(0.120)g(0.)q(244)f(0.)q(0005) 653
4888 y(30) 138 b(77.)q(343) 101 b(0.283)g(26.)q(733)g(0.342) 139
b(63.)q(976) 101 b(0.171)g(0.)q(235)f(0.)q(0010) 653
4979 y(40)g(105.)q(170)h(0.426)g(27.)q(827)g(0.511) 139
b(91.)q(256) 101 b(0.256)g(0.)q(226)f(0.)q(0021) 653
5070 y(50)g(134.)q(165)h(0.613)g(28.)q(995)g(0.746)g(119.)q(667)g
(0.373)g(0.)q(217)f(0.)q(0042) 653 5162 y(60)g(164.)q(467)h(0.897)g
(30.)q(302)g(1.086)g(149.)q(316)g(0.543)g(0.)q(207)f(0.)q(0081)p
Black Black Fw 1860 5857 a(3)p Black dyy eop end
%%Page: 4 4
TeXDict begin 4 3 bop Black Black Black Fi 80 559 a(Gra\014co) 34
b(7.1:)p Fh 34 w(F) -6 b(ase) 31 b(di)f(accelerazione,)i(in)n(terp)r
(olazione)f(con)h(tempi)e(in)n(termedi)h(in)f(ascissa)g(\(s\))h(e)g(v)n
(elo)r(cit\022) -35 b(a) 32 b(angolari)e(medie)h(in) 80
638 y(ordinata) 25 b(\()p Fe 390 627 a(rad)p Fh 470 638
a(/)p Fe -4 w(s)p Fh 1 w(\).)e(L'errore)g(sulla)g(misura)d(\022) -33
b(e) 24 b(minore)g(della)f(dimensione)h(del)f(pun)n(to)i(c)n(he)g(la)e
(rappresen)n(ta)i(sul)e(gra\014co.) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 41.91562 18.21196 36.49559 18.21196  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial Fw 529 2454 a(0.8) 380 2578
y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 41.91562 39.5039 36.49559 39.5039  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 529 2277 a(1.0) 380
2578 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 41.91562 60.79254 36.49559 60.79254  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 529 2100
a(1.2) 380 2578 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 41.91562 82.10434 36.49559 82.10434  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial
529 1923 a(1.4) 380 2578 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 41.91562 103.39629 36.49559 103.39629  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end


@endspecial 529 1747 a(1.6) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 41.91562 124.68823 36.49559 124.68823  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 529 1570 a(1.8) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 41.91562 145.97688 36.49559 145.97688  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 529 1393 a(2.0) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 41.91562 167.29198 36.49559 167.29198  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 529 1216 a(2.2) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 41.91562 188.58063 36.49559 188.58063  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 529 1039 a(2.4) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 41.91562 209.87257 36.49559 209.87257  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 529 863 a(2.6) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 36.49559 22.54907 36.49559 18.21196  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 676 2529 a(0) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 70.89597 22.54907 70.89597 18.21196  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 962 2529 a(5) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 105.29633 22.54907 105.29633 18.21196  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 1227 2529 a(10) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 139.73529 22.54907 139.73529 18.21196  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 1513 2529 a(15) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 174.13567 22.54907 174.13567 18.21196  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 1798 2529 a(20) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 208.53604 22.54907 208.53604 18.21196  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 2084 2529 a(25) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 242.9364 22.54907 242.9364 18.21196  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 2370 2529 a(30) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 277.36986 22.54907 277.36986 18.21196  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 2655 2529 a(35) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 311.77022 22.54907 311.77022 18.21196  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 2941 2529 a(40) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 346.1706 22.54907 346.1706 18.21196  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 3227 2529 a(45) 380 2578 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 36.49559 209.87257 346.1706 209.87257 346.1706
18.21196 36.49559 18.21196 36.49559 209.87257  /Lineto /lineto load
def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray 1. .setopacityalpha
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 337.86136 206.38235 335.04382 204.58267 332.25937
202.75981 329.48044 200.94028 326.6629 199.14058 323.87845 197.31773
321.094 195.49818 318.27646 193.6985 315.49202 191.87566 312.67448
190.0561 309.89554 188.25641 307.1111 186.43356 304.29356 184.63387
301.50911 182.81433 298.73018 180.99149 295.90712 179.1951 293.12819
177.37225 290.34373 175.5494 287.5262 173.753 284.74176 171.93016 281.92422
170.11063 279.14528 168.31093 276.36084 166.48808 273.5433 164.66853
270.75885 162.86884 267.9744 161.04599 265.15688 159.22646 262.37793
157.42676 259.59348 155.60391 256.77596 153.80421 253.9915 151.98468
251.21255 150.16182 248.38951 148.36214 245.61058 146.54259 242.79305
144.71974 240.00859 142.92004 237.22415 141.10051 234.40662 139.27765
231.62767 137.47797 228.84323 135.65842 226.0257 133.83557 223.24124
132.03587 220.46231 130.21634 217.63925 128.41664 214.86032 126.5938
212.04279 124.77425 209.25833 122.97456 206.47389 121.15501 203.65636
119.33217 200.8719 117.53247 198.09297 115.71294 195.27544 113.89008
192.49098 112.0904 189.70653 110.27084 186.88899 108.448 184.11006
106.6483 181.28702 104.82877 178.50807 103.02907 175.72363 101.20622
172.9061 99.38667 170.12164 97.58699 167.34271 95.76413 164.52518 93.9446
161.74072 92.1449 158.95627 90.32205 156.13875 88.50252 153.3543 86.70282
150.53676 84.87997 147.75783 83.06042 144.97337 81.26073 142.15584
79.43788 139.37138 77.6382 136.59245 75.81865 133.76941 73.9958 130.99046
72.1961 128.20601 70.37657 125.38849 68.55371 122.60403 66.75732 119.7865
64.93448 117.00757 63.11494 114.22311 61.31525 111.40558 59.4924 108.62112
57.67285 105.83669 55.87317 103.01915 54.05031 100.2402 52.23077 97.45576
50.43108 94.63823 48.60823 91.85378 46.80853 89.03624 44.989 86.25179
43.16614 83.47285 41.36646 80.65532 39.5469 77.87086 37.72406 75.08643
35.92436 72.26889 34.10483 69.48994 32.28197 66.7055 30.48228 63.88797
28.66273 61.10352 26.83989 61.10352 26.83989  /Lineto /lineto load
def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray 1. .setopacityalpha
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 61.10352 26.62485
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 104.359 56.3264
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 139.15636 75.70947
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 169.43794 96.04533
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 196.1411 115.84195
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 220.4237 130.02115
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 242.9364 145.7817
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 263.9659 157.79398
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 283.84302 172.16835
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 302.6284 184.11447
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 320.62532 194.43623
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 337.86136 205.92583
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 36.49559 209.87257 346.1706 209.87257 346.1706
18.21196 36.49559 18.21196 36.49559 209.87257  /Lineto /lineto load
def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray 1. .setopacityalpha
0  setlinecap stroke  grestore end
 
@endspecial Black Black Fi
80 3293 a(Gra\014co)c(7.2:)p Fh 19 w(F) -6 b(ase) 17
b(di)g(accelerazione,)i(in)n(terp)r(olazione)f(con)g(radice)g(quadrata)
g(del)g(n)n(umero)f(di)g(giri)g(in)g(ascissa)g(e)g(tempi)h(in)f
(ordinata.) 80 3372 y(L'errore) 23 b(sui)g(tempi)f(\022) -33
b(e) 24 b(minore)f(della)g(dimensione)h(del)g(pun)n(to)h(sul)e
(gra\014co.) 380 5311 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 51.31108 27.31958 45.89104 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial
Fw 672 5111 a(5) 380 5311 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 51.31108 47.61244 45.89104 47.61244  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end


@endspecial 630 4943 a(10) 380 5311 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 51.31108 67.88214 45.89104 67.88214  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 630 4775 a(15) 380 5311 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 51.31108 88.17499 45.89104 88.17499  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 630 4606 a(20) 380 5311 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 51.31108 108.448 45.89104 108.448  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 630 4438 a(25) 380 5311 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 51.31108 128.74086 45.89104 128.74086  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 630 4269 a(30) 380 5311 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 51.31108 149.01385 45.89104 149.01385  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 630 4101 a(35) 380 5311 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 51.31108 169.30672 45.89104 169.30672  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 630 3933 a(40) 380 5311 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 51.31108 189.57971 45.89104 189.57971  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 630 3764 a(45) 380 5311 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 51.31108 209.87257 45.89104 209.87257  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 630 3596 a(50) 380 5311 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 45.89104 31.65341 45.89104 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 708 5187 a(1.0) 380 5311 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 95.93947 31.65341 95.93947 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 1124 5187 a(1.5) 380 5311 y
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 145.9879 31.65341 145.9879 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 1539 5187 a(2.0) 380
5311 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 196.03082 31.65341 196.03082 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 1955 5187
a(2.5) 380 5311 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 246.07925 31.65341 246.07925 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial
2370 5187 a(3.0) 380 5311 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 296.12767 31.65341 296.12767 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end


@endspecial 2786 5187 a(3.5) 380 5311 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 346.1706 31.65341 346.1706 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 3201 5187 a(4.0) 380 5311 y
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 45.89104 209.87257 346.1706 209.87257 346.1706
27.31958 45.89104 27.31958 45.89104 209.87257  /Lineto /lineto load
def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray 1. .setopacityalpha
0  setlinecap stroke  grestore end
 
@endspecial 506 4327 a
 tx@Dict begin 90  RotBegin  end
 506
4327 a Fw 330 4347 a(temp)r(o) 28 b(\(s\)) 506 4327 y
 tx@Dict begin RotEnd  end

506 4327 a Fu 1948 5237 a(p)p 2017 5237 50 4 v Fv 2017
5297 a(n) 380 5311 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 306.7141 189.62273 304.47551 188.08107 302.27
186.52289 300.0645 184.98125 297.82591 183.41974 295.6204 181.86156
293.4149 180.3199 291.17632 178.7584 288.97081 177.22006 286.7653 175.65857
284.52672 174.09708 282.32121 172.55873 280.12122 170.99724 277.87712
169.4589 275.67162 167.8974 273.47162 166.33589 271.22752 164.79756
269.02753 163.23605 266.82202 161.69772 264.61652 160.13622 262.37793
158.59789 260.17242 157.03638 257.96692 155.47488 255.72833 153.93654
253.52283 152.37505 251.31732 150.8334 249.07874 149.2752 246.87323
147.71371 244.66772 146.17206 242.42914 144.61388 240.22363 143.07222
238.02364 141.51073 235.77954 139.94923 233.57404 138.41089 231.37404
136.8494 229.12994 135.31105 226.92995 133.74956 224.72444 132.18806
222.51894 130.64972 220.28035 129.08823 218.07484 127.54988 215.86934
125.98839 213.63075 124.42688 211.42525 122.88855 209.21974 121.32704
206.98116 119.78871 204.77565 118.2272 202.57014 116.66571 200.33156
115.12737 198.12605 113.56587 195.92606 112.02423 193.68196 110.46603
191.48196 108.9244 189.27646 107.36288 187.07095 105.8047 184.83237
104.26305 182.62686 102.70155 180.42136 101.16321 178.18277 99.60172
175.97726 98.04022 173.77176 96.50188 171.53317 94.94038 169.32767
93.40204 167.12216 91.84055 164.88358 90.27905 162.67807 88.7407 160.47807
87.17921 158.23398 85.64087 156.02847 84.07938 153.82848 82.51787 151.58437
80.97954 149.38438 79.41803 147.17888 77.8797 144.97337 76.31819 142.73479
74.7567 140.52928 73.21835 138.32378 71.65686 136.08519 70.11522 133.87968
68.55371 131.67418 66.99553 129.4356 65.45387 127.23009 63.89238 125.02458
62.35403 122.78598 60.79254 120.58047 59.23105 118.3805 57.6927 116.13638
56.13121 113.9364 54.59286 111.7309 53.03137 109.48679 51.49303 107.2868
49.93153 105.0813 48.37003 102.8758 46.8317 100.6372 45.2702 98.4317
43.73186 96.2262 42.17036 93.9876 40.60886 91.78209 39.07053 89.57658
37.50902 87.338 35.96738 87.338 35.96738  /Lineto /lineto load def
false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray 1. .setopacityalpha
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 87.338 36.03354
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
0. setgray (b) show grestore gsave 1.  1.  scale (c) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 119.17447 58.04007
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
0. setgray (b) show grestore gsave 1.  1.  scale (c) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 145.9879 77.07579
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
0. setgray (b) show grestore gsave 1.  1.  scale (c) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 169.61989 93.72626
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
0. setgray (b) show grestore gsave 1.  1.  scale (c) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 190.9747 108.55717
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
0. setgray (b) show grestore gsave 1.  1.  scale (c) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 210.63127 122.346
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
0. setgray (b) show grestore gsave 1.  1.  scale (c) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 228.9149 135.09271
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
0. setgray (b) show grestore gsave 1.  1.  scale (c) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 246.07925 147.17116
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
0. setgray (b) show grestore gsave 1.  1.  scale (c) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 262.33934 158.50856
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
0. setgray (b) show grestore gsave 1.  1.  scale (c) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 277.77235 169.32986
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
0. setgray (b) show grestore gsave 1.  1.  scale (c) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 292.54924 179.7145
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
0. setgray (b) show grestore gsave 1.  1.  scale (c) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 306.7141 189.66573
 false NArray /DS 2.27626 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
0. setgray (b) show grestore gsave 1.  1.  scale (c) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 45.89104 209.87257 346.1706 209.87257 346.1706
27.31958 45.89104 27.31958 45.89104 209.87257  /Lineto /lineto load
def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray 1. .setopacityalpha
0  setlinecap stroke  grestore end
 
@endspecial Black Black Fw
1860 5857 a(4)p Black dyy eop end
%%Page: 5 5
TeXDict begin 5 4 bop Black Black Black Fi 80 1932 a(Gra\014co) 20
b(7.3:)p Fh 20 w(F) -6 b(ase) 18 b(di)g(decelerazione,)i(in)n(terp)r
(olazione)f(con)g(tempi)g(in)n(termedi)f(in)g(ascissa)g(e)g(v)n(elo)r
(cit\022) -35 b(a) 20 b(angolari)e(medie)g(in)g(ordinata.) 380
3939 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 62.87343 27.31958 57.4534 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial Fw 662
3739 a(0.19) 380 3939 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 62.87343 53.40189 57.4534 53.40189  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial
662 3523 a(0.20) 380 3939 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 62.87343 79.4809 57.4534 79.4809  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end


@endspecial 662 3306 a(0.21) 380 3939 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 62.87343 105.5632 57.4534 105.5632  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 662 3090 a(0.22) 380 3939 y
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 62.87343 131.62566 57.4534 131.62566  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 662 2873 a(0.23) 380
3939 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 62.87343 157.70796 57.4534 157.70796  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 662 2657
a(0.24) 380 3939 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 62.87343 183.79027 57.4534 183.79027  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial
662 2440 a(0.25) 380 3939 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 62.87343 209.87257 57.4534 209.87257  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end


@endspecial 662 2224 a(0.26) 380 3939 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 57.4534 31.65341 57.4534 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 850 3815 a(0) 380 3939 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 93.55202 31.65341 93.55202 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 1129 3815 a(20) 380 3939 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 129.65062 31.65341 129.65062 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 1429 3815 a(40) 380 3939 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 165.71614 31.65341 165.71614 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 1728 3815 a(60) 380 3939 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 201.81476 31.65341 201.81476 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 2028 3815 a(80) 380 3939 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 237.91336 31.65341 237.91336 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 2307 3815 a(100) 380 3939 y
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 274.01198 31.65341 274.01198 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 2607 3815 a(120) 380
3939 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 310.07199 31.65341 310.07199 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial 2906 3815
a(140) 380 3939 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 346.1706 31.65341 346.1706 27.31958  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial
3206 3815 a(160) 380 3939 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 57.4534 209.87257 346.1706 209.87257 346.1706
27.31958 57.4534 27.31958 57.4534 209.87257  /Lineto /lineto load def
false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray 1. .setopacityalpha
0  setlinecap stroke  grestore end


@endspecial 506 2955 a
 tx@Dict begin 90  RotBegin  end
 506 2955 a Fw 80 2975 a(v)n(elo)r(cit\022) -42
b(a) 26 b(angolare)g(\()p Fo 751 2958 a(rad)p Fw 837
2975 a(/)p Fo -5 w(s)p Fw(\)) 506 2955 y
 tx@Dict begin RotEnd  end
 506 2955 a Fw
1879 3922 a(temp)r(o)i(\(s\)) 380 3939 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 327.88695 70.8331 325.36165 72.04724 322.86392
73.26137 320.33861 74.45233 317.84088 75.66647 315.34866 76.8806 312.82335
78.09473 310.32562 79.30887 307.83339 80.50314 305.30258 81.71727 302.81036
82.93141 300.31813 84.14554 297.78732 85.35966 295.2951 86.55064 292.76428
87.76477 290.27206 88.9789 287.77985 90.19302 285.24902 91.40717 282.7568
92.59813 280.26459 93.81227 277.73376 95.0264 275.24155 96.24052 272.74931
97.45465 270.2185 98.6688 267.72629 99.86307 265.19547 101.0772 262.70325
102.29134 260.2055 103.50546 257.6802 104.71959 255.18799 105.91057
252.69025 107.1247 250.16495 108.33882 247.6672 109.55296 245.17499
110.76709 242.64418 111.96136 240.15195 113.1755 237.62114 114.38963
235.12892 115.60376 232.63669 116.81789 230.10588 118.00887 227.61365
119.22299 225.12143 120.43712 222.59062 121.65126 220.09839 122.86539
217.56758 124.07951 215.07536 125.2738 212.58313 126.48793 210.05232
127.70206 207.5601 128.91618 205.06787 130.13033 202.53706 131.32129
200.04485 132.53543 197.55261 133.74956 195.0218 134.96368 192.52957
136.17781 189.99876 137.3721 187.50655 138.58623 185.0088 139.80035
182.4835 141.0145 179.98576 142.22862 177.49355 143.4196 174.96825
144.63373 172.4705 145.84785 169.97829 147.06198 167.44746 148.27612
164.95525 149.4704 162.42444 150.68452 159.9322 151.89867 157.43999
153.1128 154.90916 154.32692 152.41695 155.54105 149.92473 156.73203
147.3939 157.94615 144.90169 159.16028 142.40947 160.37442 139.87865
161.58855 137.38643 162.77953 134.85562 163.99365 132.36339 165.20778
129.87117 166.4219 127.34036 167.63605 124.84813 168.83032 122.3504
170.04445 119.8251 171.25859 117.33287 172.47272 114.80206 173.68684
112.30983 174.87782 109.8121 176.09195 107.2868 177.30608 104.78906
178.52022 102.29684 179.73434 99.76602 180.94847 97.2738 182.14276
94.78159 183.35689 92.25076 184.57101 89.75854 185.78514 87.22772 186.99928
84.7355 188.19025 82.24329 189.40437 79.71246 190.61852 79.71246 190.61852
 /Lineto /lineto load def false 0  setlinejoin Line  gsave 0.54034
SLW 0. setgray 1. .setopacityalpha 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 79.85582 192.13701 79.85582 191.0949  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 82.5686 191.0949 77.14857 191.0949  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 82.5686 192.13701 77.14857 192.13701  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 125.53185 169.4589 125.53185 166.83545  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 128.24461 166.83545 122.82458 166.83545  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 128.24461 169.4589 122.82458 169.4589  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 172.9061 147.28033 172.9061 142.07645  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 175.61336 142.07645 170.19333 142.07645  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 175.61336 147.28033 170.19333 147.28033  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 222.12195 126.68312 222.12195 115.73279  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 224.82921 115.73279 219.40918 115.73279  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 224.82921 126.68312 219.40918 126.68312  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 273.39995 108.68619 273.39995 86.78883  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 276.10721 86.78883 270.68718 86.78883  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 276.10721 108.68619 270.68718 108.68619  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 326.87793 92.77347 326.87793 50.53694  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 329.58519 50.53694 324.16516 50.53694  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 329.58519 92.77347 324.16516 92.77347  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 80.0047 191.6176 79.71246 191.6176  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 79.71246 193.24196 79.71246 189.98994  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 80.0047 193.24196 80.0047 189.98994  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 125.7524 168.13559 125.3168 168.13559  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 125.3168 169.76326 125.3168 166.51123  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 125.7524 169.76326 125.7524 166.51123  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 173.19281 144.67673 172.58078 144.67673  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 172.58078 146.3044 172.58078 143.05238  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 173.19281 146.3044 173.19281 143.05238  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 222.59062 121.19803 221.65327 121.19803  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 221.65327 122.82237 221.65327 119.57036  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 222.59062 122.82237 222.59062 119.57036  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 274.05057 97.73917 272.71072 97.73917  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 272.71072 99.36353 272.71072 96.11151  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 274.05057 99.36353 274.05057 96.11151  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 327.88695 71.65686 325.902 71.65686  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 325.902 73.28122 325.902 70.0292  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 327.88695 73.28122 327.88695 70.0292  /Lineto
/lineto load def false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray
1. .setopacityalpha 0  setlinecap 3.61151 3.61151 0.0 0.0 0 0 add 
DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 79.85582 191.6176
 false NArray /DS 0.28436 0. CLW mul add 2 div def /PSTricksDotFont
45. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
1. setgray (r) show grestore gsave 1.  1.  scale (s) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 125.53185 168.13559
 false NArray /DS 0.28436 0. CLW mul add 2 div def /PSTricksDotFont
45. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
1. setgray (r) show grestore gsave 1.  1.  scale (s) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 172.9061 144.67673
 false NArray /DS 0.28436 0. CLW mul add 2 div def /PSTricksDotFont
45. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
1. setgray (r) show grestore gsave 1.  1.  scale (s) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 222.12195 121.19803
 false NArray /DS 0.28436 0. CLW mul add 2 div def /PSTricksDotFont
45. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
1. setgray (r) show grestore gsave 1.  1.  scale (s) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 273.39995 97.73917
 false NArray /DS 0.28436 0. CLW mul add 2 div def /PSTricksDotFont
45. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
1. setgray (r) show grestore gsave 1.  1.  scale (s) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.3639 SLW 0. setgray  [ 326.87793 71.65686
 false NArray /DS 0.28436 0. CLW mul add 2 div def /PSTricksDotFont
45. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
1. setgray (r) show grestore gsave 1.  1.  scale (s) show grestore
} bind def  newpath n { transform floor .5 add exch floor .5 add exch
itransform Dot } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.54034 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 57.4534 209.87257 346.1706 209.87257 346.1706
27.31958 57.4534 27.31958 57.4534 209.87257  /Lineto /lineto load def
false 0  setlinejoin Line  gsave 0.54034 SLW 0. setgray 1. .setopacityalpha
0  setlinecap stroke  grestore end
 
@endspecial
Black Black 1860 5857 a(5)p Black dyy eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
